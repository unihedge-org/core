{
  "_format": "hh3-artifact-1",
  "contractName": "MarketGetter",
  "sourceName": "contracts/MarketGetter.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Market",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rateQ96",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "acqPriceQ96",
          "type": "uint256"
        }
      ],
      "name": "clcAmountToApprove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "approvalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Market",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "frameKey",
          "type": "uint256"
        }
      ],
      "name": "getFrame",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "frameKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "trades",
              "type": "uint256[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rateQ96",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "taxCollectedT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "taxFeeT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "taxPotT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "poolBalanceT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dischargedRewardT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "undischargedBalanceT",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Market.Settlement",
              "name": "settlement",
              "type": "tuple"
            }
          ],
          "internalType": "struct Market.Frame",
          "name": "frame",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Market",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "getFramesByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "frameKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "trades",
              "type": "uint256[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rateQ96",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "taxCollectedT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "taxFeeT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "taxPotT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "poolBalanceT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dischargedRewardT",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "undischargedBalanceT",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Market.Settlement",
              "name": "settlement",
              "type": "tuple"
            }
          ],
          "internalType": "struct Market.Frame[]",
          "name": "frames",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Market",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lotId",
          "type": "uint256"
        }
      ],
      "name": "getLot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "trades",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct Market.Lot",
          "name": "lot",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Market",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "getLotsByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "trades",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct Market.Lot[]",
          "name": "lots",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Market",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "timestamp",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "blockNumber",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "lotID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "acquisitionPriceQ96",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "taxT",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeT",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "horizon",
              "type": "uint256"
            },
            {
              "internalType": "enum Market.STrade",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "buyoutCostT",
              "type": "uint256"
            }
          ],
          "internalType": "struct Market.Trade",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Market",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "getTradesByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "timestamp",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "blockNumber",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "lotID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "acquisitionPriceQ96",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "taxT",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeT",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "horizon",
              "type": "uint256"
            },
            {
              "internalType": "enum Market.STrade",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "buyoutCostT",
              "type": "uint256"
            }
          ],
          "internalType": "struct Market.Trade[]",
          "name": "trades",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "frameKey",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lotKeyTokens",
          "type": "uint256"
        }
      ],
      "name": "packLotId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lotId",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lotId",
          "type": "uint256"
        }
      ],
      "name": "unpackLotId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "frameKey",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lotKeyTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052348015600e575f5ffd5b5061177b8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610090575f3560e01c8063add46d9311610063578063add46d931461011d578063ca142f7514610145578063d00d7b1914610165578063de73259514610185578063e43d33e9146101a6575f5ffd5b80630d504b5b146100945780631da0244e146100bd5780631e46fc03146100dd5780633191b50e146100fd575b5f5ffd5b6100a76100a2366004610f41565b6101b9565b6040516100b49190610fc3565b60405180910390f35b6100d06100cb366004610f41565b61023d565b6040516100b4919061107f565b6100f06100eb366004611091565b6102ae565b6040516100b4919061118d565b61011061010b366004611091565b6104b8565b6040516100b491906111db565b61013061012b36600461123e565b61071b565b604080519283526020830191909152016100b4565b610158610153366004610f41565b610740565b6040516100b49190611255565b610178610173366004611091565b6107b0565b6040516100b49190611264565b6101986101933660046112bb565b610a2c565b6040519081526020016100b4565b6101986101b43660046112f3565b610dee565b6040805180820182525f81526060602082015290516355ccae8960e11b8152600481018390526001600160a01b0384169063ab995d12906024015f60405180830381865afa15801561020d573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526102349190810190611421565b90505b92915050565b610245610e43565b60405163773d51eb60e01b8152600481018390526001600160a01b0384169063773d51eb906024015f60405180830381865afa158015610287573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261023491908101906114c2565b6060818311156102d95760405162461bcd60e51b81526004016102d0906115d4565b60405180910390fd5b5f846001600160a01b0316633aaa18a46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610316573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033a9190611603565b90508015806103495750808410155b1561038757604080515f808252602082019092529061037e565b61036b610eb5565b8152602001906001900390816103635790505b509150506104b1565b80831061039c5761039960018261162e565b92505b6103a6848461162e565b6103b1906001611641565b6001600160401b038111156103c8576103c8611313565b60405190808252806020026020018201604052801561040157816020015b6103ee610eb5565b8152602001906001900390816103e65790505b509150835b8381116104ae57604051632db25e0560e01b8152600481018290526001600160a01b03871690632db25e059060240161014060405180830381865afa158015610451573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104759190611678565b83610480878461162e565b8151811061049057610490611719565b602002602001018190525080806104a69061172d565b915050610406565b50505b9392505050565b6060818311156104da5760405162461bcd60e51b81526004016102d0906115d4565b5f846001600160a01b031663de98c7356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610517573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053b9190611603565b905080158061054a5750808410155b1561058757604080515f808252602082019092529061037e565b61056c610e43565b815260200190600190039081610564579050509150506104b1565b80831061059c5761059960018261162e565b92505b6105a6848461162e565b6105b1906001611641565b6001600160401b038111156105c8576105c8611313565b60405190808252806020026020018201604052801561060157816020015b6105ee610e43565b8152602001906001900390816105e65790505b509150835b8381116104ae5760405162143a2160e61b8152600481018290525f906001600160a01b0388169063050e884090602401602060405180830381865afa158015610651573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106759190611603565b60405163773d51eb60e01b8152600481018290529091506001600160a01b0388169063773d51eb906024015f60405180830381865afa1580156106ba573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526106e191908101906114c2565b846106ec888561162e565b815181106106fc576106fc611719565b60200260200101819052505080806107139061172d565b915050610606565b5f8061073160016801000000000000000061162e565b83169360409390931c92915050565b610748610eb5565b604051632db25e0560e01b8152600481018390526001600160a01b03841690632db25e059060240161014060405180830381865afa15801561078c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102349190611678565b6060818311156107d25760405162461bcd60e51b81526004016102d0906115d4565b5f846001600160a01b03166381151b1f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561080f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108339190611603565b90508015806108425750808410155b1561088b57604080515f808252602082019092529061037e565b604080518082019091525f81526060602082015281526020019060019003908161085c579050509150506104b1565b8083106108a05761089d60018261162e565b92505b6108aa848461162e565b6108b5906001611641565b6001600160401b038111156108cc576108cc611313565b60405190808252806020026020018201604052801561091157816020015b604080518082019091525f8152606060208201528152602001906001900390816108ea5790505b509150835b8381116104ae5760405163af9e2b0d60e01b8152600481018290525f906001600160a01b0388169063af9e2b0d90602401602060405180830381865afa158015610962573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109869190611603565b6040516355ccae8960e11b8152600481018290529091506001600160a01b0388169063ab995d12906024015f60405180830381865afa1580156109cb573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526109f29190810190611421565b846109fd888561162e565b81518110610a0d57610a0d611719565b6020026020010181905250508080610a249061172d565b915050610916565b6040516361eee2cb60e01b8152600481018490525f9081906001600160a01b038716906361eee2cb90602401602060405180830381865afa158015610a73573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a979190611603565b905042866001600160a01b031663ef78d4fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610afa9190611603565b610b049083611641565b1015610b525760405162461bcd60e51b815260206004820152601960248201527f4672616d65206d757374206265206675747572652f6f70656e0000000000000060448201526064016102d0565b60405163871995e960e01b8152600481018590525f906001600160a01b0388169063871995e990602401602060405180830381865afa158015610b97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbb9190611603565b90505f610bc88383610dee565b60405163084b2b4f60e11b815260048101859052602481018790529091505f906001600160a01b038a1690631096569e90604401602060405180830381865afa158015610c17573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c3b9190611603565b6040516355ccae8960e11b8152600481018490529091505f906001600160a01b038b169063ab995d12906024015f60405180830381865afa158015610c82573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610ca99190810190611421565b80519091505f03610cc057509350610de692505050565b602081015180515f9190610cd69060019061162e565b81518110610ce657610ce6611719565b602002602001015190505f8b6001600160a01b0316632db25e05836040518263ffffffff1660e01b8152600401610d1f91815260200190565b61014060405180830381865afa158015610d3b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d5f9190611678565b60800151604051632c43871760e01b8152600481018290529091505f906001600160a01b038e1690632c43871790602401602060405180830381865afa158015610dab573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dcf9190611603565b9050610ddb8186611641565b985050505050505050505b949350505050565b5f6001600160401b03831115610e3b5760405162461bcd60e51b81526020600482015260126024820152716672616d654b657920746f6f206c6172676560701b60448201526064016102d0565b5060401b1790565b60405180606001604052805f815260200160608152602001610eb06040518061014001604052805f81526020015f81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b905290565b6040518061014001604052805f6001600160401b031681526020015f6001600160401b031681526020015f81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f6002811115610f1e57610f1e6110c3565b81526020015f81525090565b6001600160a01b0381168114610f3e575f5ffd5b50565b5f5f60408385031215610f52575f5ffd5b8235610f5d81610f2a565b946020939093013593505050565b5f8151808452602084019350602083015f5b82811015610f9b578151865260209586019590910190600101610f7d565b5093949350505050565b805182525f602082015160406020850152610de66040850182610f6b565b602081525f6102346020830184610fa5565b805182525f60208201516101806020850152610ff5610180850182610f6b565b905060408301518051604086015260208101516060860152604081015161102760808701826001600160a01b03169052565b50606081015160a0860152608081015160c086015260a081015160e086015260c081015161010086015260e0810151610120860152610100810151610140860152610120810151610160860152508091505092915050565b602081525f6102346020830184610fd5565b5f5f5f606084860312156110a3575f5ffd5b83356110ae81610f2a565b95602085013595506040909401359392505050565b634e487b7160e01b5f52602160045260245ffd5b600381106110f357634e487b7160e01b5f52602160045260245ffd5b9052565b80516001600160401b03168252602081015161111e60208401826001600160401b03169052565b5060408101516040830152606081015161114360608401826001600160a01b03169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516111806101008401826110d7565b5061012090810151910152565b602080825282518282018190525f918401906040840190835b818110156111d0576111b98385516110f7565b6020939093019261014092909201916001016111a6565b509095945050505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561123257603f1987860301845261121d858351610fd5565b94506020938401939190910190600101611201565b50929695505050505050565b5f6020828403121561124e575f5ffd5b5035919050565b610140810161023782846110f7565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561123257603f198786030184526112a6858351610fa5565b9450602093840193919091019060010161128a565b5f5f5f5f608085870312156112ce575f5ffd5b84356112d981610f2a565b966020860135965060408601359560600135945092505050565b5f5f60408385031215611304575f5ffd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b038111828210171561134957611349611313565b60405290565b60405161014081016001600160401b038111828210171561134957611349611313565b604051601f8201601f191681016001600160401b038111828210171561139a5761139a611313565b604052919050565b5f82601f8301126113b1575f5ffd5b81516001600160401b038111156113ca576113ca611313565b8060051b6113da60208201611372565b918252602081850181019290810190868411156113f5575f5ffd5b6020860192505b838310156114175782518252602092830192909101906113fc565b9695505050505050565b5f60208284031215611431575f5ffd5b81516001600160401b03811115611446575f5ffd5b820160408185031215611457575f5ffd5b604080519081016001600160401b038111828210171561147957611479611313565b6040528151815260208201516001600160401b03811115611498575f5ffd5b6114a4868285016113a2565b602083015250949350505050565b80516114bd81610f2a565b919050565b5f602082840312156114d2575f5ffd5b81516001600160401b038111156114e7575f5ffd5b82018084036101808112156114fa575f5ffd5b611502611327565b8251815260208301516001600160401b0381111561151e575f5ffd5b61152a878286016113a2565b602083015250610140603f1983011215611542575f5ffd5b61154a61134f565b60408401518152606084015160208201529150611569608084016114b2565b60408381019190915260a084810151606085015260c080860151608086015260e0808701519286019290925261010080870151918601919091526101208087015192860192909252610140860151908501526101609094015193830193909352918201529392505050565b6020808252601590820152740e6e8c2e4e892dcc8caf0407c40cadcc892dcc8caf605b1b604082015260600190565b5f60208284031215611613575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102375761023761161a565b808201808211156102375761023761161a565b80516001600160401b03811681146114bd575f5ffd5b8051600381106114bd575f5ffd5b5f61014082840312801561168a575f5ffd5b5061169361134f565b61169c83611654565b81526116aa60208401611654565b6020820152604083810151908201526116c5606084016114b2565b60608201526080838101519082015260a0808401519082015260c0808401519082015260e080840151908201526116ff610100840161166a565b610100820152610120928301519281019290925250919050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161173e5761173e61161a565b506001019056fea2646970667358221220e88244994eda8ea88fb42d6eaaaa0cd2ef6afa1ddceb1c90ebad8b35d7e723b064736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561000f575f5ffd5b5060043610610090575f3560e01c8063add46d9311610063578063add46d931461011d578063ca142f7514610145578063d00d7b1914610165578063de73259514610185578063e43d33e9146101a6575f5ffd5b80630d504b5b146100945780631da0244e146100bd5780631e46fc03146100dd5780633191b50e146100fd575b5f5ffd5b6100a76100a2366004610f41565b6101b9565b6040516100b49190610fc3565b60405180910390f35b6100d06100cb366004610f41565b61023d565b6040516100b4919061107f565b6100f06100eb366004611091565b6102ae565b6040516100b4919061118d565b61011061010b366004611091565b6104b8565b6040516100b491906111db565b61013061012b36600461123e565b61071b565b604080519283526020830191909152016100b4565b610158610153366004610f41565b610740565b6040516100b49190611255565b610178610173366004611091565b6107b0565b6040516100b49190611264565b6101986101933660046112bb565b610a2c565b6040519081526020016100b4565b6101986101b43660046112f3565b610dee565b6040805180820182525f81526060602082015290516355ccae8960e11b8152600481018390526001600160a01b0384169063ab995d12906024015f60405180830381865afa15801561020d573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526102349190810190611421565b90505b92915050565b610245610e43565b60405163773d51eb60e01b8152600481018390526001600160a01b0384169063773d51eb906024015f60405180830381865afa158015610287573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261023491908101906114c2565b6060818311156102d95760405162461bcd60e51b81526004016102d0906115d4565b60405180910390fd5b5f846001600160a01b0316633aaa18a46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610316573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033a9190611603565b90508015806103495750808410155b1561038757604080515f808252602082019092529061037e565b61036b610eb5565b8152602001906001900390816103635790505b509150506104b1565b80831061039c5761039960018261162e565b92505b6103a6848461162e565b6103b1906001611641565b6001600160401b038111156103c8576103c8611313565b60405190808252806020026020018201604052801561040157816020015b6103ee610eb5565b8152602001906001900390816103e65790505b509150835b8381116104ae57604051632db25e0560e01b8152600481018290526001600160a01b03871690632db25e059060240161014060405180830381865afa158015610451573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104759190611678565b83610480878461162e565b8151811061049057610490611719565b602002602001018190525080806104a69061172d565b915050610406565b50505b9392505050565b6060818311156104da5760405162461bcd60e51b81526004016102d0906115d4565b5f846001600160a01b031663de98c7356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610517573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053b9190611603565b905080158061054a5750808410155b1561058757604080515f808252602082019092529061037e565b61056c610e43565b815260200190600190039081610564579050509150506104b1565b80831061059c5761059960018261162e565b92505b6105a6848461162e565b6105b1906001611641565b6001600160401b038111156105c8576105c8611313565b60405190808252806020026020018201604052801561060157816020015b6105ee610e43565b8152602001906001900390816105e65790505b509150835b8381116104ae5760405162143a2160e61b8152600481018290525f906001600160a01b0388169063050e884090602401602060405180830381865afa158015610651573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106759190611603565b60405163773d51eb60e01b8152600481018290529091506001600160a01b0388169063773d51eb906024015f60405180830381865afa1580156106ba573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526106e191908101906114c2565b846106ec888561162e565b815181106106fc576106fc611719565b60200260200101819052505080806107139061172d565b915050610606565b5f8061073160016801000000000000000061162e565b83169360409390931c92915050565b610748610eb5565b604051632db25e0560e01b8152600481018390526001600160a01b03841690632db25e059060240161014060405180830381865afa15801561078c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102349190611678565b6060818311156107d25760405162461bcd60e51b81526004016102d0906115d4565b5f846001600160a01b03166381151b1f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561080f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108339190611603565b90508015806108425750808410155b1561088b57604080515f808252602082019092529061037e565b604080518082019091525f81526060602082015281526020019060019003908161085c579050509150506104b1565b8083106108a05761089d60018261162e565b92505b6108aa848461162e565b6108b5906001611641565b6001600160401b038111156108cc576108cc611313565b60405190808252806020026020018201604052801561091157816020015b604080518082019091525f8152606060208201528152602001906001900390816108ea5790505b509150835b8381116104ae5760405163af9e2b0d60e01b8152600481018290525f906001600160a01b0388169063af9e2b0d90602401602060405180830381865afa158015610962573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109869190611603565b6040516355ccae8960e11b8152600481018290529091506001600160a01b0388169063ab995d12906024015f60405180830381865afa1580156109cb573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526109f29190810190611421565b846109fd888561162e565b81518110610a0d57610a0d611719565b6020026020010181905250508080610a249061172d565b915050610916565b6040516361eee2cb60e01b8152600481018490525f9081906001600160a01b038716906361eee2cb90602401602060405180830381865afa158015610a73573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a979190611603565b905042866001600160a01b031663ef78d4fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610afa9190611603565b610b049083611641565b1015610b525760405162461bcd60e51b815260206004820152601960248201527f4672616d65206d757374206265206675747572652f6f70656e0000000000000060448201526064016102d0565b60405163871995e960e01b8152600481018590525f906001600160a01b0388169063871995e990602401602060405180830381865afa158015610b97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbb9190611603565b90505f610bc88383610dee565b60405163084b2b4f60e11b815260048101859052602481018790529091505f906001600160a01b038a1690631096569e90604401602060405180830381865afa158015610c17573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c3b9190611603565b6040516355ccae8960e11b8152600481018490529091505f906001600160a01b038b169063ab995d12906024015f60405180830381865afa158015610c82573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610ca99190810190611421565b80519091505f03610cc057509350610de692505050565b602081015180515f9190610cd69060019061162e565b81518110610ce657610ce6611719565b602002602001015190505f8b6001600160a01b0316632db25e05836040518263ffffffff1660e01b8152600401610d1f91815260200190565b61014060405180830381865afa158015610d3b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d5f9190611678565b60800151604051632c43871760e01b8152600481018290529091505f906001600160a01b038e1690632c43871790602401602060405180830381865afa158015610dab573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dcf9190611603565b9050610ddb8186611641565b985050505050505050505b949350505050565b5f6001600160401b03831115610e3b5760405162461bcd60e51b81526020600482015260126024820152716672616d654b657920746f6f206c6172676560701b60448201526064016102d0565b5060401b1790565b60405180606001604052805f815260200160608152602001610eb06040518061014001604052805f81526020015f81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b905290565b6040518061014001604052805f6001600160401b031681526020015f6001600160401b031681526020015f81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f6002811115610f1e57610f1e6110c3565b81526020015f81525090565b6001600160a01b0381168114610f3e575f5ffd5b50565b5f5f60408385031215610f52575f5ffd5b8235610f5d81610f2a565b946020939093013593505050565b5f8151808452602084019350602083015f5b82811015610f9b578151865260209586019590910190600101610f7d565b5093949350505050565b805182525f602082015160406020850152610de66040850182610f6b565b602081525f6102346020830184610fa5565b805182525f60208201516101806020850152610ff5610180850182610f6b565b905060408301518051604086015260208101516060860152604081015161102760808701826001600160a01b03169052565b50606081015160a0860152608081015160c086015260a081015160e086015260c081015161010086015260e0810151610120860152610100810151610140860152610120810151610160860152508091505092915050565b602081525f6102346020830184610fd5565b5f5f5f606084860312156110a3575f5ffd5b83356110ae81610f2a565b95602085013595506040909401359392505050565b634e487b7160e01b5f52602160045260245ffd5b600381106110f357634e487b7160e01b5f52602160045260245ffd5b9052565b80516001600160401b03168252602081015161111e60208401826001600160401b03169052565b5060408101516040830152606081015161114360608401826001600160a01b03169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516111806101008401826110d7565b5061012090810151910152565b602080825282518282018190525f918401906040840190835b818110156111d0576111b98385516110f7565b6020939093019261014092909201916001016111a6565b509095945050505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561123257603f1987860301845261121d858351610fd5565b94506020938401939190910190600101611201565b50929695505050505050565b5f6020828403121561124e575f5ffd5b5035919050565b610140810161023782846110f7565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561123257603f198786030184526112a6858351610fa5565b9450602093840193919091019060010161128a565b5f5f5f5f608085870312156112ce575f5ffd5b84356112d981610f2a565b966020860135965060408601359560600135945092505050565b5f5f60408385031215611304575f5ffd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b038111828210171561134957611349611313565b60405290565b60405161014081016001600160401b038111828210171561134957611349611313565b604051601f8201601f191681016001600160401b038111828210171561139a5761139a611313565b604052919050565b5f82601f8301126113b1575f5ffd5b81516001600160401b038111156113ca576113ca611313565b8060051b6113da60208201611372565b918252602081850181019290810190868411156113f5575f5ffd5b6020860192505b838310156114175782518252602092830192909101906113fc565b9695505050505050565b5f60208284031215611431575f5ffd5b81516001600160401b03811115611446575f5ffd5b820160408185031215611457575f5ffd5b604080519081016001600160401b038111828210171561147957611479611313565b6040528151815260208201516001600160401b03811115611498575f5ffd5b6114a4868285016113a2565b602083015250949350505050565b80516114bd81610f2a565b919050565b5f602082840312156114d2575f5ffd5b81516001600160401b038111156114e7575f5ffd5b82018084036101808112156114fa575f5ffd5b611502611327565b8251815260208301516001600160401b0381111561151e575f5ffd5b61152a878286016113a2565b602083015250610140603f1983011215611542575f5ffd5b61154a61134f565b60408401518152606084015160208201529150611569608084016114b2565b60408381019190915260a084810151606085015260c080860151608086015260e0808701519286019290925261010080870151918601919091526101208087015192860192909252610140860151908501526101609094015193830193909352918201529392505050565b6020808252601590820152740e6e8c2e4e892dcc8caf0407c40cadcc892dcc8caf605b1b604082015260600190565b5f60208284031215611613575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102375761023761161a565b808201808211156102375761023761161a565b80516001600160401b03811681146114bd575f5ffd5b8051600381106114bd575f5ffd5b5f61014082840312801561168a575f5ffd5b5061169361134f565b61169c83611654565b81526116aa60208401611654565b6020820152604083810151908201526116c5606084016114b2565b60608201526080838101519082015260a0808401519082015260c0808401519082015260e080840151908201526116ff610100840161166a565b610100820152610120928301519281019290925250919050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161173e5761173e61161a565b506001019056fea2646970667358221220e88244994eda8ea88fb42d6eaaaa0cd2ef6afa1ddceb1c90ebad8b35d7e723b064736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "immutableReferences": {},
  "inputSourceName": "project/contracts/MarketGetter.sol",
  "buildInfoId": "solc-0_8_28-41720433c0f684d72bf9aa10d9c50536a0ddcbe8"
}