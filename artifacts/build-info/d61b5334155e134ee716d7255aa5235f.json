{
  "id": "d61b5334155e134ee716d7255aa5235f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Market.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n//pragma experimental ABIEncoderV2;\r\n\r\nimport \"./MarketFactory.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol\";\r\nimport \"@uniswap/lib/contracts/libraries/FixedPoint.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol\";\r\n\r\n\r\n/// @title TWPM Market\r\n/// @author UniHedge\r\n/// @dev All function calls are currently implemented without side effects\r\ncontract Market {\r\n    using UQ112x112 for uint224;\r\n    //Length of a frame\r\n    uint public period; //64b -- Data packing into storage slots (1 slot = 32 bytes) --> 4*64b = 32 bytes\r\n    //Contract creation time\r\n    uint public initTimestamp; //64b\r\n    //Protocol fee\r\n    uint public feeProtocol = 100; //64b\r\n    //Reporting time for pair price\r\n    uint public tReporting; //64b\r\n    //Token pair on Uniswap\r\n    IUniswapV2Pair public uniswapPair; //256b\r\n    //Range of a lot\r\n    uint public dPrice; //256b\r\n    //Fee that gets to market owner\r\n    uint public feeMarket; //256b\r\n    //Tax on lots\r\n    uint public taxMarket; //256b\r\n    //Contract for creating markets\r\n    MarketFactory public factory; //256b\r\n    //ERC20 token used for buyng lots in this contract \r\n    IERC20 public accountingToken; //256b\r\n    //Owner of this market\r\n    address public ownerMarket; //256b\r\n    //Minimal lot tax per frame\r\n    uint public minTax; //256b\r\n    //Average price calculation\r\n    bool public avgPriceSwitch = false;\r\n    //Scalar number used for calculating precentages\r\n    uint scalar = 1e24; //256b\r\n    \r\n\r\n    enum SFrame {NULL, OPENED, CLOSED}\r\n    struct Frame {\r\n        uint frameKey; \r\n        uint oracleTimestampStart;\r\n        uint oracleTimestampEnd;\r\n        uint rewardFund;\r\n        uint priceAverage;\r\n        uint oraclePrice0CumulativeStart;\r\n        uint oraclePrice0CumulativeEnd;\r\n        uint oraclePrice1CumulativeStart;\r\n        uint oraclePrice1CumulativeEnd;\r\n        SFrame state;\r\n        uint[] lotKeys;\r\n        mapping(uint => Lot) lots;\r\n    }\r\n\r\n    event FrameUpdate(uint frameKey, uint oracleTimestampStart, uint oracleTimestampEnd, uint oraclePrice0CumulativeStart, uint oraclePrice0CumulativeEnd, uint oraclePrice1CumulativeStart, uint oraclePrice1CumulativeEnd, uint rewardFund);\r\n\r\n    mapping(uint => Frame) public frames;\r\n    mapping(address => uint[]) public userFrames;\r\n    uint[] public framesKeys;\r\n\r\n    enum SLot {NULL, BOUGHT, SETTLED}\r\n    struct Lot {\r\n        uint frameKey;\r\n        uint lotKey;\r\n        address lotOwner;\r\n        uint acquisitionPrice;\r\n        SLot state;\r\n    }\r\n\r\n    event LotUpdate(uint frameKey, Lot lotStruct);\r\n    constructor(MarketFactory _factory, IERC20 _token, IUniswapV2Pair _uniswapPair, uint _period, uint _initTimestamp, uint _taxMarket, uint _feeMarket, uint _dPrice, uint _tReporting, uint _minTax, bool _avgPriceSwitch) {\r\n        accountingToken = _token;\r\n        ownerMarket = payable(msg.sender);\r\n        period = _period;\r\n        initTimestamp = _initTimestamp; \r\n        taxMarket = _taxMarket;\r\n        feeMarket = _feeMarket;\r\n        uniswapPair = _uniswapPair;\r\n        dPrice = _dPrice;\r\n        factory = _factory;\r\n        tReporting = _tReporting;\r\n        minTax = _minTax;\r\n        avgPriceSwitch = _avgPriceSwitch;\r\n    }\r\n\r\n    modifier isFactoryOwner() {\r\n        require(msg.sender == factory.owner(), \"NOT THE FACTORY OWNER\");\r\n        _;\r\n    }\r\n\r\n\r\n    //TODO: add Price1 or not?\r\n    function hasValidPrices(uint frameKey) private view{\r\n        //require(frames[frameKey].state == SFrame.OPENED, \"FRAME NOT OPENED\");\r\n        if (frames[frameKey].oraclePrice0CumulativeStart <= 0 || frames[frameKey].oraclePrice0CumulativeEnd <= 0) {\r\n            //frames[framekey].state = SFrame.INVALID;\r\n            revert(\"INVALID FRAME PRICE\");\r\n        }\r\n        if (frames[frameKey].oraclePrice0CumulativeStart == frames[frameKey].oraclePrice0CumulativeEnd) {\r\n            //frames[framekey].state = SFrame.INVALID;\r\n            revert(\"INVALID FRAME PRICE\");\r\n        }\r\n    }\r\n\r\n    //TODO: it should watch time untill the endframe\r\n    function minTaxCheck(uint frameKey, uint acqPrice) private view{\r\n        uint tax = clcTax(frameKey, acqPrice);  //acqPrice * (taxMarket) / (100000);\r\n        require(tax >= minTax, \"PRICE IS TOO LOW\");\r\n    }\r\n\r\n    /// @notice Calculate frames timestamp (beggining of frame)\r\n    /// @param timestamp In seconds\r\n    /// @return frame's timestamp (key)\r\n    function clcFrameTimestamp(uint timestamp) public view returns (uint){\r\n        if (timestamp <= initTimestamp) return initTimestamp;\r\n        return timestamp - ((timestamp - (initTimestamp)) % (period));\r\n    }\r\n    \r\n    /// @notice Calculate top boundary of a lot\r\n    /// @param value Arbitary price of market's Uniswap pair\r\n    /// @return lot key (top boundary)\r\n    function clcLotKey(uint value) public view returns (uint){\r\n        if (value <= 0) return dPrice;\r\n        return value / (dPrice) * (dPrice);\r\n    }\r\n\r\n    /// @notice Calculate how many frames there are left untill given frame in input\r\n    /// @param frameKey Timestamp of an arbitary frame in the future\r\n    /// @return number of frames (whole numbers: n=0,1,2...)\r\n    function clcFramesLeft(uint frameKey) private view returns (uint){     \r\n        if (frameKey == clcFrameTimestamp(block.timestamp)) return 0;                 \r\n        return (((frameKey - (block.timestamp)) / period));\r\n    }\r\n\r\n    /// @notice Calculate average price of a frame\r\n    /// @param frameKey Timestamp of an arbitary frame \r\n    /// @return avgPrice Time weighted aveage price\r\n    function clcPrice(uint frameKey) external view returns(uint avgPrice) {       \r\n        hasValidPrices(frameKey); \r\n        //Calculate time-weighted average price -- UQ112x112 encoded\r\n        uint timeDiff = frames[frameKey].oracleTimestampEnd - frames[frameKey].oracleTimestampStart;\r\n        if (avgPriceSwitch) avgPrice = uint(FixedPoint.uq112x112(uint224((frames[frameKey].oraclePrice0CumulativeEnd - frames[frameKey].oraclePrice0CumulativeStart) / (timeDiff)))._x);\r\n        else avgPrice = uint(FixedPoint.uq112x112(uint224((frames[frameKey].oraclePrice1CumulativeEnd - frames[frameKey].oraclePrice1CumulativeStart) / (timeDiff)))._x);\r\n        avgPrice = (avgPrice >> 112) * scalar + (avgPrice << 112) / (1e49);\r\n    }\r\n\r\n    /// @notice Calculate amount required to approve to buy a lot\r\n    /// @param timestamp Timestamp that determins which frame it is\r\n    /// @param pairPrice Value is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    /// @return cmpltAmnt complete price of a lot\r\n    function clcAmountToApprove(uint timestamp, uint pairPrice, uint acqPrice) external view returns (uint cmpltAmnt) {    \r\n        uint frameKey = clcFrameTimestamp(timestamp); \r\n        //Check if the lot is in a current or future frame, otherwise the calculation results in an overflow/underflow.\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"THIS LOT IS IN A PAST FRAME\");        \r\n        uint lotKey = clcLotKey(pairPrice);\r\n        uint tax = clcTax(frameKey, acqPrice);\r\n        cmpltAmnt = frames[frameKey].lots[lotKey].acquisitionPrice + tax;\r\n    }\r\n\r\n    /// @notice Calculate amount required to change lot's price.\r\n    /// @dev Calculate difference in tax values with old and new acquisition price\r\n    /// @param timestamp Timestamp that determins which frame it is\r\n    /// @param pairPrice Value is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    /// @return amnt complete price of a lot\r\n    function clcAmountToApproveForUpdate(uint timestamp, uint pairPrice, uint acqPrice) external view returns (uint amnt) {   \r\n        uint frameKey = clcFrameTimestamp(timestamp);\r\n        //require(frameKey >= clcFrameTimestamp(block.timestamp), \"THIS LOT IS IN A PAST FRAME\");   \r\n        uint tax1 = clcTax(frameKey, frames[frameKey].lots[clcLotKey(pairPrice)].acquisitionPrice);\r\n        uint tax2 = clcTax(frameKey, acqPrice);\r\n        if(tax1 >= tax2) amnt = 0;\r\n        else amnt = tax2-tax1;\r\n    }\r\n\r\n    /// @notice Get created and still open frames\r\n    /// @dev You can't get (current) frame's index in the framesKeys array,\r\n    /// @dev so for-loop through the whole array is needed\r\n    /// @dev other option would be with additional parameter: startIndex\r\n    /// @param numOfFrames Timestamp that determins which frame it is\r\n    /// @return openFrames array of frame keys\r\n    function getOpenFrameKeys(uint startFrame, uint numOfFrames) external view returns (uint[] memory openFrames){\r\n        openFrames = new uint[](numOfFrames);\r\n        for(uint i = 0; i <= numOfFrames; i++) {\r\n            uint frameKey = startFrame+(period*i);\r\n            if(frames[frameKey].state != SFrame.NULL) {\r\n                openFrames[i] = frameKey;\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @notice Get users lots in the nex 50 frames and previous 50 frames\r\n    /// @dev First version, it works, but need code optimisation probably :P\r\n    /// @param user User's address\r\n    /// @return userLots Returns array of users lots (whole structs)\r\n    /// @dev Array's size is 100 no mather how many lots this user actually has. \r\n    /// @dev So the results have to be filtered before use\r\n    function getUserLots(address user) external view returns (Lot[] memory userLots){\r\n        uint currentFrame = clcFrameTimestamp(block.timestamp);\r\n        userLots = new Lot[](2000);\r\n        Lot memory lot;\r\n        uint counter = 0;\r\n        uint frameKey;\r\n\r\n        for(uint i = 1; i <= 100; i++) {\r\n            if (i >= 50) frameKey = (currentFrame + period*(i-50));\r\n            else frameKey = (currentFrame - period*i);\r\n\r\n            if (frames[frameKey].state == SFrame.OPENED) {\r\n                for (uint j=0; j<frames[frameKey].lotKeys.length; j++) {\r\n                    lot = frames[frameKey].lots[frames[frameKey].lotKeys[j]];\r\n                    if(lot.lotOwner == user) {\r\n                        userLots[counter]= lot;\r\n                        counter ++;\r\n                        if(counter >= 2000) break;\r\n                    } \r\n                }\r\n            }\r\n        }\r\n\r\n        for(uint i = 1; i <= 49; i++) {\r\n            frameKey = (currentFrame - period*i);\r\n            if (frames[frameKey].state == SFrame.CLOSED) {\r\n                for (uint j=0; j<frames[frameKey].lotKeys.length; j++) {\r\n                    lot = frames[frameKey].lots[frames[frameKey].lotKeys[j]];\r\n                    if(lot.lotOwner == user) {\r\n                        if(counter >= 2000) break;\r\n                        userLots[counter]= lot;\r\n                        counter ++; \r\n                    } \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO: Should we delete frames from the array if user doesn't own any lots after somebody buys them etc?\r\n    // or is it okay if it shows frames in which the user used to own lots\r\n    /// @notice Get number of frame's that the address has bought lots in\r\n    /// @param user User's address\r\n    /// @return number of frames\r\n    function getNumOfUserFrames(address user) external view returns (uint){\r\n        return userFrames[user].length;\r\n    }\r\n\r\n    /// @notice Get frame's that the address has bought lots in\r\n    /// @param user User's address\r\n    /// @return frame keys\r\n    function getUserFrames(address user) external view returns(uint[] memory)  {\r\n        return userFrames[user];\r\n    }\r\n\r\n    /// @notice Get lot struct\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param lotKey lot's key \r\n    /// @return lot struct\r\n    function getLot(uint frameKey, uint lotKey) external view returns (Lot memory){                 \r\n        return frames[frameKey].lots[lotKey];\r\n    }\r\n\r\n    /// @notice Get lotKey from index in lotKeys array\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param index frameKeys array index \r\n    /// @return lotKey\r\n    function getLotKey(uint frameKey, uint index) public view returns (uint){                 \r\n        return frames[frameKey].lotKeys[index];\r\n    }\r\n\r\n    /// @notice Get no. of created lots in a frame \r\n    /// @param frameKey Frame's timestamp\r\n    /// @return lot count\r\n    function getLotsCount(uint frameKey) external view returns (uint){                 \r\n        return frames[frameKey].lotKeys.length;\r\n    }\r\n\r\n    /// @notice Get frame's award amount (accumulation of different lot taxes)\r\n    /// @notice Remaining tax of a lot owner get's returned after a sale (change of ownership). So the award amount isn't for sure untill the frame get's closed.\r\n    /// @param frameKey Frame's timestamp\r\n    /// @return award amount\r\n    function getRewardAmount(uint frameKey) external view returns (uint) {                         \r\n        return frames[frameKey].rewardFund; \r\n    }\r\n\r\n    /// @notice Get number of frames\r\n    /// @return number frames\r\n    function getNumberOfFrameKeys() external view returns (uint){\r\n        return framesKeys.length;\r\n    }\r\n\r\n    /// @notice Create a frame\r\n    /// @param timestamp In second.\r\n    /// @return frameTimestamp Frame's key (timestamp that indicated the beggining of a frame).\r\n    function getOrCreateFrame(uint timestamp) internal returns (uint){\r\n        //Get frame's timestamp - frame key\r\n        uint frameKey = clcFrameTimestamp(timestamp);\r\n        //Check if frame exists\r\n        if (frames[frameKey].state != SFrame.NULL) return frameKey;\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"FRAME IN PAST\");\r\n        //Add frame\r\n        frames[frameKey].frameKey = frameKey;\r\n        frames[frameKey].state = SFrame.OPENED;\r\n        framesKeys.push(frameKey);\r\n        return frameKey;\r\n    }\r\n\r\n    /// @notice Create a lot\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param pairPrice Price is the trading pair's price\r\n    /// @return lotKey\r\n    function getOrCreateLot(uint frameKey, uint pairPrice) internal returns(uint){\r\n        uint lotKey = clcLotKey(pairPrice);\r\n        if (frames[frameKey].lots[lotKey].state != SLot.NULL) return lotKey;\r\n        frames[frameKey].lots[lotKey].frameKey = frameKey;\r\n        frames[frameKey].lots[lotKey].lotKey = lotKey;\r\n        frames[frameKey].lotKeys.push(lotKey);\r\n        return lotKey;\r\n    }\r\n\r\n    function clcTax(uint frameKey, uint acquisitionPrice) internal view returns (uint tax) {             \r\n        uint dFrame = (clcFrameTimestamp(block.timestamp) + (period)) - (block.timestamp); \r\n        uint dFrameP = scalar * dFrame / period;\r\n        tax = acquisitionPrice * taxMarket / 100000;\r\n        tax = (tax*(clcFramesLeft(frameKey)) + (tax * dFrameP / scalar));\r\n        return tax;\r\n    }\r\n\r\n    /// @notice Calculate amout required to approve to buy a lot\r\n    /// @param timestamp Frame's timestamp get's calculated from this value\r\n    /// @param pairPrice Is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    function buyLot(uint timestamp, uint pairPrice, uint acqPrice) external {\r\n        //Get frameKey and lotKey values\r\n        uint frameKey =  getOrCreateFrame(timestamp);        \r\n        minTaxCheck(frameKey, acqPrice);                  \r\n        uint lotKey = getOrCreateLot(frameKey, pairPrice);\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"LOT IN PAST\");\r\n        require(msg.sender != frames[frameKey].lots[lotKey].lotOwner, \"ALREADY OWNER\");\r\n\r\n        uint tax = clcTax(frameKey, acqPrice);\r\n\r\n        //Approved amount has to be at leat equal to price of the Lot(with tax)\r\n        require(accountingToken.allowance(msg.sender, address(this)) >= (frames[frameKey].lots[lotKey].acquisitionPrice + tax), \"APPROVED AMOUNT TOO SMALL\");\r\n        //Transfer tax amount to the market contract\r\n        accountingToken.transferFrom(msg.sender, address(this), (frames[frameKey].lots[lotKey].acquisitionPrice + tax));\r\n        frames[frameKey].rewardFund = (frames[frameKey].rewardFund + tax);\r\n\r\n        //Pay the current owner + return leftover tax\r\n        if (frames[frameKey].lots[lotKey].state == SLot.BOUGHT) {\r\n            uint taxRetrn = clcTax(frameKey, frames[frameKey].lots[lotKey].acquisitionPrice);\r\n            //transfer funds\r\n            accountingToken.transfer(frames[frameKey].lots[lotKey].lotOwner, (taxRetrn + frames[frameKey].lots[lotKey].acquisitionPrice));\r\n            //update reward fund\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund - taxRetrn;\r\n        }\r\n        else {\r\n            frames[frameKey].lots[lotKey].state = SLot.BOUGHT;\r\n        }\r\n       //Update lotKey values\r\n        frames[frameKey].lots[lotKey].lotOwner = msg.sender;\r\n        frames[frameKey].lots[lotKey].acquisitionPrice = acqPrice;\r\n        userFrames[msg.sender].push(frameKey);\r\n\r\n        updateFramePrices();\r\n\r\n        emit FrameUpdate(frameKey, \r\n                         frames[frameKey].oracleTimestampStart,\r\n                         frames[frameKey].oracleTimestampEnd,\r\n                         frames[frameKey].oraclePrice0CumulativeStart,\r\n                         frames[frameKey].oraclePrice0CumulativeEnd,\r\n                         frames[frameKey].oraclePrice1CumulativeStart,\r\n                         frames[frameKey].oraclePrice1CumulativeEnd,\r\n                         frames[frameKey].rewardFund);\r\n        emit LotUpdate(frameKey, frames[frameKey].lots[lotKey]);\r\n    }\r\n\r\n    /// @notice Owner can update lot's price. Has to pay additional tax, or leftover tax gets' returned to him if the new price is lower\r\n    /// @param timestamp Frame's timestamp get's calculated from this value\r\n    /// @param pairPrice Is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New acquisition price\r\n    function updateLotPrice(uint timestamp, uint pairPrice, uint acqPrice) external {\r\n        uint frameKey = getOrCreateFrame(timestamp); \r\n        minTaxCheck(frameKey,acqPrice);\r\n        uint lotKey = getOrCreateLot(frameKey, pairPrice); \r\n        require(frames[frameKey].lots[lotKey].lotOwner == msg.sender, \"NOT LOT OWNER\");\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"LOT IN PAST FRAME\");\r\n\r\n        uint taxNew = clcTax(frameKey, acqPrice);\r\n        uint taxOld = clcTax(frameKey, frames[frameKey].lots[lotKey].acquisitionPrice);\r\n\r\n        if (taxNew > taxOld) {\r\n            require(accountingToken.allowance(msg.sender, address(this)) >= (taxNew - taxOld), \"APPROVED AMOUNT TOO SMALL\");\r\n            //Transfer complete tax amount to the frame rewardFund\r\n            accountingToken.transferFrom(msg.sender, address(this), (taxNew - taxOld));\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund + (taxNew- taxOld);\r\n        }\r\n        else if (taxNew < taxOld) {\r\n            accountingToken.transfer(msg.sender, taxOld - taxNew);\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund - (taxOld - taxNew);\r\n        }\r\n        frames[frameKey].lots[lotKey].acquisitionPrice = acqPrice;\r\n\r\n        updateFramePrices();\r\n        emit LotUpdate(frameKey, frames[frameKey].lots[lotKey]);\r\n    }\r\n\r\n    /// @notice Update trading pair's prices in the frame\r\n    function updateFramePrices() public {\r\n        uint frameKey = clcFrameTimestamp(block.timestamp);\r\n        //Correct price if outside settle interval\r\n        if (block.timestamp < ((frameKey + (period)) - (tReporting))) {\r\n            (frames[frameKey].oraclePrice0CumulativeStart, frames[frameKey].oraclePrice1CumulativeStart, frames[frameKey].oracleTimestampStart) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n            (frames[frameKey].oraclePrice0CumulativeEnd, frames[frameKey].oraclePrice1CumulativeEnd, frames[frameKey].oracleTimestampEnd) = (frames[frameKey].oraclePrice0CumulativeStart, frames[frameKey].oraclePrice1CumulativeStart, frames[frameKey].oracleTimestampStart); \r\n        }\r\n        else if (block.timestamp >= ((frameKey + (period)) - (tReporting))) {\r\n            (frames[frameKey].oraclePrice0CumulativeEnd, frames[frameKey].oraclePrice1CumulativeEnd, frames[frameKey].oracleTimestampEnd) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n        }\r\n\r\n        emit FrameUpdate(frameKey, \r\n                         frames[frameKey].oracleTimestampStart,\r\n                         frames[frameKey].oracleTimestampEnd,\r\n                         frames[frameKey].oraclePrice0CumulativeStart,\r\n                         frames[frameKey].oraclePrice0CumulativeEnd,\r\n                         frames[frameKey].oraclePrice1CumulativeStart,\r\n                         frames[frameKey].oraclePrice1CumulativeEnd,\r\n                         frames[frameKey].rewardFund);\r\n    }\r\n\r\n    /// @notice Close frame\r\n    /// @param frameKey Frame's timestamp\r\n    function closeFrame(uint frameKey) private{\r\n        hasValidPrices(frameKey);\r\n        require( (frameKey + period) <= block.timestamp, \"FRAME END TIME NOT REACHED\");\r\n        frames[frameKey].state = SFrame.CLOSED;\r\n        \r\n        //Calculate time-weighted average price -- UQ112x112 encoded\r\n        uint timeDiff = frames[frameKey].oracleTimestampEnd - frames[frameKey].oracleTimestampStart;\r\n        if (avgPriceSwitch) frames[frameKey].priceAverage = uint(FixedPoint.uq112x112(uint224((frames[frameKey].oraclePrice0CumulativeEnd - frames[frameKey].oraclePrice0CumulativeStart) / (timeDiff)))._x);\r\n        else frames[frameKey].priceAverage = uint(FixedPoint.uq112x112(uint224((frames[frameKey].oraclePrice1CumulativeEnd - frames[frameKey].oraclePrice1CumulativeStart) / (timeDiff)))._x);\r\n        frames[frameKey].priceAverage = (frames[frameKey].priceAverage >> 112) * scalar + (frames[frameKey].priceAverage << 112) / (1e49);\r\n\r\n        //Subtract fees from the reward amount \r\n        uint marketOwnerFees = frames[frameKey].rewardFund * (feeMarket) / 100000;\r\n        uint protocolOwnerFees = frames[frameKey].rewardFund * (feeProtocol) / 100000;\r\n        frames[frameKey].rewardFund = frames[frameKey].rewardFund - marketOwnerFees - protocolOwnerFees;\r\n        //Transfer fees to owners\r\n        accountingToken.transfer(ownerMarket, marketOwnerFees);\r\n        accountingToken.transfer(factory.owner(), protocolOwnerFees);\r\n        emit FrameUpdate(frameKey, \r\n                         frames[frameKey].oracleTimestampStart,\r\n                         frames[frameKey].oracleTimestampEnd,\r\n                         frames[frameKey].oraclePrice0CumulativeStart,\r\n                         frames[frameKey].oraclePrice0CumulativeEnd,\r\n                         frames[frameKey].oraclePrice1CumulativeStart,\r\n                         frames[frameKey].oraclePrice1CumulativeEnd,\r\n                         frames[frameKey].rewardFund);\r\n    }\r\n\r\n    /// @notice Settle lot for a owner. Owner's share of the reward amount get's transfered to owner's account\r\n    /// @param frameKey Frame's timestamp\r\n    function settleLot(uint frameKey) private{  \r\n        //Check if frame is closed\r\n        require(frames[frameKey].state == SFrame.CLOSED, \"FRAME NOT CLOSED\");    \r\n        //Calcualte the winning lot key\r\n        uint lotKeyWin = (clcLotKey(frames[frameKey].priceAverage));\r\n        //Check if the lot is already settled\r\n        require(frames[frameKey].lots[lotKeyWin].state != SLot.SETTLED, \"LOT ALREADY SETTLED\");\r\n        //Transfer winnings to last owner\r\n        require(frames[frameKey].lots[lotKeyWin].lotOwner != 0x0000000000000000000000000000000000000000, \"NO OWNER\");\r\n        accountingToken.transfer(frames[frameKey].lots[lotKeyWin].lotOwner, frames[frameKey].rewardFund);\r\n        //State is changed to settled\r\n        frames[frameKey].lots[lotKeyWin].state = SLot.SETTLED;\r\n\r\n        emit LotUpdate(frameKey, frames[frameKey].lots[lotKeyWin]);\r\n    }\r\n\r\n    /// @notice User can claim the reward if he owns the winning lot\r\n    /// @param frameKey Frame's timestamp\r\n    function claimReward(uint frameKey) external{\r\n        closeFrame(frameKey);\r\n        settleLot(frameKey);\r\n    }\r\n\r\n    // /// @notice Withdraw any amount out of the contract. Only to be used in extreme cases!\r\n    // /// @param amount Amount you want to withdraw\r\n    // function emptyFunds(uint amount) external isFactoryOwner {  \r\n    //     accountingToken.transfer(factory.owner(), amount);\r\n    // }\r\n\r\n\r\n}"
      },
      "contracts/MarketFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Market.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract MarketFactory {\r\n\r\n    IUniswapV2Factory public uniswapFactory;\r\n    mapping(address => Market) public markets;\r\n    address[] public marketsKeys;\r\n    address public owner;\r\n\r\n    constructor(address _uniswapFactory) {\r\n        owner = msg.sender;\r\n        uniswapFactory = IUniswapV2Factory(_uniswapFactory);\r\n    }\r\n\r\n    function addMarket(address _token, address _uniswapPair, uint64 _period, uint64 _initTimestamp, uint _tax, uint _fee, uint _dPrice, uint64 _tReporting, uint _minTax, bool _avgPriceSwitch) external {\r\n        Market market = new Market(this, IERC20(_token), IUniswapV2Pair(_uniswapPair), _period, _initTimestamp, _tax, _fee, _dPrice, _tReporting, _minTax, _avgPriceSwitch);\r\n        markets[address(market)] = market;\r\n        marketsKeys.push(address(market));\r\n    }\r\n\r\n    function getMarketsCount() public view returns (uint){\r\n        return marketsKeys.length;\r\n    }\r\n}\r\n"
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "content": "pragma solidity >=0.5.0;\n\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';\nimport '@uniswap/lib/contracts/libraries/FixedPoint.sol';\n\n// library with helper methods for oracles that are concerned with computing average prices\nlibrary UniswapV2OracleLibrary {\n    using FixedPoint for *;\n\n    // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1]\n    function currentBlockTimestamp() internal view returns (uint32) {\n        return uint32(block.timestamp % 2 ** 32);\n    }\n\n    // produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\n    function currentCumulativePrices(\n        address pair\n    ) internal view returns (uint price0Cumulative, uint price1Cumulative, uint32 blockTimestamp) {\n        blockTimestamp = currentBlockTimestamp();\n        price0Cumulative = IUniswapV2Pair(pair).price0CumulativeLast();\n        price1Cumulative = IUniswapV2Pair(pair).price1CumulativeLast();\n\n        // if time has elapsed since the last update on the pair, mock the accumulated price values\n        (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast) = IUniswapV2Pair(pair).getReserves();\n        if (blockTimestampLast != blockTimestamp) {\n            // subtraction overflow is desired\n            uint32 timeElapsed = blockTimestamp - blockTimestampLast;\n            // addition overflow is desired\n            // counterfactual\n            price0Cumulative += uint(FixedPoint.fraction(reserve1, reserve0)._x) * timeElapsed;\n            // counterfactual\n            price1Cumulative += uint(FixedPoint.fraction(reserve0, reserve1)._x) * timeElapsed;\n        }\n    }\n}\n"
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "content": "pragma solidity >=0.4.0;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\nlibrary FixedPoint {\n    // range: [0, 2**112 - 1]\n    // resolution: 1 / 2**112\n    struct uq112x112 {\n        uint224 _x;\n    }\n\n    // range: [0, 2**144 - 1]\n    // resolution: 1 / 2**112\n    struct uq144x112 {\n        uint _x;\n    }\n\n    uint8 private constant RESOLUTION = 112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 x) internal pure returns (uq112x112 memory) {\n        return uq112x112(uint224(x) << RESOLUTION);\n    }\n\n    // encodes a uint144 as a UQ144x112\n    function encode144(uint144 x) internal pure returns (uq144x112 memory) {\n        return uq144x112(uint256(x) << RESOLUTION);\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function div(uq112x112 memory self, uint112 x) internal pure returns (uq112x112 memory) {\n        require(x != 0, 'FixedPoint: DIV_BY_ZERO');\n        return uq112x112(self._x / uint224(x));\n    }\n\n    // multiply a UQ112x112 by a uint, returning a UQ144x112\n    // reverts on overflow\n    function mul(uq112x112 memory self, uint y) internal pure returns (uq144x112 memory) {\n        uint z;\n        require(y == 0 || (z = uint(self._x) * y) / y == uint(self._x), \"FixedPoint: MULTIPLICATION_OVERFLOW\");\n        return uq144x112(z);\n    }\n\n    // returns a UQ112x112 which represents the ratio of the numerator to the denominator\n    // equivalent to encode(numerator).div(denominator)\n    function fraction(uint112 numerator, uint112 denominator) internal pure returns (uq112x112 memory) {\n        require(denominator > 0, \"FixedPoint: DIV_BY_ZERO\");\n        return uq112x112((uint224(numerator) << RESOLUTION) / denominator);\n    }\n\n    // decode a UQ112x112 into a uint112 by truncating after the radix point\n    function decode(uq112x112 memory self) internal pure returns (uint112) {\n        return uint112(self._x >> RESOLUTION);\n    }\n\n    // decode a UQ144x112 into a uint144 by truncating after the radix point\n    function decode144(uq144x112 memory self) internal pure returns (uint144) {\n        return uint144(self._x >> RESOLUTION);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol": {
        "content": "pragma solidity ^0.8.0;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2**112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}"
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "FixedPoint": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e873339bbd8da86ef54f60da7d626e4180b35e9ad52726a9793ae56f1c263b464736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP8 CALLER CODECOPY 0xBB 0xD8 0xDA DUP7 0xEF SLOAD 0xF6 0xD 0xA7 0xD6 0x26 0xE4 XOR SIGNEXTEND CALLDATALOAD 0xE9 0xAD MSTORE PUSH19 0x6A9793AE56F1C263B464736F6C634300080400 CALLER ",
              "sourceMap": "129:2052:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e873339bbd8da86ef54f60da7d626e4180b35e9ad52726a9793ae56f1c263b464736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP8 CALLER CODECOPY 0xBB 0xD8 0xDA DUP7 0xEF SLOAD 0xF6 0xD 0xA7 0xD6 0x26 0xE4 XOR SIGNEXTEND CALLDATALOAD 0xE9 0xAD MSTORE PUSH19 0x6A9793AE56F1C263B464736F6C634300080400 CALLER ",
              "sourceMap": "129:2052:1:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "IUniswapV2Factory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "PairCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          }
        }
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "IUniswapV2Pair": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "skim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "skim(address)": "bc25cf77",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol": {
        "UQ112x112": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4d3045c8ec6f48e8969bb5d73cd88f8227d33813ac8e4f040779f9a1b9ef0e64736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x4D ADDRESS GASLIMIT 0xC8 0xEC PUSH16 0x48E8969BB5D73CD88F8227D33813AC8E 0x4F DIV SMOD PUSH26 0xF9A1B9EF0E64736F6C6343000804003300000000000000000000 ",
              "sourceMap": "182:394:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4d3045c8ec6f48e8969bb5d73cd88f8227d33813ac8e4f040779f9a1b9ef0e64736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x4D ADDRESS GASLIMIT 0xC8 0xEC PUSH16 0x48E8969BB5D73CD88F8227D33813AC8E 0x4F DIV SMOD PUSH26 0xF9A1B9EF0E64736F6C6343000804003300000000000000000000 ",
              "sourceMap": "182:394:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "UniswapV2OracleLibrary": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1c39aa391a50161e3cae883f538c862acb7d473385b498002c791cf6011664964736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC3 SWAP11 LOG3 SWAP2 0xA5 ADD PUSH2 0xE3CA 0xE8 DUP4 CREATE2 CODESIZE 0xC8 PUSH3 0xACB7D4 PUSH20 0x385B498002C791CF6011664964736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "244:1444:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1c39aa391a50161e3cae883f538c862acb7d473385b498002c791cf6011664964736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC3 SWAP11 LOG3 SWAP2 0xA5 ADD PUSH2 0xE3CA 0xE8 DUP4 CREATE2 CODESIZE 0xC8 PUSH3 0xACB7D4 PUSH20 0x385B498002C791CF6011664964736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "244:1444:5:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/Market.sol": {
        "Market": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract MarketFactory",
                  "name": "_factory",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "contract IUniswapV2Pair",
                  "name": "_uniswapPair",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_period",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_initTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_taxMarket",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_feeMarket",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_dPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_tReporting",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minTax",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_avgPriceSwitch",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oracleTimestampStart",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oracleTimestampEnd",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeStart",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeEnd",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oraclePrice1CumulativeStart",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oraclePrice1CumulativeEnd",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardFund",
                  "type": "uint256"
                }
              ],
              "name": "FrameUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "frameKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lotKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "lotOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "acquisitionPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Market.SLot",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Market.Lot",
                  "name": "lotStruct",
                  "type": "tuple"
                }
              ],
              "name": "LotUpdate",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "accountingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "avgPriceSwitch",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "buyLot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "clcAmountToApprove",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "cmpltAmnt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "clcAmountToApproveForUpdate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amnt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "clcFrameTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "clcLotKey",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "clcPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "avgPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "contract MarketFactory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeMarket",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeProtocol",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "frames",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oracleTimestampStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oracleTimestampEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardFund",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceAverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePrice1CumulativeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePrice1CumulativeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Market.SFrame",
                  "name": "state",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "framesKeys",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lotKey",
                  "type": "uint256"
                }
              ],
              "name": "getLot",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "frameKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lotKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "lotOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "acquisitionPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Market.SLot",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct Market.Lot",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getLotKey",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "getLotsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getNumOfUserFrames",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNumberOfFrameKeys",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "startFrame",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numOfFrames",
                  "type": "uint256"
                }
              ],
              "name": "getOpenFrameKeys",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "openFrames",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "getRewardAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getUserFrames",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getUserLots",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "frameKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lotKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "lotOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "acquisitionPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Market.SLot",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct Market.Lot[]",
                  "name": "userLots",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minTax",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ownerMarket",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "period",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tReporting",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "taxMarket",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "uniswapPair",
              "outputs": [
                {
                  "internalType": "contract IUniswapV2Pair",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "updateFramePrices",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "updateLotPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "userFrames",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4349:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "67:77:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "77:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "92:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "86:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "86:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "77:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "132:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "108:30:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "45:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "53:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "61:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "226:93:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "236:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "251:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "236:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "307:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IERC20_$77",
                                  "nodeType": "YulIdentifier",
                                  "src": "267:39:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "267:46:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "267:46:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "204:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "212:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "220:5:8",
                            "type": ""
                          }
                        ],
                        "src": "150:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "410:102:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "420:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "435:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "429:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "429:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "420:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "500:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IUniswapV2Pair_$568",
                                  "nodeType": "YulIdentifier",
                                  "src": "451:48:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "451:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "451:55:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "388:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "396:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "404:5:8",
                            "type": ""
                          }
                        ],
                        "src": "325:187:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "603:102:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "613:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "628:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "622:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "622:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "613:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "693:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_MarketFactory_$2865",
                                  "nodeType": "YulIdentifier",
                                  "src": "644:48:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "644:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "644:55:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_MarketFactory_$2865_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "581:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "589:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "597:5:8",
                            "type": ""
                          }
                        ],
                        "src": "518:187:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "774:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "784:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "799:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "793:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "793:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "784:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "842:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "815:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "815:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "752:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "760:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "768:5:8",
                            "type": ""
                          }
                        ],
                        "src": "711:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1162:1660:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1209:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1218:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1221:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1211:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1211:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1211:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1183:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1192:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1179:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1179:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1204:3:8",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1175:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1175:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1172:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1235:150:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1250:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1264:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1254:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1279:96:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1347:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1358:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1343:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1343:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1367:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_MarketFactory_$2865_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1289:53:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1289:86:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1279:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1395:142:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1410:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1424:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1414:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1440:87:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1499:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1510:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1495:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1495:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1519:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1450:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1450:77:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1440:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1547:151:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1562:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1576:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1566:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1592:96:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1660:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1671:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1656:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1656:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1680:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1602:53:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1602:86:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1592:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1708:129:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1723:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1737:2:8",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1727:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1753:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1799:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1810:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1795:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1795:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1819:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1763:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1763:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1753:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1847:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1862:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1876:3:8",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1866:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1893:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1939:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1950:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1935:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1935:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1959:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1903:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1903:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1893:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1987:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2002:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2016:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2006:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2033:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2079:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2090:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2075:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2075:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2099:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2043:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2043:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "2033:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2127:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2142:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2156:3:8",
                                    "type": "",
                                    "value": "192"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2146:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2173:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2219:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2230:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2215:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2215:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2239:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2183:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2183:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value6",
                                      "nodeType": "YulIdentifier",
                                      "src": "2173:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2267:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2282:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2296:3:8",
                                    "type": "",
                                    "value": "224"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2286:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2313:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2359:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2370:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2355:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2355:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2379:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2323:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2323:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2313:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2407:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2422:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2436:3:8",
                                    "type": "",
                                    "value": "256"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2426:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2453:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2499:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2510:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2495:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2495:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2519:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2463:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2463:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2453:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2547:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2562:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2576:3:8",
                                    "type": "",
                                    "value": "288"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2566:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2593:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2639:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2650:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2635:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2635:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2659:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2603:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2603:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value9",
                                      "nodeType": "YulIdentifier",
                                      "src": "2593:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2687:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2702:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2716:3:8",
                                    "type": "",
                                    "value": "320"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2706:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2733:72:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2777:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2788:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2773:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2773:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2797:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2744:28:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2744:61:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value10",
                                      "nodeType": "YulIdentifier",
                                      "src": "2733:7:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_MarketFactory_$2865t_contract$_IERC20_$77t_contract$_IUniswapV2Pair_$568t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1051:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1062:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1074:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1082:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1090:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1098:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1106:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1114:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "1122:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "1130:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "1138:6:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "1146:6:8",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "1154:7:8",
                            "type": ""
                          }
                        ],
                        "src": "860:1962:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2873:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2883:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2912:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "2894:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2894:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2883:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2855:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2865:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2828:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2972:48:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2982:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3007:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3000:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3000:13:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2993:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2993:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2982:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2954:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2964:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2930:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3084:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3094:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3123:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3105:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3105:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3094:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3066:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3076:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3026:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3208:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3218:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3247:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3229:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3229:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3218:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IUniswapV2Pair_$568",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3190:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3200:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3141:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3332:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3342:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3371:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3353:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3353:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3342:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_MarketFactory_$2865",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3314:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3324:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3265:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3434:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3444:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3459:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3466:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3455:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3455:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3444:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3416:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3426:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3389:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3566:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3576:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3587:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3576:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3548:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3558:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3521:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3644:76:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3698:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3707:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3710:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3700:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3700:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3700:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3667:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3689:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "3674:14:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3674:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3664:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3664:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3657:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3657:40:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3654:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3637:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3604:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3782:92:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3852:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3861:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3864:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3854:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3854:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3854:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3805:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3843:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IERC20_$77",
                                          "nodeType": "YulIdentifier",
                                          "src": "3812:30:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3812:37:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3802:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3802:48:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3795:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3795:56:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3792:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3775:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3726:148:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3945:101:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4024:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4033:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4036:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4026:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4026:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4026:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3968:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4015:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IUniswapV2Pair_$568",
                                          "nodeType": "YulIdentifier",
                                          "src": "3975:39:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3975:46:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3965:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3965:57:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3958:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3958:65:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3955:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IUniswapV2Pair_$568",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3938:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3880:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4117:101:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4196:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4205:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4208:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4198:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4198:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4198:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4140:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4187:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_MarketFactory_$2865",
                                          "nodeType": "YulIdentifier",
                                          "src": "4147:39:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4147:46:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "4137:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4137:57:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4130:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4130:65:8"
                              },
                              "nodeType": "YulIf",
                              "src": "4127:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_MarketFactory_$2865",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4110:5:8",
                            "type": ""
                          }
                        ],
                        "src": "4052:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4267:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4324:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4333:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4336:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4326:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4326:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4326:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4290:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4315:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "4297:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4297:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "4287:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4287:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4280:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4280:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "4277:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4260:5:8",
                            "type": ""
                          }
                        ],
                        "src": "4224:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IUniswapV2Pair_$568(value)\n    }\n\n    function abi_decode_t_contract$_MarketFactory_$2865_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_MarketFactory_$2865(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_MarketFactory_$2865t_contract$_IERC20_$77t_contract$_IUniswapV2Pair_$568t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 352) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_MarketFactory_$2865_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 320\n\n            value10 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IUniswapV2Pair_$568(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_MarketFactory_$2865(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IUniswapV2Pair_$568(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswapV2Pair_$568(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_MarketFactory_$2865(value) {\n        if iszero(eq(value, cleanup_t_contract$_MarketFactory_$2865(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x553E CODESIZE SUB DUP1 PUSH3 0x553E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST DUP10 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x204 DUP2 PUSH3 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21B DUP2 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x42D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP15 DUP3 DUP16 ADD PUSH3 0x20A JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH3 0x27E DUP15 DUP3 DUP16 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH3 0x291 DUP15 DUP3 DUP16 ADD PUSH3 0x1F3 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH3 0x2A4 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH3 0x2B7 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH3 0x2CA DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH3 0x2DD DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH3 0x2F0 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH3 0x304 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 PUSH3 0x318 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x140 PUSH3 0x32C DUP15 DUP3 DUP16 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34C DUP3 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36C DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x380 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x394 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D0 DUP2 PUSH3 0x353 JUMP JUMPDEST DUP2 EQ PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA DUP2 PUSH3 0x35F JUMP JUMPDEST DUP2 EQ PUSH3 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x404 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP2 EQ PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x387 JUMP JUMPDEST DUP2 EQ PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x438 DUP2 PUSH3 0x3BB JUMP JUMPDEST DUP2 EQ PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50E7 DUP1 PUSH3 0x457 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E996639 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6F8 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x650 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x5AF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x8F9ECA82 EQ PUSH2 0x527 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x49D JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3BF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x335 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x3DF7 JUMP JUMPDEST PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x4509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x454D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH2 0x1EBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x220F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x22C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x22DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x658 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x459E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x284A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH2 0x286A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x4568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E2 PUSH2 0x2890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x700 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 GT PUSH2 0x916 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x85A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x902 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x90E SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7FC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x929 DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x969 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH2 0x952 DUP10 PUSH2 0x1E84 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x977 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x989 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x998 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x9B9 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0x45D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC2 SWAP1 PUSH2 0x46B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD7 DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDCA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 PUSH2 0xE06 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE4 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x10F9 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11D0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x122F SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1295 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B9 DUP3 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x12F3 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x1358 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 DUP4 SWAP1 SHL PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 DUP5 SWAP1 SHR PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x1477 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14C6 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST DUP3 PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1532 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15AF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x159C PUSH2 0x3C64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1594 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15BA PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x1924 JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15FF JUMPI PUSH1 0x32 DUP2 PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP PUSH2 0x161B JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x160D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16B1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1911 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x190F JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1741 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x185C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18FC JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18D4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18EA SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x18FB JUMPI PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1907 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16BA JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x191C SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15C3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C57 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x194D SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1988 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19E4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C42 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A74 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x7D0 DUP5 LT PUSH2 0x1BDB JUMPI PUSH2 0x1C42 JUMP JUMPDEST DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C2B SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1C3A SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19ED JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4F SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x192C JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C69 PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D92 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1E78 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1E64 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1E97 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x1EA8 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x1EB2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x1EE2 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x201B JUMPI PUSH2 0x1F14 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x202C SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x2036 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x20CB JUMPI PUSH2 0x2067 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP JUMPDEST JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x21A3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x221B DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2226 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225F SWAP1 PUSH2 0x4699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2273 DUP6 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2281 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22CE DUP2 PUSH2 0x2FFD JUMP JUMPDEST PUSH2 0x22D7 DUP2 PUSH2 0x36A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x22F1 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23AE SWAP1 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23C0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F9 SWAP1 PUSH2 0x4739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2446 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2653 JUMPI DUP1 DUP3 PUSH2 0x245C SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B9 SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2509 SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0x254A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2541 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2596 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2606 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x2613 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2634 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x275F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x275E JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x26A6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C3 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2722 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2743 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP5 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2796 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x27ED SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x28AC TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x28B6 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x28C0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xD SLOAD PUSH2 0x28D4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28DE SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP6 PUSH2 0x28F2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28FC SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP3 POP PUSH1 0xD SLOAD DUP2 DUP5 PUSH2 0x290D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2917 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x2920 DUP7 PUSH2 0x3B30 JUMP JUMPDEST DUP5 PUSH2 0x292B SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2935 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x294B DUP4 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2987 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29E3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29F1 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x29FA TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A33 SWAP1 PUSH2 0x4719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2AB7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFB DUP4 DUP4 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B39 SWAP1 PUSH2 0x4679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B53 DUP4 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2BFF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2C0D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2CAD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2CF0 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2D30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D27 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x2D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D96 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DAF PUSH2 0x3B6C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E2F SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F34 SWAP2 SWAP1 PUSH2 0x3E5C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x2FF3 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x2F5B SWAP2 SWAP1 PUSH2 0x4ABB JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F6E DUP5 DUP7 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F9A SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP8 PUSH2 0x2FA5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2FB8 DUP6 DUP6 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FE4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP7 PUSH2 0x2FEF SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x3006 DUP2 PUSH2 0x2CB3 JUMP JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP3 PUSH2 0x3015 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST GT ISZERO PUSH2 0x3056 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304D SWAP1 PUSH2 0x45B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x30B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x30F5 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x31BC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3150 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x315A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x3200 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x320A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHL PUSH2 0x32A3 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHR PUSH2 0x32CB SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x32D5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3319 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3323 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x334F SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3359 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x337E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3388 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3421 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x343B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x344F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3473 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x352E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3552 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3570 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35C2 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x369A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x36E1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x377D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3774 SWAP1 PUSH2 0x46F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x379E PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x37D9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3849 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x388A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3881 SWAP1 PUSH2 0x4659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393B SWAP1 PUSH2 0x4619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A01 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A53 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3AC8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3B24 SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3B TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3B4B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B67 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3B64 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3B7F SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B8C PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3BDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BD6 SWAP1 PUSH2 0x4759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3C3B SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3CDB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D21 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D36 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D4B DUP2 PUSH2 0x5055 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D60 DUP2 PUSH2 0x506C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D75 DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D8A DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D9F DUP2 PUSH2 0x509A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DC5 DUP5 DUP3 DUP6 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DEE DUP5 DUP3 DUP6 ADD PUSH2 0x3D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E18 DUP6 DUP3 DUP7 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E29 DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E53 DUP5 DUP3 DUP6 ADD PUSH2 0x3D3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E7F DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E90 DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3EA1 DUP7 DUP3 DUP8 ADD PUSH2 0x3D90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ECB DUP5 DUP3 DUP6 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP5 DUP3 DUP6 ADD PUSH2 0x3D7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F1E DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F2F DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F5C DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3F6D DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3F7E DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F94 DUP4 DUP4 PUSH2 0x42D6 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAC DUP4 DUP4 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FC1 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3FD0 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP3 PUSH2 0x4912 JUMP JUMPDEST PUSH2 0x3FEB DUP2 DUP6 PUSH2 0x4942 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FF6 DUP4 PUSH2 0x48F2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4027 JUMPI DUP2 MLOAD PUSH2 0x400E DUP9 DUP3 PUSH2 0x3F88 JUMP JUMPDEST SWAP8 POP PUSH2 0x4019 DUP4 PUSH2 0x4928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FFA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x403F DUP3 PUSH2 0x491D JUMP JUMPDEST PUSH2 0x4049 DUP2 DUP6 PUSH2 0x4953 JUMP JUMPDEST SWAP4 POP PUSH2 0x4054 DUP4 PUSH2 0x4902 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4085 JUMPI DUP2 MLOAD PUSH2 0x406C DUP9 DUP3 PUSH2 0x3FA0 JUMP JUMPDEST SWAP8 POP PUSH2 0x4077 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4058 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x409B DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40AA DUP2 PUSH2 0x4BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40B9 DUP2 PUSH2 0x4C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40C8 DUP2 PUSH2 0x4C2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40D7 DUP2 PUSH2 0x4C52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40E6 DUP2 PUSH2 0x4C64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F9 PUSH1 0x1A DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4104 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411C PUSH1 0xB DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4127 DUP3 PUSH2 0x4E01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413F PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x414A DUP3 PUSH2 0x4E2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4162 PUSH1 0x8 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x416D DUP3 PUSH2 0x4E53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4185 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4190 DUP3 PUSH2 0x4E7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A8 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 DUP3 PUSH2 0x4EA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41CB PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D6 DUP3 PUSH2 0x4ECE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EE PUSH1 0x1B DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41F9 DUP3 PUSH2 0x4EF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4211 PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x421C DUP3 PUSH2 0x4F20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4234 PUSH1 0x19 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x423F DUP3 PUSH2 0x4F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4262 DUP3 PUSH2 0x4F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427A PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4285 DUP3 PUSH2 0x4F9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429D PUSH1 0x11 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A8 DUP3 PUSH2 0x4FC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C0 PUSH1 0x17 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42CB DUP3 PUSH2 0x4FED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x42EC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x42FF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4312 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4325 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4338 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4354 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4367 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x437A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x438D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x43A0 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43BB DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43C8 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43D9 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43E6 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43F7 DUP2 PUSH2 0x4C76 JUMP JUMPDEST PUSH2 0x4404 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4415 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x4422 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4433 DUP2 PUSH2 0x4C90 JUMP JUMPDEST PUSH2 0x4440 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4450 DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x445F DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x447A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4495 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44BE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44F5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x4502 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4523 DUP2 DUP5 PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4545 DUP2 DUP5 PUSH2 0x4034 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4562 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x457D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4598 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45D2 DUP2 PUSH2 0x40EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45F2 DUP2 PUSH2 0x410F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4612 DUP2 PUSH2 0x4132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4632 DUP2 PUSH2 0x4155 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4652 DUP2 PUSH2 0x4178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4672 DUP2 PUSH2 0x419B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4692 DUP2 PUSH2 0x41BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46B2 DUP2 PUSH2 0x41E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46D2 DUP2 PUSH2 0x4204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F2 DUP2 PUSH2 0x4227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4712 DUP2 PUSH2 0x424A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4732 DUP2 PUSH2 0x426D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4752 DUP2 PUSH2 0x4290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4772 DUP2 PUSH2 0x42B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x478E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x433E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x47C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x47EE PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47FB PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4808 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4815 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4822 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x482F PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x483C PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4849 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x486C PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4879 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4886 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4893 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48A0 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48AD PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48BA PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48C7 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48D5 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48E3 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x40CE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4980 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x498B DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x49C0 JUMPI PUSH2 0x49BF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D6 DUP3 PUSH2 0x4BA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E1 DUP4 PUSH2 0x4BA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49F1 JUMPI PUSH2 0x49F0 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A07 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A12 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4A22 JUMPI PUSH2 0x4A21 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A38 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A43 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A7C JUMPI PUSH2 0x4A7B PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A92 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9D DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AB0 JUMPI PUSH2 0x4AAF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC6 DUP3 PUSH2 0x4BD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD1 DUP4 PUSH2 0x4BD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AE4 JUMPI PUSH2 0x4AE3 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B31 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B52 DUP3 PUSH2 0x5016 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B65 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF1 DUP3 PUSH2 0x4BF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C03 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C15 DUP3 PUSH2 0x4C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C27 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4B DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5D DUP3 PUSH2 0x4B44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6F DUP3 PUSH2 0x4B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C89 PUSH2 0x4C84 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA3 PUSH2 0x4C9E DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CBD PUSH2 0x4CB8 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCF DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4D02 JUMPI PUSH2 0x4D01 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D18 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4D23 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D33 JUMPI PUSH2 0x4D32 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x5027 JUMPI PUSH2 0x5026 PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x503B JUMPI PUSH2 0x503A PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5047 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP2 EQ PUSH2 0x5052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x505E DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP2 EQ PUSH2 0x5069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5075 DUP2 PUSH2 0x4B6A JUMP JUMPDEST DUP2 EQ PUSH2 0x5080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x508C DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP2 EQ PUSH2 0x5097 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50A3 DUP2 PUSH2 0x4BD6 JUMP JUMPDEST DUP2 EQ PUSH2 0x50AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SWAP11 0x5C PC SUB SDIV 0xC2 DUP14 DIFFICULTY SWAP1 0xCF 0xAD PUSH18 0x7B5C9A9F000750AE43F3CFEE4AF82739BC7C LOG2 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "586:23985:6:-:0;;;889:3;863:29;;1607:5;1578:34;;;;;;;;;;;;;;;;;;;;1687:4;1673:18;;2796:637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3042:6;3024:15;;:24;;;;;;;;;;;;;;;;;;3081:10;3059:11;;:33;;;;;;;;;;;;;;;;;;3112:7;3103:6;:16;;;;3146:14;3130:13;:30;;;;3184:10;3172:9;:22;;;;3217:10;3205:9;:22;;;;3252:12;3238:11;;:26;;;;;;;;;;;;;;;;;;3284:7;3275:6;:16;;;;3312:8;3302:7;;:18;;;;;;;;;;;;;;;;;;3344:11;3331:10;:24;;;;3375:7;3366:6;:16;;;;3410:15;3393:14;;:32;;;;;;;;;;;;;;;;;;2796:637;;;;;;;;;;;586:23985;;7:137:8;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:169::-;220:5;251:6;245:13;236:22;;267:46;307:5;267:46;:::i;:::-;226:93;;;;:::o;325:187::-;404:5;435:6;429:13;420:22;;451:55;500:5;451:55;:::i;:::-;410:102;;;;:::o;518:187::-;597:5;628:6;622:13;613:22;;644:55;693:5;644:55;:::i;:::-;603:102;;;;:::o;711:143::-;768:5;799:6;793:13;784:22;;815:33;842:5;815:33;:::i;:::-;774:80;;;;:::o;860:1962::-;1074:6;1082;1090;1098;1106;1114;1122;1130;1138;1146;1154:7;1204:3;1192:9;1183:7;1179:23;1175:33;1172:2;;;1221:1;1218;1211:12;1172:2;1264:1;1289:86;1367:7;1358:6;1347:9;1343:22;1289:86;:::i;:::-;1279:96;;1235:150;1424:2;1450:77;1519:7;1510:6;1499:9;1495:22;1450:77;:::i;:::-;1440:87;;1395:142;1576:2;1602:86;1680:7;1671:6;1660:9;1656:22;1602:86;:::i;:::-;1592:96;;1547:151;1737:2;1763:64;1819:7;1810:6;1799:9;1795:22;1763:64;:::i;:::-;1753:74;;1708:129;1876:3;1903:64;1959:7;1950:6;1939:9;1935:22;1903:64;:::i;:::-;1893:74;;1847:130;2016:3;2043:64;2099:7;2090:6;2079:9;2075:22;2043:64;:::i;:::-;2033:74;;1987:130;2156:3;2183:64;2239:7;2230:6;2219:9;2215:22;2183:64;:::i;:::-;2173:74;;2127:130;2296:3;2323:64;2379:7;2370:6;2359:9;2355:22;2323:64;:::i;:::-;2313:74;;2267:130;2436:3;2463:64;2519:7;2510:6;2499:9;2495:22;2463:64;:::i;:::-;2453:74;;2407:130;2576:3;2603:64;2659:7;2650:6;2639:9;2635:22;2603:64;:::i;:::-;2593:74;;2547:130;2716:3;2744:61;2797:7;2788:6;2777:9;2773:22;2744:61;:::i;:::-;2733:72;;2687:128;1162:1660;;;;;;;;;;;;;;:::o;2828:96::-;2865:7;2894:24;2912:5;2894:24;:::i;:::-;2883:35;;2873:51;;;:::o;2930:90::-;2964:7;3007:5;3000:13;2993:21;2982:32;;2972:48;;;:::o;3026:109::-;3076:7;3105:24;3123:5;3105:24;:::i;:::-;3094:35;;3084:51;;;:::o;3141:118::-;3200:7;3229:24;3247:5;3229:24;:::i;:::-;3218:35;;3208:51;;;:::o;3265:118::-;3324:7;3353:24;3371:5;3353:24;:::i;:::-;3342:35;;3332:51;;;:::o;3389:126::-;3426:7;3466:42;3459:5;3455:54;3444:65;;3434:81;;;:::o;3521:77::-;3558:7;3587:5;3576:16;;3566:32;;;:::o;3604:116::-;3674:21;3689:5;3674:21;:::i;:::-;3667:5;3664:32;3654:2;;3710:1;3707;3700:12;3654:2;3644:76;:::o;3726:148::-;3812:37;3843:5;3812:37;:::i;:::-;3805:5;3802:48;3792:2;;3864:1;3861;3854:12;3792:2;3782:92;:::o;3880:166::-;3975:46;4015:5;3975:46;:::i;:::-;3968:5;3965:57;3955:2;;4036:1;4033;4026:12;3955:2;3945:101;:::o;4052:166::-;4147:46;4187:5;4147:46;:::i;:::-;4140:5;4137:57;4127:2;;4208:1;4205;4198:12;4127:2;4117:101;:::o;4224:122::-;4297:24;4315:5;4297:24;:::i;:::-;4290:5;4287:35;4277:2;;4336:1;4333;4326:12;4277:2;4267:79;:::o;586:23985:6:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:39614:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "215:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "225:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "240:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "234:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "225:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "283:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "256:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "256:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "256:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "193:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "201:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "209:5:8",
                            "type": ""
                          }
                        ],
                        "src": "152:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "361:77:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "371:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "386:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "380:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "380:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "371:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "426:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "402:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "402:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "402:30:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "339:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "347:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "355:5:8",
                            "type": ""
                          }
                        ],
                        "src": "301:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "507:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "517:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "532:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "526:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "526:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "575:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint112",
                                  "nodeType": "YulIdentifier",
                                  "src": "548:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "548:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "548:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint112_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "485:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "493:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "501:5:8",
                            "type": ""
                          }
                        ],
                        "src": "444:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "645:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "655:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "677:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "664:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "664:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "655:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "720:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "693:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "693:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "693:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "623:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "631:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "639:5:8",
                            "type": ""
                          }
                        ],
                        "src": "593:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "801:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "811:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "826:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "820:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "820:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "869:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "842:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "842:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "842:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "779:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "787:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "795:5:8",
                            "type": ""
                          }
                        ],
                        "src": "738:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "949:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "959:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "974:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "968:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "968:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "959:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1016:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "990:25:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "990:32:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "990:32:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "927:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "935:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "943:5:8",
                            "type": ""
                          }
                        ],
                        "src": "887:141:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1100:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1146:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1155:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1158:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1148:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1148:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1148:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1121:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1130:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1117:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1117:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1142:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1113:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1113:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1110:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1172:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1187:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1201:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1191:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1216:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1251:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1262:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1247:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1247:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1271:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1226:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1226:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1216:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1070:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1081:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1093:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1034:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1379:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1425:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1434:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1437:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1427:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1427:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1427:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1409:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1396:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1396:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1421:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1392:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1392:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1389:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1451:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1466:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1480:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1470:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1495:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1541:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1552:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1537:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1537:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1561:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1505:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1505:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1495:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1349:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1360:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1372:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1302:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1675:324:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1721:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1730:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1733:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1723:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1723:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1723:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1696:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1705:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1692:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1692:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1717:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1688:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1688:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1685:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1747:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1762:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1776:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1766:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1791:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1826:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1837:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1822:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1822:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1846:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1801:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1801:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1791:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1874:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1889:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1903:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1893:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1919:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1954:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1965:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1950:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1950:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1974:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1929:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1929:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1919:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1637:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1648:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1660:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1668:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1592:407:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2079:204:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2125:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2134:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2137:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2127:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2127:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2127:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2100:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2109:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2096:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2096:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2121:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2092:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2092:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2089:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2151:125:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2166:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2180:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2170:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2195:71:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2238:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2249:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2234:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2234:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2258:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2205:28:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2205:61:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2195:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2049:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2060:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2072:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2005:278:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2399:484:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2445:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2454:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2457:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2447:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2447:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2447:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2420:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2429:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2416:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2416:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2441:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2412:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2412:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2409:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2471:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2486:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2500:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2490:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2515:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2561:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2572:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2557:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2557:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2581:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint112_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2525:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2525:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2515:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2609:129:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2624:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2638:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2628:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2654:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2700:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2711:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2696:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2696:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2720:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint112_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2664:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2664:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2654:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2748:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2763:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2777:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2767:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2793:73:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2838:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2849:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2834:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2834:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2858:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint32_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2803:30:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2803:63:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2793:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2353:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2364:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2376:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2384:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2392:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2289:594:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2955:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3001:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3010:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3013:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3003:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3003:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3003:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2976:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2985:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2972:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2972:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2997:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2968:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2968:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2965:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3027:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3042:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3056:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3046:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3071:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3106:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3117:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3102:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3102:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3126:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3081:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3081:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3071:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2925:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2936:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2948:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2889:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3234:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3280:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3289:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3292:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3282:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3282:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3282:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3255:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3264:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3251:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3251:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3276:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3247:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3247:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3244:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3306:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3321:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3335:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3325:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3350:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3396:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3407:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3392:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3392:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3416:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3360:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3360:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3350:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3204:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3215:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3227:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3157:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3530:324:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3576:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3585:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3588:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3578:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3578:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3578:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3551:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3560:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3547:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3547:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3572:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3543:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3543:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3540:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3602:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3617:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3631:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3621:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3646:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3681:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3692:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3677:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3677:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3701:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3656:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3656:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3646:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3729:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3744:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3758:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3748:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3774:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3809:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3820:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3805:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3805:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3829:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3784:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3784:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3774:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3492:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3503:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3515:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3523:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3447:407:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3960:452:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4006:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4015:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4018:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4008:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4008:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4008:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3981:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3990:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3977:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3977:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4002:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3973:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3973:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3970:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4032:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4047:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4061:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4051:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4076:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4111:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4122:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4107:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4107:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4131:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4086:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4086:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4076:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4159:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4174:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4188:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4178:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4204:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4239:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4250:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4235:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4235:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4259:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4214:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4214:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4204:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4287:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4302:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4316:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4306:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4332:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4367:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4378:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4363:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4363:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4387:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4342:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4342:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4332:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3914:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3925:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3937:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3945:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3953:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3860:552:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4538:139:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4622:6:8"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4630:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4548:73:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4548:86:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4548:86:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4643:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4661:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4666:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4657:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4657:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4643:10:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4511:6:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4519:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "4527:10:8",
                            "type": ""
                          }
                        ],
                        "src": "4418:259:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4763:99:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4807:6:8"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4815:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4773:33:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4773:46:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4773:46:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4828:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4846:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4851:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4842:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4842:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4828:10:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4736:6:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4744:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "4752:10:8",
                            "type": ""
                          }
                        ],
                        "src": "4683:179:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4923:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4940:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4963:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4945:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4945:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4933:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4933:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4933:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4911:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4918:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4868:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5047:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5064:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5087:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5069:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5069:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5057:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5057:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5057:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5035:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5042:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4982:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5320:728:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5330:88:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5412:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5344:67:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5344:74:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5334:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5427:113:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5528:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5533:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5434:93:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5434:106:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5427:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5549:91:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5634:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5564:69:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5564:76:8"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "5553:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5649:21:8",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "5663:7:8"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5653:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5739:284:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5753:34:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "5780:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5774:5:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5774:13:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "5757:13:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5800:110:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5891:13:8"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5906:3:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5807:83:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5807:103:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5800:3:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5923:90:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6006:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5933:72:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5933:80:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5923:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5701:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5704:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5698:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5698:13:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5712:18:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5714:14:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5723:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5726:1:8",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5719:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5719:9:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5714:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5683:14:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5685:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5694:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "5689:1:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "5679:344:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6032:10:8",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6039:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6032:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5299:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5306:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5315:3:8",
                            "type": ""
                          }
                        ],
                        "src": "5156:892:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6208:608:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6218:68:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6280:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6232:47:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6232:54:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6222:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6295:93:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6376:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6381:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6302:73:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6302:86:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6295:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6397:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6462:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6412:49:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6412:56:8"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "6401:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6477:21:8",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "6491:7:8"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "6481:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6567:224:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6581:34:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6608:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "6602:5:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6602:13:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "6585:13:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6628:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6679:13:8"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "6694:3:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "6635:43:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6635:63:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6628:3:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6711:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6774:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6721:52:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6721:60:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6711:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6529:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6532:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6526:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6526:13:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6540:18:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6542:14:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6551:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6554:1:8",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6547:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6547:9:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "6542:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6511:14:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6513:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6522:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "6517:1:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "6507:284:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6800:10:8",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6807:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6800:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6187:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6194:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6203:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6084:732:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6881:50:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6898:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6918:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "6903:14:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6903:21:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6891:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6891:34:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6891:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6869:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6876:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6822:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7015:79:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7032:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7081:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$77_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7037:43:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7037:50:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7025:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7025:63:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7025:63:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7003:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7010:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6937:157:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7187:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7204:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7262:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7209:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7209:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7197:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7197:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7197:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7175:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7182:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7100:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7368:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7385:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7443:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_MarketFactory_$2865_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7390:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7390:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7378:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7378:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7378:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7356:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7363:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7281:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7535:74:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7552:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7596:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_SFrame_$769_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7557:38:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7557:45:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7545:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7545:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7545:58:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7523:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7530:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7462:147:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7676:72:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7693:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7735:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_SLot_$834_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7698:36:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7698:43:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7686:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7686:56:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7686:56:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_SLot_$834_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7664:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7671:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7615:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7900:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7910:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7976:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7981:2:8",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7917:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7917:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7910:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8082:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                  "nodeType": "YulIdentifier",
                                  "src": "7993:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7993:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7993:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8095:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8106:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8111:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8102:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8102:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8095:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7888:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7896:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7754:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8272:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8282:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8348:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8353:2:8",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8289:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8289:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8282:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8454:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                                  "nodeType": "YulIdentifier",
                                  "src": "8365:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8365:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8365:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8467:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8478:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8483:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8474:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8474:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8467:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8260:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8268:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8126:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8644:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8654:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8720:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8725:2:8",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8661:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8661:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8654:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8826:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                                  "nodeType": "YulIdentifier",
                                  "src": "8737:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8737:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8737:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8839:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8850:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8855:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8846:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8846:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8839:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8632:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8640:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8498:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9016:219:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9026:73:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9092:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9097:1:8",
                                    "type": "",
                                    "value": "8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9033:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9033:66:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9026:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9197:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0",
                                  "nodeType": "YulIdentifier",
                                  "src": "9108:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9108:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9108:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9210:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9221:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9226:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9217:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9217:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9210:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9004:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9012:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8870:365:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9387:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9397:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9463:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9468:2:8",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9404:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9404:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9397:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9569:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                  "nodeType": "YulIdentifier",
                                  "src": "9480:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9480:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9480:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9582:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9593:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9598:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9589:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9589:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9582:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9375:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9383:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9241:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9759:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9769:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9835:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9840:2:8",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9776:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9776:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9769:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9941:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                  "nodeType": "YulIdentifier",
                                  "src": "9852:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9852:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9852:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9954:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9965:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9970:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9961:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9961:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9954:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9747:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9755:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9613:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10131:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10141:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10207:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10212:2:8",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10148:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10148:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10141:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10313:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                  "nodeType": "YulIdentifier",
                                  "src": "10224:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10224:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10224:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10326:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10337:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10342:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10333:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10333:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10326:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10119:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10127:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9985:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10503:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10513:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10579:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10584:2:8",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10520:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10520:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10513:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10685:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                                  "nodeType": "YulIdentifier",
                                  "src": "10596:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10596:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10596:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10698:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10709:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10714:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10705:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10705:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10698:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10491:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10499:3:8",
                            "type": ""
                          }
                        ],
                        "src": "10357:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10875:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10885:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10951:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10956:2:8",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10892:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10892:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10885:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11057:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                                  "nodeType": "YulIdentifier",
                                  "src": "10968:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10968:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10968:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11070:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11081:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11086:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11077:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11077:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11070:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10863:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10871:3:8",
                            "type": ""
                          }
                        ],
                        "src": "10729:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11247:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11257:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11323:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11328:2:8",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11264:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11264:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11257:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11429:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11340:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11340:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11340:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11442:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11453:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11458:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11449:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11449:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11442:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11235:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11243:3:8",
                            "type": ""
                          }
                        ],
                        "src": "11101:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11619:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11629:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11695:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11700:2:8",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11636:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11636:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11629:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11801:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                  "nodeType": "YulIdentifier",
                                  "src": "11712:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11712:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11712:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11814:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11825:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11830:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11821:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11821:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11814:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11607:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11615:3:8",
                            "type": ""
                          }
                        ],
                        "src": "11473:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11991:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12001:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12067:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12072:2:8",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12008:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12008:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12001:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12173:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12084:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12084:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12084:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12186:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12197:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12202:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12193:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12193:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12186:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11979:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11987:3:8",
                            "type": ""
                          }
                        ],
                        "src": "11845:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12363:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12373:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12439:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12444:2:8",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12380:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12380:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12373:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12545:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                                  "nodeType": "YulIdentifier",
                                  "src": "12456:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12456:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12456:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12558:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12569:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12574:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12565:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12565:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12558:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12351:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12359:3:8",
                            "type": ""
                          }
                        ],
                        "src": "12217:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12735:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12745:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12811:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12816:2:8",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12752:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12752:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12745:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12917:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12828:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12828:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12828:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12930:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12941:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12946:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12937:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12937:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12930:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12723:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12731:3:8",
                            "type": ""
                          }
                        ],
                        "src": "12589:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13103:942:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13113:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13129:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13134:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13125:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13125:14:8"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "13117:4:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13149:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13188:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13218:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13225:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13214:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13214:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13208:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13208:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13192:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13278:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "13296:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13301:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13292:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13292:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "13244:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13244:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13244:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13327:166:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13364:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13394:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13401:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13390:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13390:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13384:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13384:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13368:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13454:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "13472:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13477:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13468:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13468:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "13420:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13420:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13420:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13503:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13542:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13572:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13579:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13568:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13568:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13562:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13562:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13546:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13632:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "13650:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13655:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13646:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13646:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "13598:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13598:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13598:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13681:176:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13728:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13758:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13765:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13754:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13754:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13748:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13748:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13732:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13818:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "13836:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13841:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13832:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13832:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "13784:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13784:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13784:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13867:171:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13903:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13933:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13940:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13929:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13929:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13923:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13923:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13907:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13999:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14017:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14022:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14013:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14013:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_SLot_$834_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "13959:39:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13959:69:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13959:69:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13090:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13097:3:8",
                            "type": ""
                          }
                        ],
                        "src": "13007:1038:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14203:942:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14213:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14229:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14234:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14225:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14225:14:8"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "14217:4:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14249:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14288:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14318:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14325:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14314:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14314:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14308:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14308:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14292:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14378:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14396:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14401:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14392:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14392:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "14344:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14344:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14344:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14427:166:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14464:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14494:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14501:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14490:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14490:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14484:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14484:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14468:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14554:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14572:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14577:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14568:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14568:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "14520:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14520:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14520:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14603:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14642:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14672:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14679:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14668:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14668:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14662:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14662:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14646:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14732:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14750:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14755:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14746:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14746:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "14698:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14698:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14698:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14781:176:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14828:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14858:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14865:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14854:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14854:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14848:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14848:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14832:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14918:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14936:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14941:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14932:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14932:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "14884:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14884:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14884:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14967:171:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15003:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15033:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15040:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15029:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15029:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15023:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15023:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15007:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15099:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "15117:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15122:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15113:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15113:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_SLot_$834_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "15059:39:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15059:69:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15059:69:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14190:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14197:3:8",
                            "type": ""
                          }
                        ],
                        "src": "14097:1048:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15300:1377:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15310:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15326:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15331:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15322:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15322:14:8"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "15314:4:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15345:18:8",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15362:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "slotValue",
                                  "nodeType": "YulTypedName",
                                  "src": "15349:9:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15373:248:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15411:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15434:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15441:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15430:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15430:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15424:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15424:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "15411:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15460:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "15525:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15480:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15480:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15464:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15582:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "15600:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15605:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15596:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15596:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15548:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15548:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15548:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15631:246:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15667:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15690:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15697:4:8",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15686:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15686:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15680:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15680:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "15667:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15716:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "15781:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15736:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15736:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15720:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15838:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "15856:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15861:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15852:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15852:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15804:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15804:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15804:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15887:248:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15925:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15948:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15955:4:8",
                                            "type": "",
                                            "value": "0x02"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15944:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15944:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15938:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15938:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "15925:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15974:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "16039:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "15994:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15994:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15978:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16096:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16114:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16119:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16110:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16110:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "16062:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16062:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16062:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16145:256:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16191:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16214:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16221:4:8",
                                            "type": "",
                                            "value": "0x03"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16210:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16210:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "16204:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16204:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "16191:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16240:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "16305:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16260:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16260:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "16244:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16362:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16380:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16385:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16376:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16376:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16328:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16328:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16328:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16411:259:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16446:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16469:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16476:4:8",
                                            "type": "",
                                            "value": "0x04"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16465:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16465:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "16459:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16459:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "16446:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16495:83:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "16568:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_enum$_SLot_$834",
                                      "nodeType": "YulIdentifier",
                                      "src": "16515:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16515:63:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "16499:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16631:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16649:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16654:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16645:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16645:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_SLot_$834_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "16591:39:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16591:69:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16591:69:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Lot_$846_storage_to_t_struct$_Lot_$846_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15287:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15294:3:8",
                            "type": ""
                          }
                        ],
                        "src": "15197:1480:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16738:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16755:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16778:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16760:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16760:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16748:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16748:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16748:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16726:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16733:3:8",
                            "type": ""
                          }
                        ],
                        "src": "16683:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16862:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16879:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16902:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16884:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16884:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16872:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16872:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16872:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16850:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16857:3:8",
                            "type": ""
                          }
                        ],
                        "src": "16797:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17019:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17029:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17041:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17052:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17037:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17037:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17029:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17109:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17122:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17133:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17118:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17118:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17065:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17065:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17065:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16991:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17003:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17014:4:8",
                            "type": ""
                          }
                        ],
                        "src": "16921:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17275:206:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17285:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17297:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17308:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17293:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17293:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17285:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17365:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17378:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17389:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17374:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17374:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17321:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17321:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17321:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17446:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17459:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17470:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17455:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17455:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17402:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17402:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17402:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17239:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "17251:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17259:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17270:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17149:332:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17641:288:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17651:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17663:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17674:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17659:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17659:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17651:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17731:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17744:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17755:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17740:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17740:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17687:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17687:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17687:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17812:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17825:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17836:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17821:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17821:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17768:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17768:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17768:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "17894:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17907:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17918:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17903:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17903:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17850:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17850:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17850:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17597:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "17609:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "17617:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17625:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17636:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17487:442:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18061:206:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18071:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18083:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18094:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18079:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18079:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18071:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18151:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18164:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18175:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18160:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18160:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18107:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18107:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18107:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "18232:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18245:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18256:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18241:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18241:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18188:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18188:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18188:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18025:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18037:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18045:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18056:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17935:332:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18461:265:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18471:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18483:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18494:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18479:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18479:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18471:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18518:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18529:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18514:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18514:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18537:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18543:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18533:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18533:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18507:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18507:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18507:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18563:156:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18705:6:8"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18714:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18571:133:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18571:148:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18563:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18433:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18445:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18456:4:8",
                            "type": ""
                          }
                        ],
                        "src": "18273:453:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18880:225:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18890:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18902:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18913:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18898:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18898:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18890:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18937:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18948:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18933:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18933:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18956:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18962:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18952:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18952:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18926:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18926:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18926:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18982:116:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19084:6:8"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19093:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18990:93:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18990:108:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18982:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18852:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18864:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18875:4:8",
                            "type": ""
                          }
                        ],
                        "src": "18732:373:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19203:118:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19213:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19225:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19236:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19221:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19221:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19213:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19287:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19300:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19311:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19296:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19296:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19249:37:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19249:65:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19249:65:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19175:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19187:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19198:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19111:210:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19438:137:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19448:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19460:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19471:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19456:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19456:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19448:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19541:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19554:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19565:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19550:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19550:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19484:56:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19484:84:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19484:84:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19410:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19422:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19433:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19327:248:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19701:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19711:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19723:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19734:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19719:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19719:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19711:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19813:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19826:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19837:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19822:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19822:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19747:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19747:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19747:93:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IUniswapV2Pair_$568__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19673:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19685:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19696:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19581:266:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19973:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19983:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19995:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20006:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19991:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19991:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19983:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "20085:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20098:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20109:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20094:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20094:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20019:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20019:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20019:93:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_MarketFactory_$2865__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19945:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19957:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19968:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19853:266:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20296:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20306:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20318:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20329:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20314:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20314:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20306:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20353:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20364:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20349:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20349:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "20372:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20378:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20368:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20368:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20342:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20342:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20342:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20398:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20532:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20406:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20406:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20398:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20276:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20291:4:8",
                            "type": ""
                          }
                        ],
                        "src": "20125:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20721:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20731:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20743:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20754:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20739:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20739:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20731:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20778:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20789:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20774:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20774:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "20797:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20803:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20793:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20793:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20767:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20767:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20767:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20823:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20957:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20831:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20831:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20823:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20701:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20716:4:8",
                            "type": ""
                          }
                        ],
                        "src": "20550:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21146:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21156:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21168:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21179:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21164:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21164:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21156:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21203:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21214:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21199:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21199:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21222:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21228:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21218:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21218:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21192:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21192:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21192:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21248:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21382:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21256:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21256:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21248:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21126:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21141:4:8",
                            "type": ""
                          }
                        ],
                        "src": "20975:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21571:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21581:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21593:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21604:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21589:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21589:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21581:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21628:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21639:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21624:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21624:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21647:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21653:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21643:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21643:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21617:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21617:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21617:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21673:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21807:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21681:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21681:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21673:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21551:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21566:4:8",
                            "type": ""
                          }
                        ],
                        "src": "21400:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21996:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22006:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22018:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22029:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22014:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22014:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22006:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22053:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22064:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22049:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22049:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22072:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22078:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22068:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22068:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22042:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22042:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22042:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22098:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22232:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22106:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22106:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22098:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21976:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21991:4:8",
                            "type": ""
                          }
                        ],
                        "src": "21825:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22421:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22431:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22443:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22454:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22439:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22439:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22431:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22478:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22489:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22474:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22474:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22497:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22503:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22493:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22493:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22467:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22467:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22467:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22523:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22657:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22531:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22531:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22523:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22401:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22416:4:8",
                            "type": ""
                          }
                        ],
                        "src": "22250:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22846:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22856:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22868:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22879:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22864:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22864:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22856:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22903:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22914:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22899:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22899:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22922:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22928:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22918:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22918:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22892:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22892:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22892:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22948:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23082:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22956:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22956:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22948:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22826:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22841:4:8",
                            "type": ""
                          }
                        ],
                        "src": "22675:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23271:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23281:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23293:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23304:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23289:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23289:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23281:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23328:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23339:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23324:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23324:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "23347:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23353:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23343:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23343:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23317:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23317:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23317:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23373:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23507:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23381:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23381:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23373:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23251:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23266:4:8",
                            "type": ""
                          }
                        ],
                        "src": "23100:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23696:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23706:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23718:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23729:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23714:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23714:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23706:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23753:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23764:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23749:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23749:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "23772:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23778:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23768:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23768:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23742:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23742:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23742:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23798:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23932:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23806:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23806:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23798:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23676:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23691:4:8",
                            "type": ""
                          }
                        ],
                        "src": "23525:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24121:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24131:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24143:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24154:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24139:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24139:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24131:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24178:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24189:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24174:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24174:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "24197:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24203:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "24193:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24193:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24167:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24167:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24167:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24223:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24357:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24231:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24231:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24223:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24101:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24116:4:8",
                            "type": ""
                          }
                        ],
                        "src": "23950:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24546:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24556:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24568:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24579:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24564:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24564:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24556:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24603:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24614:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24599:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24599:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "24622:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24628:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "24618:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24618:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24592:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24592:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24592:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24648:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24782:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24656:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24656:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24648:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24526:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24541:4:8",
                            "type": ""
                          }
                        ],
                        "src": "24375:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24971:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24981:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24993:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25004:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24989:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24989:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24981:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25028:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25039:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25024:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25024:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25047:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25053:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25043:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25043:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25017:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25017:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25017:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25073:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25207:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25081:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25081:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25073:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24951:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24966:4:8",
                            "type": ""
                          }
                        ],
                        "src": "24800:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25396:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25406:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25418:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25429:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25414:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25414:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25406:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25453:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25464:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25449:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25449:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25472:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25478:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25468:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25468:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25442:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25442:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25442:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25498:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25632:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25506:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25506:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25498:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25376:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25391:4:8",
                            "type": ""
                          }
                        ],
                        "src": "25225:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25821:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25831:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25843:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25854:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25839:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25839:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25831:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25878:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25889:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25874:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25874:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25897:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25903:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25893:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25893:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25867:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25867:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25867:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25923:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "26057:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25931:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25931:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25923:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25801:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25816:4:8",
                            "type": ""
                          }
                        ],
                        "src": "25650:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26213:165:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26223:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26235:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26246:3:8",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26231:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26231:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26223:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "26344:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26357:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26368:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26353:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26353:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26260:83:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26260:111:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26260:111:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Lot_$846_memory_ptr__to_t_struct$_Lot_$846_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26185:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "26197:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26208:4:8",
                            "type": ""
                          }
                        ],
                        "src": "26075:303:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26482:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26492:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26504:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26515:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26500:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26500:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26492:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "26572:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26585:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26596:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26581:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26581:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26528:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26528:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26528:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26454:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "26466:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26477:4:8",
                            "type": ""
                          }
                        ],
                        "src": "26384:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26775:244:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26785:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26797:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26808:3:8",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26793:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26793:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26785:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "26866:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26879:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26890:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26875:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26875:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26822:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26822:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26822:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "26984:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26997:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27008:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26993:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26993:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Lot_$846_storage_to_t_struct$_Lot_$846_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26903:80:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26903:109:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26903:109:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_struct$_Lot_$846_storage__to_t_uint256_t_struct$_Lot_$846_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26739:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "26751:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "26759:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26770:4:8",
                            "type": ""
                          }
                        ],
                        "src": "26612:407:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27319:703:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27329:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27341:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27352:3:8",
                                    "type": "",
                                    "value": "256"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27337:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27337:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27329:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "27410:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27423:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27434:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27419:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27419:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27366:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27366:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27366:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27491:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27504:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27515:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27500:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27500:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27447:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27447:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27447:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "27573:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27586:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27597:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27582:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27582:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27529:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27529:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27529:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "27655:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27668:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27679:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27664:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27664:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27611:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27611:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27611:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "27737:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27750:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27761:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27746:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27746:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27693:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27693:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27693:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "27820:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27833:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27844:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27829:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27829:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27776:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27776:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27776:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "27903:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27916:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27927:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27912:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27912:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27859:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27859:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27859:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "27986:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27999:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28010:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27995:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27995:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27942:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27942:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27942:73:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27235:9:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "27247:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "27255:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "27263:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "27271:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "27279:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "27287:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "27295:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "27303:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27314:4:8",
                            "type": ""
                          }
                        ],
                        "src": "27025:997:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28386:877:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28396:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "28408:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28419:3:8",
                                    "type": "",
                                    "value": "320"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28404:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28404:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28396:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "28477:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28490:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28501:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28486:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28486:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28433:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28433:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28433:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "28558:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28571:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28582:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28567:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28567:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28514:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28514:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28514:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "28640:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28653:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28664:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28649:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28649:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28596:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28596:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28596:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "28722:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28735:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28746:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28731:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28731:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28678:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28678:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28678:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "28804:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28817:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28828:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28813:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28813:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28760:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28760:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28760:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "28887:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28900:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28911:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28896:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28896:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28843:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28843:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28843:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "28970:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28983:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28994:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28979:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28979:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28926:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28926:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28926:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "29053:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29066:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29077:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29062:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29062:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29009:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29009:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29009:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "29136:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29149:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29160:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29145:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29145:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29092:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29092:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29092:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "29227:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29240:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29251:3:8",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29236:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29236:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29175:51:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29175:81:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29175:81:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_SFrame_$769__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "28286:9:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "28298:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "28306:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "28314:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "28322:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "28330:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "28338:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "28346:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "28354:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "28362:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "28370:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "28381:4:8",
                            "type": ""
                          }
                        ],
                        "src": "28028:1235:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29361:60:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29371:11:8",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "29379:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29371:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29392:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "29404:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29409:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29400:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29400:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29392:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "29348:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "29356:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29269:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29499:60:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29509:11:8",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "29517:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29509:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29530:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "29542:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29547:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29538:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29538:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29530:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "29486:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "29494:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29427:132:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29659:40:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29670:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29686:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "29680:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29680:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "29670:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29642:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "29652:6:8",
                            "type": ""
                          }
                        ],
                        "src": "29565:134:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29779:40:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29790:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29806:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "29800:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29800:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "29790:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29762:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "29772:6:8",
                            "type": ""
                          }
                        ],
                        "src": "29705:114:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29920:38:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29930:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "29942:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29947:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29938:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29938:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "29930:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "29907:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "29915:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29825:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30039:38:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30049:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "30061:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30066:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30057:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30057:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "30049:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "30026:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "30034:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29964:113:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30214:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30231:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30236:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30224:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30224:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30224:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30252:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30271:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30276:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30267:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30267:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "30252:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30186:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "30191:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "30202:11:8",
                            "type": ""
                          }
                        ],
                        "src": "30083:204:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30404:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30421:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30426:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30414:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30414:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30414:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30442:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30461:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30466:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30457:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30457:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "30442:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30376:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "30381:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "30392:11:8",
                            "type": ""
                          }
                        ],
                        "src": "30293:184:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30579:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30596:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30601:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30589:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30589:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30589:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30617:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30636:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30641:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30632:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30632:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "30617:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30551:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "30556:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "30567:11:8",
                            "type": ""
                          }
                        ],
                        "src": "30483:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30702:261:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30712:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "30735:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "30717:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30717:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "30712:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30746:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "30769:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "30751:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30751:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "30746:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "30909:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "30911:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "30911:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "30911:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "30830:1:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30837:66:8",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "30905:1:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "30833:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30833:74:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "30827:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30827:81:8"
                              },
                              "nodeType": "YulIf",
                              "src": "30824:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30941:16:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "30952:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "30955:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30948:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30948:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "30941:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "30689:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "30692:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "30698:3:8",
                            "type": ""
                          }
                        ],
                        "src": "30658:305:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31011:143:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31021:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31044:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint224",
                                  "nodeType": "YulIdentifier",
                                  "src": "31026:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31026:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31021:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31055:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31078:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint224",
                                  "nodeType": "YulIdentifier",
                                  "src": "31060:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31060:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31055:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31102:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "31104:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31104:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31104:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31099:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "31092:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31092:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31089:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31134:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31143:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31146:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "31139:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31139:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "31134:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint224",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31000:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31003:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "31009:1:8",
                            "type": ""
                          }
                        ],
                        "src": "30969:185:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31202:143:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31212:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31235:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31217:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31217:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31212:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31246:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31269:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31251:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31251:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31246:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31293:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "31295:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31295:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31295:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31290:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "31283:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31283:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31280:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31325:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31334:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31337:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "31330:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31330:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "31325:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31191:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31194:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "31200:1:8",
                            "type": ""
                          }
                        ],
                        "src": "31160:185:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31399:300:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31409:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31432:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31414:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31414:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31409:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31443:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31466:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31448:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31448:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31443:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31641:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "31643:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31643:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31643:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "31553:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "31546:6:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "31546:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "31539:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31539:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "31561:1:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "31568:66:8",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "31636:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "31564:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "31564:74:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "31558:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31558:81:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "31535:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31535:105:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31532:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31673:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31688:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31691:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "31684:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31684:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "31673:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31382:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31385:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "31391:7:8",
                            "type": ""
                          }
                        ],
                        "src": "31351:348:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31750:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31760:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31783:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31765:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31765:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31760:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31794:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31817:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31799:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31799:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31794:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31841:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "31843:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31843:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31843:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31835:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31838:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "31832:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31832:8:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31829:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31873:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31885:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31888:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "31881:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31881:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "31873:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31736:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31739:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "31745:4:8",
                            "type": ""
                          }
                        ],
                        "src": "31705:191:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31946:144:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31956:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31978:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "31961:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31961:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31956:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31989:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "32011:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "31994:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31994:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31989:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "32035:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "32037:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "32037:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "32037:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "32029:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "32032:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "32026:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32026:8:8"
                              },
                              "nodeType": "YulIf",
                              "src": "32023:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "32067:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "32079:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "32082:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "32075:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32075:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "32067:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31932:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31935:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "31941:4:8",
                            "type": ""
                          }
                        ],
                        "src": "31902:188:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32154:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32164:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32179:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32186:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "32175:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32175:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32164:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_from_storage_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32136:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32146:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32096:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32307:43:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32317:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32332:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32339:4:8",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "32328:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32328:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32317:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_from_storage_t_enum$_SLot_$834",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32289:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32299:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32241:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32414:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32424:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "32435:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32424:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_from_storage_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32396:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32406:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32356:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32497:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32507:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32536:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "32518:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32518:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32507:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32479:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32489:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32452:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32596:48:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32606:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "32631:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "32624:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32624:13:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "32617:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32617:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32606:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32578:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32588:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32554:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32705:76:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32715:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "32726:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32715:7:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32769:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_SFrame_$769",
                                  "nodeType": "YulIdentifier",
                                  "src": "32732:36:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32732:43:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32732:43:8"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_SFrame_$769",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32687:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32697:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32650:131:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32840:74:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32850:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "32861:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32850:7:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32902:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_SLot_$834",
                                  "nodeType": "YulIdentifier",
                                  "src": "32867:34:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32867:41:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32867:41:8"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_SLot_$834",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32822:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32832:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32787:127:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32965:69:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32975:53:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32990:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32997:30:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "32986:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32986:42:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32975:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint112",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32947:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32957:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32920:114:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33085:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33095:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33110:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33117:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "33106:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33106:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33095:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33067:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33077:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33040:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33217:97:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33227:81:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33242:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33249:58:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "33238:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33238:70:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33227:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint224",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33199:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33209:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33172:142:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33365:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33375:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "33386:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33375:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33347:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33357:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33320:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33447:49:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33457:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33472:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33479:10:8",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "33468:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33468:22:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33457:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33429:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33439:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33403:93:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33575:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33585:63:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33642:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "33598:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33598:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "33585:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33555:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "33565:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33502:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33733:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33743:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33774:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "33756:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33756:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "33743:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33713:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "33723:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33660:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33874:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33884:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33950:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "33897:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33897:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "33884:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33854:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "33864:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33792:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34050:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34060:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34091:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "34073:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34073:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34060:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34030:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34040:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33968:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34191:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34201:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34267:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_MarketFactory_$2865_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "34214:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34214:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34201:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2865_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34171:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34181:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34109:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34367:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34377:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34408:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "34390:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34390:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34377:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2865_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34347:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34357:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34285:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34494:63:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34504:47:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34545:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_SFrame_$769",
                                  "nodeType": "YulIdentifier",
                                  "src": "34517:27:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34517:34:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34504:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_SFrame_$769_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34474:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34484:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34426:131:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34629:61:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34639:45:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34678:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_SLot_$834",
                                  "nodeType": "YulIdentifier",
                                  "src": "34652:25:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34652:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34639:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_SLot_$834_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34609:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34619:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34563:127:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34771:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34781:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot_value",
                                        "nodeType": "YulIdentifier",
                                        "src": "34844:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_0_unsigned",
                                      "nodeType": "YulIdentifier",
                                      "src": "34821:22:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34821:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_from_storage_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "34790:30:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34790:66:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "34781:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_from_storage_value_offset_0t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulTypedName",
                            "src": "34750:10:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34765:5:8",
                            "type": ""
                          }
                        ],
                        "src": "34696:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34951:99:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34961:83:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot_value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35032:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_0_unsigned",
                                      "nodeType": "YulIdentifier",
                                      "src": "35009:22:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35009:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_from_storage_t_enum$_SLot_$834",
                                  "nodeType": "YulIdentifier",
                                  "src": "34970:38:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34970:74:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "34961:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_from_storage_value_offset_0t_enum$_SLot_$834",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulTypedName",
                            "src": "34930:10:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34945:5:8",
                            "type": ""
                          }
                        ],
                        "src": "34868:182:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35131:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35141:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot_value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35204:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_0_unsigned",
                                      "nodeType": "YulIdentifier",
                                      "src": "35181:22:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35181:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_from_storage_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35150:30:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35150:66:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "35141:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_from_storage_value_offset_0t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulTypedName",
                            "src": "35110:10:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "35125:5:8",
                            "type": ""
                          }
                        ],
                        "src": "35056:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35271:190:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35281:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35308:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35290:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35290:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "35281:5:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "35404:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "35406:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "35406:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "35406:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35329:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35336:66:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "35326:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35326:77:8"
                              },
                              "nodeType": "YulIf",
                              "src": "35323:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35435:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35446:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35453:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35442:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35442:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "35435:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "35257:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "35267:3:8",
                            "type": ""
                          }
                        ],
                        "src": "35228:233:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35501:142:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35511:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "35534:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35516:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35516:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "35511:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35545:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "35568:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35550:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35550:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "35545:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "35592:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "35594:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "35594:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "35594:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "35589:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "35582:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35582:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "35579:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35623:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "35632:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "35635:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "35628:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35628:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "35623:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "35490:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "35493:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "35499:1:8",
                            "type": ""
                          }
                        ],
                        "src": "35467:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35677:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35694:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35697:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35687:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35687:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35687:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35791:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35794:4:8",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35784:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35784:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35784:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35815:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35818:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "35808:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35808:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35808:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "35649:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35863:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35880:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35883:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35873:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35873:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35873:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35977:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35980:4:8",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35970:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35970:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35970:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36001:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36004:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "35994:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35994:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35994:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "35835:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36049:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36066:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36069:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36059:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36059:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36059:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36163:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36166:4:8",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36156:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36156:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36156:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36187:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36190:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "36180:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36180:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36180:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "36021:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36258:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "36268:34:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36293:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "36296:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "36289:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36289:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "36268:8:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_0_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "36239:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nodeType": "YulTypedName",
                            "src": "36249:8:8",
                            "type": ""
                          }
                        ],
                        "src": "36207:102:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36421:70:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36443:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36451:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36439:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36439:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "36455:28:8",
                                    "type": "",
                                    "value": "FRAME END TIME NOT REACHED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36432:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36432:52:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36432:52:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36413:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36315:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36603:55:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36625:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36633:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36621:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36621:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "36637:13:8",
                                    "type": "",
                                    "value": "LOT IN PAST"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36614:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36614:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36614:37:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36595:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36497:161:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36770:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36792:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36800:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36788:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36788:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "36804:15:8",
                                    "type": "",
                                    "value": "NOT LOT OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36781:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36781:39:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36781:39:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36762:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36664:163:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36939:52:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36961:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36969:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36957:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36957:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "36973:10:8",
                                    "type": "",
                                    "value": "NO OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36950:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36950:34:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36950:34:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36931:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36833:158:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37103:63:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37125:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37133:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37121:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37121:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37137:21:8",
                                    "type": "",
                                    "value": "INVALID FRAME PRICE"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37114:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37114:45:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37114:45:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37095:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36997:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37278:63:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37300:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37308:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37296:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37296:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37312:21:8",
                                    "type": "",
                                    "value": "LOT ALREADY SETTLED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37289:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37289:45:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37289:45:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37270:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37172:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37453:60:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37475:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37483:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37471:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37471:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37487:18:8",
                                    "type": "",
                                    "value": "PRICE IS TOO LOW"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37464:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37464:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37464:42:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37445:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37347:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37625:71:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37647:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37655:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37643:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37643:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37659:29:8",
                                    "type": "",
                                    "value": "THIS LOT IS IN A PAST FRAME"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37636:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37636:53:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37636:53:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37617:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37519:177:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37808:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37830:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37838:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37826:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37826:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37842:15:8",
                                    "type": "",
                                    "value": "ALREADY OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37819:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37819:39:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37819:39:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37800:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37702:163:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37977:69:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37999:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38007:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37995:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37995:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38011:27:8",
                                    "type": "",
                                    "value": "APPROVED AMOUNT TOO SMALL"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37988:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37988:51:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37988:51:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37969:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37871:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38158:60:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38180:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38188:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38176:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38176:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38192:18:8",
                                    "type": "",
                                    "value": "FRAME NOT CLOSED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38169:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38169:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38169:42:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38150:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38052:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38330:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38352:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38360:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38348:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38348:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38364:15:8",
                                    "type": "",
                                    "value": "FRAME IN PAST"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38341:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38341:39:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38341:39:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38322:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38224:163:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38499:61:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38521:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38529:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38517:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38517:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38533:19:8",
                                    "type": "",
                                    "value": "LOT IN PAST FRAME"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38510:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38510:43:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38510:43:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38491:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38393:167:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38672:67:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38694:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38702:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38690:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38690:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38706:25:8",
                                    "type": "",
                                    "value": "FixedPoint: DIV_BY_ZERO"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38683:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38683:49:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38683:49:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38664:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38566:173:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38798:62:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "38832:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "38834:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "38834:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "38834:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "38821:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38828:1:8",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "38818:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38818:12:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "38811:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38811:20:8"
                              },
                              "nodeType": "YulIf",
                              "src": "38808:2:8"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_SFrame_$769",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "38791:5:8",
                            "type": ""
                          }
                        ],
                        "src": "38745:115:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38917:62:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "38951:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "38953:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "38953:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "38953:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "38940:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38947:1:8",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "38937:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38937:12:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "38930:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38930:20:8"
                              },
                              "nodeType": "YulIf",
                              "src": "38927:2:8"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_SLot_$834",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "38910:5:8",
                            "type": ""
                          }
                        ],
                        "src": "38866:113:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39028:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39085:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39094:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39097:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39087:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39087:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39087:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39051:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39076:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "39058:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39058:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39048:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39048:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39041:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39041:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39038:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39021:5:8",
                            "type": ""
                          }
                        ],
                        "src": "38985:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39153:76:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39207:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39216:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39219:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39209:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39209:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39209:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39176:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39198:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "39183:14:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39183:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39173:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39173:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39166:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39166:40:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39163:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39146:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39113:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39278:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39335:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39344:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39347:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39337:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39337:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39337:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39301:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39326:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint112",
                                          "nodeType": "YulIdentifier",
                                          "src": "39308:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39308:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39298:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39298:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39291:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39291:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39288:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint112",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39271:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39235:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39406:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39463:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39472:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39475:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39465:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39465:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39465:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39429:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39454:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "39436:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39436:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39426:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39426:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39419:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39419:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39416:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39399:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39363:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39533:78:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39589:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39598:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39601:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39591:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39591:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39591:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39556:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39580:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint32",
                                          "nodeType": "YulIdentifier",
                                          "src": "39563:16:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39563:23:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39553:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39553:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39546:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39546:42:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39543:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39526:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39491:120:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint112_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint112(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xa0)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Market.Lot[] -> struct Market.Lot[]\n    function abi_encode_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MarketFactory_$2865_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SFrame_$769_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_SLot_$834_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_SLot_$834_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Market.Lot -> struct Market.Lot\n    function abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // frameKey\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lotKey\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lotOwner\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // acquisitionPrice\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // state\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_enum$_SLot_$834_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    // struct Market.Lot -> struct Market.Lot\n    function abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // frameKey\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lotKey\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lotOwner\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // acquisitionPrice\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // state\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_enum$_SLot_$834_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    // struct Market.Lot -> struct Market.Lot\n    function abi_encode_t_struct$_Lot_$846_storage_to_t_struct$_Lot_$846_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n        let slotValue := 0\n\n        {\n            // frameKey\n            slotValue := sload(add(value, 0x00))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lotKey\n            slotValue := sload(add(value, 0x01))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lotOwner\n            slotValue := sload(add(value, 0x02))\n            let memberValue0 := extract_from_storage_value_offset_0t_address(slotValue)\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // acquisitionPrice\n            slotValue := sload(add(value, 0x03))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // state\n            slotValue := sload(add(value, 0x04))\n            let memberValue0 := extract_from_storage_value_offset_0t_enum$_SLot_$834(slotValue)\n            abi_encode_t_enum$_SLot_$834_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Pair_$568__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_MarketFactory_$2865__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Lot_$846_memory_ptr__to_t_struct$_Lot_$846_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_Lot_$846_memory_ptr_to_t_struct$_Lot_$846_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_struct$_Lot_$846_storage__to_t_uint256_t_struct$_Lot_$846_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_struct$_Lot_$846_storage_to_t_struct$_Lot_$846_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_SFrame_$769__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint224(x, y) -> r {\n        x := cleanup_t_uint224(x)\n        y := cleanup_t_uint224(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_from_storage_t_address(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_from_storage_t_enum$_SLot_$834(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function cleanup_from_storage_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_SFrame_$769(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SFrame_$769(value)\n    }\n\n    function cleanup_t_enum$_SLot_$834(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SLot_$834(value)\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2865_to_t_address(value) -> converted {\n        converted := convert_t_contract$_MarketFactory_$2865_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2865_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_SFrame_$769_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SFrame_$769(value)\n    }\n\n    function convert_t_enum$_SLot_$834_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SLot_$834(value)\n    }\n\n    function extract_from_storage_value_offset_0t_address(slot_value) -> value {\n        value := cleanup_from_storage_t_address(shift_right_0_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_0t_enum$_SLot_$834(slot_value) -> value {\n        value := cleanup_from_storage_t_enum$_SLot_$834(shift_right_0_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_0t_uint256(slot_value) -> value {\n        value := cleanup_from_storage_t_uint256(shift_right_0_unsigned(slot_value))\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME END TIME NOT REACHED\")\n\n    }\n\n    function store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a(memPtr) {\n\n        mstore(add(memPtr, 0), \"LOT IN PAST\")\n\n    }\n\n    function store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14(memPtr) {\n\n        mstore(add(memPtr, 0), \"NOT LOT OWNER\")\n\n    }\n\n    function store_literal_in_memory_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"NO OWNER\")\n\n    }\n\n    function store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID FRAME PRICE\")\n\n    }\n\n    function store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494(memPtr) {\n\n        mstore(add(memPtr, 0), \"LOT ALREADY SETTLED\")\n\n    }\n\n    function store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"PRICE IS TOO LOW\")\n\n    }\n\n    function store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"THIS LOT IS IN A PAST FRAME\")\n\n    }\n\n    function store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45(memPtr) {\n\n        mstore(add(memPtr, 0), \"ALREADY OWNER\")\n\n    }\n\n    function store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13(memPtr) {\n\n        mstore(add(memPtr, 0), \"APPROVED AMOUNT TOO SMALL\")\n\n    }\n\n    function store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME NOT CLOSED\")\n\n    }\n\n    function store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME IN PAST\")\n\n    }\n\n    function store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01(memPtr) {\n\n        mstore(add(memPtr, 0), \"LOT IN PAST FRAME\")\n\n    }\n\n    function store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12(memPtr) {\n\n        mstore(add(memPtr, 0), \"FixedPoint: DIV_BY_ZERO\")\n\n    }\n\n    function validator_assert_t_enum$_SFrame_$769(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_SLot_$834(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint112(value) {\n        if iszero(eq(value, cleanup_t_uint112(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106102065760003560e01c80637e9966391161011a578063a4d246ff116100ad578063c816841b1161007c578063c816841b1461066e578063c84993af1461068c578063da68cf8b146106bc578063ef78d4fd146106da578063ff5c86b0146106f857610206565b8063a4d246ff146105e8578063ae169a5014610618578063bb15d2dd14610634578063c45a01551461065057610206565b80639495833c116100e95780639495833c146105455780639592de181461057557806396b2c6f3146105a5578063a10340bc146105af57610206565b80637e996639146104bb578063830ab119146104d957806389da88a3146105095780638f9eca821461052757610206565b806341a8b6f81161019d5780635b3ad63e1161016c5780635b3ad63e146103dd57806360f65c601461040d578063659d0ca01461043d5780636f1aefc31461046d5780637358c57a1461049d57610206565b806341a8b6f8146103535780634508477514610383578063499a0fc4146103a1578063527eb4bc146103bf57610206565b80633c80d8ea116101d95780633c80d8ea146102cb5780633d09a82a146102e75780633e16bc2014610305578063410f07101461033557610206565b8063050e88401461020b5780630ef192731461023b57806314aa5a991461026b5780633656d5ee1461029b575b600080fd5b61022560048036038101906102209190613eab565b610716565b6040516102329190614794565b60405180910390f35b61025560048036038101906102509190613da5565b61073a565b6040516102629190614794565b60405180910390f35b61028560048036038101906102809190613efd565b610786565b604051610292919061452b565b60405180910390f35b6102b560048036038101906102b09190613f39565b61091d565b6040516102c29190614794565b60405180910390f35b6102e560048036038101906102e09190613f39565b6109a2565b005b6102ef61123f565b6040516102fc9190614794565b60405180910390f35b61031f600480360381019061031a9190613efd565b611245565b60405161032c9190614794565b60405180910390f35b61033d6112a8565b60405161034a9190614794565b60405180910390f35b61036d60048036038101906103689190613eab565b6112ae565b60405161037a9190614794565b60405180910390f35b61038b61147f565b6040516103989190614465565b60405180910390f35b6103a96114a5565b6040516103b69190614794565b60405180910390f35b6103c76114ab565b6040516103d49190614794565b60405180910390f35b6103f760048036038101906103f29190613eab565b6114b1565b6040516104049190614794565b60405180910390f35b61042760048036038101906104229190613df7565b6114f4565b6040516104349190614794565b60405180910390f35b61045760048036038101906104529190613da5565b611525565b6040516104649190614509565b60405180910390f35b61048760048036038101906104829190613efd565b611c61565b6040516104949190614779565b60405180910390f35b6104a5611d9e565b6040516104b29190614794565b60405180910390f35b6104c3611da4565b6040516104d09190614794565b60405180910390f35b6104f360048036038101906104ee9190613eab565b611daa565b6040516105009190614794565b60405180910390f35b610511611dcd565b60405161051e9190614794565b60405180910390f35b61052f611dda565b60405161053c919061454d565b60405180910390f35b61055f600480360381019061055a9190613da5565b611ded565b60405161056c919061452b565b60405180910390f35b61058f600480360381019061058a9190613eab565b611e84565b60405161059c9190614794565b60405180910390f35b6105ad611eba565b005b6105c960048036038101906105c49190613eab565b6121ae565b6040516105df9a99989796959493929190614856565b60405180910390f35b61060260048036038101906105fd9190613f39565b61220f565b60405161060f9190614794565b60405180910390f35b610632600480360381019061062d9190613eab565b6122c5565b005b61064e60048036038101906106499190613f39565b6122da565b005b6106586127fe565b604051610665919061459e565b60405180910390f35b610676612824565b6040516106839190614583565b60405180910390f35b6106a660048036038101906106a19190613eab565b61284a565b6040516106b39190614794565b60405180910390f35b6106c461286a565b6040516106d19190614568565b60405180910390f35b6106e2612890565b6040516106ef9190614794565b60405180910390f35b610700612896565b60405161070d9190614794565b60405180910390f35b6010818154811061072657600080fd5b906000526020600020016000915090505481565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60608167ffffffffffffffff8111156107c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156107f65781602001602082028036833780820191505090505b50905060005b828111610916576000816000546108139190614a2d565b8561081e9190614975565b90506000600281111561085a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060090160009054906101000a900460ff1660028111156108b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461090257808383815181106108f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b50808061090e90614cc4565b9150506107fc565b5092915050565b600080610929856114b1565b9050600061096982600e6000858152602001908152602001600020600b01600061095289611e84565b81526020019081526020016000206003015461289c565b90506000610977838661289c565b90508082106109895760009350610998565b81816109959190614a87565b93505b5050509392505050565b60006109ad8461293f565b90506109b98183612aef565b60006109c58285612b47565b90506109d0426114b1565b821015610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a09906145d9565b60405180910390fd5b600e6000838152602001908152602001600020600b01600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac2906146b9565b60405180910390fd5b6000610ad7838561289c565b905080600e6000858152602001908152602001600020600b01600084815260200190815260200160002060030154610b0f9190614975565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610b6c929190614480565b60206040518083038186803b158015610b8457600080fd5b505afa158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc9190613ed4565b1015610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf4906146d9565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084600e6000898152602001908152602001600020600b01600088815260200190815260200160002060030154610c739190614975565b6040518463ffffffff1660e01b8152600401610c91939291906144a9565b602060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190613e33565b5080600e600085815260200190815260200160002060030154610d069190614975565b600e60008581526020019081526020016000206003018190555060016002811115610d5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000858152602001908152602001600020600b01600084815260200190815260200160002060040160009054906101000a900460ff166002811115610dca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610f79576000610e0684600e6000878152602001908152602001600020600b0160008681526020019081526020016000206003015461289c565b9050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600e6000878152602001908152602001600020600b01600086815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e6000888152602001908152602001600020600b0160008781526020019081526020016000206003015484610ec79190614975565b6040518363ffffffff1660e01b8152600401610ee49291906144e0565b602060405180830381600087803b158015610efe57600080fd5b505af1158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f369190613e33565b5080600e600086815260200190815260200160002060030154610f599190614a87565b600e60008681526020019081526020016000206003018190555050610ff3565b6001600e6000858152602001908152602001600020600b01600084815260200190815260200160002060040160006101000a81548160ff02191690836002811115610fed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b33600e6000858152602001908152602001600020600b01600084815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600e6000858152602001908152602001600020600b01600084815260200190815260200160002060030181905550600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150506001900390600052602060002001600090919091909150556110f9611eba565b7ff733bd7f4402cb7d331b34d5cd22f432b9bf71a833f786974545860d74976af283600e600086815260200190815260200160002060010154600e600087815260200190815260200160002060020154600e600088815260200190815260200160002060050154600e600089815260200190815260200160002060060154600e60008a815260200190815260200160002060070154600e60008b815260200190815260200160002060080154600e60008c8152602001908152602001600020600301546040516111d09897969594939291906147d8565b60405180910390a17f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d83600e6000868152602001908152602001600020600b01600085815260200190815260200160002060405161122f9291906147af565b60405180910390a1505050505050565b600b5481565b6000600e6000848152602001908152602001600020600a018281548110611295577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b60065481565b60006112b982612cb3565b6000600e600084815260200190815260200160002060010154600e6000858152602001908152602001600020600201546112f39190614a87565b9050600c60009054906101000a900460ff16156113a257604051806020016040528082600e600087815260200190815260200160002060050154600e60008881526020019081526020016000206006015461134e9190614a87565b61135891906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169150611436565b604051806020016040528082600e600087815260200190815260200160002060070154600e6000888152602001908152602001600020600801546113e69190614a87565b6113f091906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1691505b7406d79f82328ea3da61e066ebb2f88a000000000000607083901b61145b91906149fc565b600d54607084901c61146d9190614a2d565b6114779190614975565b915050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60025481565b600060015482116114c65760015490506114ef565b600054600154836114d79190614a87565b6114e19190614d0d565b826114ec9190614a87565b90505b919050565b600f602052816000526040600020818154811061151057600080fd5b90600052602060002001600091509150505481565b60606000611532426114b1565b90506107d067ffffffffffffffff811115611576577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156115af57816020015b61159c613c64565b8152602001906001900390816115945790505b5091506115ba613c64565b60008080600190505b6064811161192457603281106115ff576032816115e09190614a87565b6000546115ed9190614a2d565b856115f89190614975565b915061161b565b8060005461160d9190614a2d565b856116189190614a87565b91505b60016002811115611655577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600084815260200190815260200160002060090160009054906101000a900460ff1660028111156116b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156119115760005b600e6000848152602001908152602001600020600a018054905081101561190f57600e6000848152602001908152602001600020600b016000600e6000868152602001908152602001600020600a018381548110611741577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611824577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561185c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505094508773ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff1614156118fc57848785815181106118d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525083806118ea90614cc4565b9450506107d084106118fb5761190f565b5b808061190790614cc4565b9150506116ba565b505b808061191c90614cc4565b9150506115c3565b506000600190505b60318111611c5757806000546119429190614a2d565b8561194d9190614a87565b9150600280811115611988577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600084815260200190815260200160002060090160009054906101000a900460ff1660028111156119e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611c445760005b600e6000848152602001908152602001600020600a0180549050811015611c4257600e6000848152602001908152602001600020600b016000600e6000868152602001908152602001600020600a018381548110611a74577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611b57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611b8f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505094508773ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff161415611c2f576107d08410611bdb57611c42565b84878581518110611c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508380611c2b90614cc4565b9450505b8080611c3a90614cc4565b9150506119ed565b505b8080611c4f90614cc4565b91505061192c565b5050505050919050565b611c69613c64565b600e6000848152602001908152602001600020600b0160008381526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611d5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611d92577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905092915050565b60015481565b60075481565b6000600e6000838152602001908152602001600020600a01805490509050919050565b6000601080549050905090565b600c60009054906101000a900460ff1681565b6060600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611e7857602002820191906000526020600020905b815481526020019060010190808311611e64575b50505050509050919050565b6000808211611e97576005549050611eb5565b60055460055483611ea891906149fc565b611eb29190614a2d565b90505b919050565b6000611ec5426114b1565b905060035460005482611ed89190614975565b611ee29190614a87565b42101561201b57611f14600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612da2565b8063ffffffff169050600e60008581526020019081526020016000206005016000600e60008781526020019081526020016000206007016000600e60008981526020019081526020016000206001016000869190505585919050558491905055505050600e600082815260200190815260200160002060050154600e600083815260200190815260200160002060070154600e600084815260200190815260200160002060010154600e60008581526020019081526020016000206006016000600e60008781526020019081526020016000206008016000600e600089815260200190815260200160002060020160008691905055859190505584919050555050506120cc565b6003546000548261202c9190614975565b6120369190614a87565b42106120cb57612067600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612da2565b8063ffffffff169050600e60008581526020019081526020016000206006016000600e60008781526020019081526020016000206008016000600e600089815260200190815260200160002060020160008691905055859190505584919050555050505b5b7ff733bd7f4402cb7d331b34d5cd22f432b9bf71a833f786974545860d74976af281600e600084815260200190815260200160002060010154600e600085815260200190815260200160002060020154600e600086815260200190815260200160002060050154600e600087815260200190815260200160002060060154600e600088815260200190815260200160002060070154600e600089815260200190815260200160002060080154600e60008a8152602001908152602001600020600301546040516121a39897969594939291906147d8565b60405180910390a150565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508a565b60008061221b856114b1565b9050612226426114b1565b811015612268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161225f90614699565b60405180910390fd5b600061227385611e84565b90506000612281838661289c565b905080600e6000858152602001908152602001600020600b016000848152602001908152602001600020600301546122b99190614975565b93505050509392505050565b6122ce81612ffd565b6122d7816136a8565b50565b60006122e58461293f565b90506122f18183612aef565b60006122fd8285612b47565b90503373ffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600b01600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ae906145f9565b60405180910390fd5b6123c0426114b1565b821015612402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123f990614739565b60405180910390fd5b600061240e838561289c565b9050600061244684600e6000878152602001908152602001600020600b0160008681526020019081526020016000206003015461289c565b90508082111561265357808261245c9190614a87565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016124b9929190614480565b60206040518083038186803b1580156124d157600080fd5b505afa1580156124e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125099190613ed4565b101561254a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612541906146d9565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084866125969190614a87565b6040518463ffffffff1660e01b81526004016125b4939291906144a9565b602060405180830381600087803b1580156125ce57600080fd5b505af11580156125e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126069190613e33565b5080826126139190614a87565b600e6000868152602001908152602001600020600301546126349190614975565b600e60008681526020019081526020016000206003018190555061275f565b8082101561275e57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3384846126a69190614a87565b6040518363ffffffff1660e01b81526004016126c39291906144e0565b602060405180830381600087803b1580156126dd57600080fd5b505af11580156126f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127159190613e33565b5081816127229190614a87565b600e6000868152602001908152602001600020600301546127439190614a87565b600e6000868152602001908152602001600020600301819055505b5b84600e6000868152602001908152602001600020600b01600085815260200190815260200160002060030181905550612796611eba565b7f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d84600e6000878152602001908152602001600020600b0160008681526020019081526020016000206040516127ed9291906147af565b60405180910390a150505050505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600e6000838152602001908152602001600020600301549050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60035481565b600080426000546128ac426114b1565b6128b69190614975565b6128c09190614a87565b90506000805482600d546128d49190614a2d565b6128de91906149fc565b9050620186a0600754856128f29190614a2d565b6128fc91906149fc565b9250600d54818461290d9190614a2d565b61291791906149fc565b61292086613b30565b8461292b9190614a2d565b6129359190614975565b9250505092915050565b60008061294b836114b1565b905060006002811115612987577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060090160009054906101000a900460ff1660028111156129e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146129f15780915050612aea565b6129fa426114b1565b811015612a3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3390614719565b60405180910390fd5b80600e6000838152602001908152602001600020600001819055506001600e600083815260200190815260200160002060090160006101000a81548160ff02191690836002811115612ab7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506010819080600181540180825580915050600190039060005260206000200160009091909190915055809150505b919050565b6000612afb838361289c565b9050600b54811015612b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b3990614679565b60405180910390fd5b505050565b600080612b5383611e84565b905060006002811115612b8f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000868152602001908152602001600020600b01600083815260200190815260200160002060040160009054906101000a900460ff166002811115612bff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14612c0d5780915050612cad565b83600e6000868152602001908152602001600020600b0160008381526020019081526020016000206000018190555080600e6000868152602001908152602001600020600b01600083815260200190815260200160002060010181905550600e6000858152602001908152602001600020600a01819080600181540180825580915050600190039060005260206000200160009091909190915055809150505b92915050565b6000600e600083815260200190815260200160002060050154111580612cf057506000600e60008381526020019081526020016000206006015411155b15612d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d2790614639565b60405180910390fd5b600e600082815260200190815260200160002060060154600e6000838152602001908152602001600020600501541415612d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d9690614639565b60405180910390fd5b50565b6000806000612daf613b6c565b90508373ffffffffffffffffffffffffffffffffffffffff16635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b158015612df757600080fd5b505afa158015612e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e2f9190613ed4565b92508373ffffffffffffffffffffffffffffffffffffffff16635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b158015612e7757600080fd5b505afa158015612e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eaf9190613ed4565b915060008060008673ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612efc57600080fd5b505afa158015612f10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f349190613e5c565b9250925092508363ffffffff168163ffffffff1614612ff35760008185612f5b9190614abb565b90508063ffffffff16612f6e8486613b84565b600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612f9a9190614a2d565b87612fa59190614975565b96508063ffffffff16612fb88585613b84565b600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612fe49190614a2d565b86612fef9190614975565b9550505b5050509193909250565b61300681612cb3565b42600054826130159190614975565b1115613056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161304d906145b9565b60405180910390fd5b6002600e600083815260200190815260200160002060090160006101000a81548160ff021916908360028111156130b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600e600083815260200190815260200160002060010154600e6000848152602001908152602001600020600201546130f59190614a87565b9050600c60009054906101000a900460ff16156131bc57604051806020016040528082600e600086815260200190815260200160002060050154600e6000878152602001908152602001600020600601546131509190614a87565b61315a91906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600e600084815260200190815260200160002060040181905550613268565b604051806020016040528082600e600086815260200190815260200160002060070154600e6000878152602001908152602001600020600801546132009190614a87565b61320a91906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600401819055505b7406d79f82328ea3da61e066ebb2f88a0000000000006070600e600085815260200190815260200160002060040154901b6132a391906149fc565b600d546070600e600086815260200190815260200160002060040154901c6132cb9190614a2d565b6132d59190614975565b600e6000848152602001908152602001600020600401819055506000620186a0600654600e6000868152602001908152602001600020600301546133199190614a2d565b61332391906149fc565b90506000620186a0600254600e60008781526020019081526020016000206003015461334f9190614a2d565b61335991906149fc565b90508082600e60008781526020019081526020016000206003015461337e9190614a87565b6133889190614a87565b600e600086815260200190815260200160002060030181905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016134219291906144e0565b602060405180830381600087803b15801561343b57600080fd5b505af115801561344f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134739190613e33565b50600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561351a57600080fd5b505afa15801561352e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135529190613dce565b836040518363ffffffff1660e01b81526004016135709291906144e0565b602060405180830381600087803b15801561358a57600080fd5b505af115801561359e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135c29190613e33565b507ff733bd7f4402cb7d331b34d5cd22f432b9bf71a833f786974545860d74976af284600e600087815260200190815260200160002060010154600e600088815260200190815260200160002060020154600e600089815260200190815260200160002060050154600e60008a815260200190815260200160002060060154600e60008b815260200190815260200160002060070154600e60008c815260200190815260200160002060080154600e60008d81526020019081526020016000206003015460405161369a9897969594939291906147d8565b60405180910390a150505050565b6002808111156136e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060090160009054906101000a900460ff16600281111561373d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461377d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613774906146f9565b60405180910390fd5b600061379e600e600084815260200190815260200160002060040154611e84565b90506002808111156137d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000848152602001908152602001600020600b01600083815260200190815260200160002060040160009054906101000a900460ff166002811115613849577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561388a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161388190614659565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600b01600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161393b90614619565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600e6000858152602001908152602001600020600b01600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e6000868152602001908152602001600020600301546040518363ffffffff1660e01b8152600401613a019291906144e0565b602060405180830381600087803b158015613a1b57600080fd5b505af1158015613a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a539190613e33565b506002600e6000848152602001908152602001600020600b01600083815260200190815260200160002060040160006101000a81548160ff02191690836002811115613ac8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d82600e6000858152602001908152602001600020600b016000848152602001908152602001600020604051613b249291906147af565b60405180910390a15050565b6000613b3b426114b1565b821415613b4b5760009050613b67565b6000544283613b5a9190614a87565b613b6491906149fc565b90505b919050565b600064010000000042613b7f9190614d0d565b905090565b613b8c613ce1565b6000826dffffffffffffffffffffffffffff1611613bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613bd690614759565b60405180910390fd5b6040518060200160405280836dffffffffffffffffffffffffffff16607060ff16866dffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16901b613c3b91906149cb565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250905092915050565b6040518060a001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160006002811115613cdb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b604051806020016040528060007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050613d218161503e565b92915050565b600081519050613d368161503e565b92915050565b600081519050613d4b81615055565b92915050565b600081519050613d608161506c565b92915050565b600081359050613d7581615083565b92915050565b600081519050613d8a81615083565b92915050565b600081519050613d9f8161509a565b92915050565b600060208284031215613db757600080fd5b6000613dc584828501613d12565b91505092915050565b600060208284031215613de057600080fd5b6000613dee84828501613d27565b91505092915050565b60008060408385031215613e0a57600080fd5b6000613e1885828601613d12565b9250506020613e2985828601613d66565b9150509250929050565b600060208284031215613e4557600080fd5b6000613e5384828501613d3c565b91505092915050565b600080600060608486031215613e7157600080fd5b6000613e7f86828701613d51565b9350506020613e9086828701613d51565b9250506040613ea186828701613d90565b9150509250925092565b600060208284031215613ebd57600080fd5b6000613ecb84828501613d66565b91505092915050565b600060208284031215613ee657600080fd5b6000613ef484828501613d7b565b91505092915050565b60008060408385031215613f1057600080fd5b6000613f1e85828601613d66565b9250506020613f2f85828601613d66565b9150509250929050565b600080600060608486031215613f4e57600080fd5b6000613f5c86828701613d66565b9350506020613f6d86828701613d66565b9250506040613f7e86828701613d66565b9150509250925092565b6000613f9483836142d6565b60a08301905092915050565b6000613fac8383614447565b60208301905092915050565b613fc181614b26565b82525050565b613fd081614b26565b82525050565b6000613fe182614912565b613feb8185614942565b9350613ff6836148f2565b8060005b8381101561402757815161400e8882613f88565b975061401983614928565b925050600181019050613ffa565b5085935050505092915050565b600061403f8261491d565b6140498185614953565b935061405483614902565b8060005b8381101561408557815161406c8882613fa0565b975061407783614935565b925050600181019050614058565b5085935050505092915050565b61409b81614b38565b82525050565b6140aa81614be6565b82525050565b6140b981614c0a565b82525050565b6140c881614c2e565b82525050565b6140d781614c52565b82525050565b6140e681614c64565b82525050565b60006140f9601a83614964565b915061410482614dd8565b602082019050919050565b600061411c600b83614964565b915061412782614e01565b602082019050919050565b600061413f600d83614964565b915061414a82614e2a565b602082019050919050565b6000614162600883614964565b915061416d82614e53565b602082019050919050565b6000614185601383614964565b915061419082614e7c565b602082019050919050565b60006141a8601383614964565b91506141b382614ea5565b602082019050919050565b60006141cb601083614964565b91506141d682614ece565b602082019050919050565b60006141ee601b83614964565b91506141f982614ef7565b602082019050919050565b6000614211600d83614964565b915061421c82614f20565b602082019050919050565b6000614234601983614964565b915061423f82614f49565b602082019050919050565b6000614257601083614964565b915061426282614f72565b602082019050919050565b600061427a600d83614964565b915061428582614f9b565b602082019050919050565b600061429d601183614964565b91506142a882614fc4565b602082019050919050565b60006142c0601783614964565b91506142cb82614fed565b602082019050919050565b60a0820160008201516142ec6000850182614447565b5060208201516142ff6020850182614447565b5060408201516143126040850182613fb8565b5060608201516143256060850182614447565b50608082015161433860808501826140dd565b50505050565b60a0820160008201516143546000850182614447565b5060208201516143676020850182614447565b50604082015161437a6040850182613fb8565b50606082015161438d6060850182614447565b5060808201516143a060808501826140dd565b50505050565b60a0820160008083015490506143bb81614caa565b6143c86000860182614447565b50600183015490506143d981614caa565b6143e66020860182614447565b50600283015490506143f781614c76565b6144046040860182613fb8565b506003830154905061441581614caa565b6144226060860182614447565b506004830154905061443381614c90565b61444060808601826140dd565b5050505050565b61445081614bcc565b82525050565b61445f81614bcc565b82525050565b600060208201905061447a6000830184613fc7565b92915050565b60006040820190506144956000830185613fc7565b6144a26020830184613fc7565b9392505050565b60006060820190506144be6000830186613fc7565b6144cb6020830185613fc7565b6144d86040830184614456565b949350505050565b60006040820190506144f56000830185613fc7565b6145026020830184614456565b9392505050565b600060208201905081810360008301526145238184613fd6565b905092915050565b600060208201905081810360008301526145458184614034565b905092915050565b60006020820190506145626000830184614092565b92915050565b600060208201905061457d60008301846140a1565b92915050565b600060208201905061459860008301846140b0565b92915050565b60006020820190506145b360008301846140bf565b92915050565b600060208201905081810360008301526145d2816140ec565b9050919050565b600060208201905081810360008301526145f28161410f565b9050919050565b6000602082019050818103600083015261461281614132565b9050919050565b6000602082019050818103600083015261463281614155565b9050919050565b6000602082019050818103600083015261465281614178565b9050919050565b600060208201905081810360008301526146728161419b565b9050919050565b60006020820190508181036000830152614692816141be565b9050919050565b600060208201905081810360008301526146b2816141e1565b9050919050565b600060208201905081810360008301526146d281614204565b9050919050565b600060208201905081810360008301526146f281614227565b9050919050565b600060208201905081810360008301526147128161424a565b9050919050565b600060208201905081810360008301526147328161426d565b9050919050565b6000602082019050818103600083015261475281614290565b9050919050565b60006020820190508181036000830152614772816142b3565b9050919050565b600060a08201905061478e600083018461433e565b92915050565b60006020820190506147a96000830184614456565b92915050565b600060c0820190506147c46000830185614456565b6147d160208301846143a6565b9392505050565b6000610100820190506147ee600083018b614456565b6147fb602083018a614456565b6148086040830189614456565b6148156060830188614456565b6148226080830187614456565b61482f60a0830186614456565b61483c60c0830185614456565b61484960e0830184614456565b9998505050505050505050565b60006101408201905061486c600083018d614456565b614879602083018c614456565b614886604083018b614456565b614893606083018a614456565b6148a06080830189614456565b6148ad60a0830188614456565b6148ba60c0830187614456565b6148c760e0830186614456565b6148d5610100830185614456565b6148e36101208301846140ce565b9b9a5050505050505050505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061498082614bcc565b915061498b83614bcc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156149c0576149bf614d3e565b5b828201905092915050565b60006149d682614ba4565b91506149e183614ba4565b9250826149f1576149f0614d6d565b5b828204905092915050565b6000614a0782614bcc565b9150614a1283614bcc565b925082614a2257614a21614d6d565b5b828204905092915050565b6000614a3882614bcc565b9150614a4383614bcc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614a7c57614a7b614d3e565b5b828202905092915050565b6000614a9282614bcc565b9150614a9d83614bcc565b925082821015614ab057614aaf614d3e565b5b828203905092915050565b6000614ac682614bd6565b9150614ad183614bd6565b925082821015614ae457614ae3614d3e565b5b828203905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b6000819050919050565b6000614b3182614b84565b9050919050565b60008115159050919050565b6000819050614b5282615016565b919050565b6000819050614b658261502a565b919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b6000614bf182614bf8565b9050919050565b6000614c0382614b84565b9050919050565b6000614c1582614c1c565b9050919050565b6000614c2782614b84565b9050919050565b6000614c3982614c40565b9050919050565b6000614c4b82614b84565b9050919050565b6000614c5d82614b44565b9050919050565b6000614c6f82614b57565b9050919050565b6000614c89614c8483614dcb565b614aef565b9050919050565b6000614ca3614c9e83614dcb565b614b0f565b9050919050565b6000614cbd614cb883614dcb565b614b1c565b9050919050565b6000614ccf82614bcc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614d0257614d01614d3e565b5b600182019050919050565b6000614d1882614bcc565b9150614d2383614bcc565b925082614d3357614d32614d6d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160001c9050919050565b7f4652414d4520454e442054494d45204e4f542052454143484544000000000000600082015250565b7f4c4f5420494e2050415354000000000000000000000000000000000000000000600082015250565b7f4e4f54204c4f54204f574e455200000000000000000000000000000000000000600082015250565b7f4e4f204f574e4552000000000000000000000000000000000000000000000000600082015250565b7f494e56414c4944204652414d4520505249434500000000000000000000000000600082015250565b7f4c4f5420414c524541445920534554544c454400000000000000000000000000600082015250565b7f505249434520495320544f4f204c4f5700000000000000000000000000000000600082015250565b7f54484953204c4f5420495320494e20412050415354204652414d450000000000600082015250565b7f414c5245414459204f574e455200000000000000000000000000000000000000600082015250565b7f415050524f56454420414d4f554e5420544f4f20534d414c4c00000000000000600082015250565b7f4652414d45204e4f5420434c4f53454400000000000000000000000000000000600082015250565b7f4652414d4520494e205041535400000000000000000000000000000000000000600082015250565b7f4c4f5420494e2050415354204652414d45000000000000000000000000000000600082015250565b7f4669786564506f696e743a204449565f42595f5a45524f000000000000000000600082015250565b6003811061502757615026614d9c565b5b50565b6003811061503b5761503a614d9c565b5b50565b61504781614b26565b811461505257600080fd5b50565b61505e81614b38565b811461506957600080fd5b50565b61507581614b6a565b811461508057600080fd5b50565b61508c81614bcc565b811461509757600080fd5b50565b6150a381614bd6565b81146150ae57600080fd5b5056fea2646970667358221220a69a5c580305c28d4490cfad717b5c9a9f000750ae43f3cfee4af82739bc7ca264736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E996639 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6F8 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x650 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x5AF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x8F9ECA82 EQ PUSH2 0x527 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x49D JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3BF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x335 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x3DF7 JUMP JUMPDEST PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x4509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x454D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH2 0x1EBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x220F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x22C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x22DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x658 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x459E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x284A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH2 0x286A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x4568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E2 PUSH2 0x2890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x700 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 GT PUSH2 0x916 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x85A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x902 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x90E SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7FC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x929 DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x969 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH2 0x952 DUP10 PUSH2 0x1E84 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x977 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x989 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x998 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x9B9 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0x45D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC2 SWAP1 PUSH2 0x46B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD7 DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDCA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 PUSH2 0xE06 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE4 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x10F9 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11D0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x122F SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1295 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B9 DUP3 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x12F3 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x1358 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 DUP4 SWAP1 SHL PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 DUP5 SWAP1 SHR PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x1477 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14C6 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST DUP3 PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1532 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15AF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x159C PUSH2 0x3C64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1594 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15BA PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x1924 JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15FF JUMPI PUSH1 0x32 DUP2 PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP PUSH2 0x161B JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x160D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16B1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1911 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x190F JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1741 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x185C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18FC JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18D4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18EA SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x18FB JUMPI PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1907 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16BA JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x191C SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15C3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C57 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x194D SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1988 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19E4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C42 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A74 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x7D0 DUP5 LT PUSH2 0x1BDB JUMPI PUSH2 0x1C42 JUMP JUMPDEST DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C2B SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1C3A SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19ED JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4F SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x192C JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C69 PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D92 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1E78 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1E64 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1E97 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x1EA8 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x1EB2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x1EE2 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x201B JUMPI PUSH2 0x1F14 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x202C SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x2036 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x20CB JUMPI PUSH2 0x2067 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP JUMPDEST JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x21A3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x221B DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2226 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225F SWAP1 PUSH2 0x4699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2273 DUP6 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2281 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22CE DUP2 PUSH2 0x2FFD JUMP JUMPDEST PUSH2 0x22D7 DUP2 PUSH2 0x36A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x22F1 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23AE SWAP1 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23C0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F9 SWAP1 PUSH2 0x4739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2446 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2653 JUMPI DUP1 DUP3 PUSH2 0x245C SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B9 SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2509 SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0x254A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2541 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2596 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2606 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x2613 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2634 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x275F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x275E JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x26A6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C3 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2722 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2743 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP5 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2796 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x27ED SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x28AC TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x28B6 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x28C0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xD SLOAD PUSH2 0x28D4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28DE SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP6 PUSH2 0x28F2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28FC SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP3 POP PUSH1 0xD SLOAD DUP2 DUP5 PUSH2 0x290D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2917 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x2920 DUP7 PUSH2 0x3B30 JUMP JUMPDEST DUP5 PUSH2 0x292B SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2935 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x294B DUP4 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2987 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29E3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29F1 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x29FA TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A33 SWAP1 PUSH2 0x4719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2AB7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFB DUP4 DUP4 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B39 SWAP1 PUSH2 0x4679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B53 DUP4 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2BFF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2C0D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2CAD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2CF0 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2D30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D27 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x2D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D96 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DAF PUSH2 0x3B6C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E2F SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F34 SWAP2 SWAP1 PUSH2 0x3E5C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x2FF3 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x2F5B SWAP2 SWAP1 PUSH2 0x4ABB JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F6E DUP5 DUP7 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F9A SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP8 PUSH2 0x2FA5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2FB8 DUP6 DUP6 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FE4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP7 PUSH2 0x2FEF SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x3006 DUP2 PUSH2 0x2CB3 JUMP JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP3 PUSH2 0x3015 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST GT ISZERO PUSH2 0x3056 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304D SWAP1 PUSH2 0x45B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x30B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x30F5 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x31BC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3150 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x315A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x3200 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x320A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHL PUSH2 0x32A3 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHR PUSH2 0x32CB SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x32D5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3319 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3323 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x334F SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3359 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x337E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3388 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3421 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x343B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x344F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3473 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x352E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3552 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3570 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35C2 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x369A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x36E1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x377D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3774 SWAP1 PUSH2 0x46F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x379E PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x37D9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3849 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x388A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3881 SWAP1 PUSH2 0x4659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393B SWAP1 PUSH2 0x4619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A01 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A53 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3AC8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3B24 SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3B TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3B4B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B67 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3B64 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3B7F SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B8C PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3BDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BD6 SWAP1 PUSH2 0x4759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3C3B SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3CDB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D21 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D36 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D4B DUP2 PUSH2 0x5055 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D60 DUP2 PUSH2 0x506C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D75 DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D8A DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D9F DUP2 PUSH2 0x509A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DC5 DUP5 DUP3 DUP6 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DEE DUP5 DUP3 DUP6 ADD PUSH2 0x3D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E18 DUP6 DUP3 DUP7 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E29 DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E53 DUP5 DUP3 DUP6 ADD PUSH2 0x3D3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E7F DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E90 DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3EA1 DUP7 DUP3 DUP8 ADD PUSH2 0x3D90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ECB DUP5 DUP3 DUP6 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP5 DUP3 DUP6 ADD PUSH2 0x3D7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F1E DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F2F DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F5C DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3F6D DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3F7E DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F94 DUP4 DUP4 PUSH2 0x42D6 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAC DUP4 DUP4 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FC1 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3FD0 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP3 PUSH2 0x4912 JUMP JUMPDEST PUSH2 0x3FEB DUP2 DUP6 PUSH2 0x4942 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FF6 DUP4 PUSH2 0x48F2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4027 JUMPI DUP2 MLOAD PUSH2 0x400E DUP9 DUP3 PUSH2 0x3F88 JUMP JUMPDEST SWAP8 POP PUSH2 0x4019 DUP4 PUSH2 0x4928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FFA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x403F DUP3 PUSH2 0x491D JUMP JUMPDEST PUSH2 0x4049 DUP2 DUP6 PUSH2 0x4953 JUMP JUMPDEST SWAP4 POP PUSH2 0x4054 DUP4 PUSH2 0x4902 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4085 JUMPI DUP2 MLOAD PUSH2 0x406C DUP9 DUP3 PUSH2 0x3FA0 JUMP JUMPDEST SWAP8 POP PUSH2 0x4077 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4058 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x409B DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40AA DUP2 PUSH2 0x4BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40B9 DUP2 PUSH2 0x4C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40C8 DUP2 PUSH2 0x4C2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40D7 DUP2 PUSH2 0x4C52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40E6 DUP2 PUSH2 0x4C64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F9 PUSH1 0x1A DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4104 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411C PUSH1 0xB DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4127 DUP3 PUSH2 0x4E01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413F PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x414A DUP3 PUSH2 0x4E2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4162 PUSH1 0x8 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x416D DUP3 PUSH2 0x4E53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4185 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4190 DUP3 PUSH2 0x4E7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A8 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 DUP3 PUSH2 0x4EA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41CB PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D6 DUP3 PUSH2 0x4ECE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EE PUSH1 0x1B DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41F9 DUP3 PUSH2 0x4EF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4211 PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x421C DUP3 PUSH2 0x4F20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4234 PUSH1 0x19 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x423F DUP3 PUSH2 0x4F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4262 DUP3 PUSH2 0x4F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427A PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4285 DUP3 PUSH2 0x4F9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429D PUSH1 0x11 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A8 DUP3 PUSH2 0x4FC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C0 PUSH1 0x17 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42CB DUP3 PUSH2 0x4FED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x42EC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x42FF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4312 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4325 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4338 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4354 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4367 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x437A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x438D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x43A0 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43BB DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43C8 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43D9 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43E6 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43F7 DUP2 PUSH2 0x4C76 JUMP JUMPDEST PUSH2 0x4404 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4415 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x4422 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4433 DUP2 PUSH2 0x4C90 JUMP JUMPDEST PUSH2 0x4440 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4450 DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x445F DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x447A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4495 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44BE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44F5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x4502 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4523 DUP2 DUP5 PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4545 DUP2 DUP5 PUSH2 0x4034 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4562 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x457D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4598 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45D2 DUP2 PUSH2 0x40EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45F2 DUP2 PUSH2 0x410F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4612 DUP2 PUSH2 0x4132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4632 DUP2 PUSH2 0x4155 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4652 DUP2 PUSH2 0x4178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4672 DUP2 PUSH2 0x419B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4692 DUP2 PUSH2 0x41BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46B2 DUP2 PUSH2 0x41E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46D2 DUP2 PUSH2 0x4204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F2 DUP2 PUSH2 0x4227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4712 DUP2 PUSH2 0x424A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4732 DUP2 PUSH2 0x426D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4752 DUP2 PUSH2 0x4290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4772 DUP2 PUSH2 0x42B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x478E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x433E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x47C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x47EE PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47FB PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4808 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4815 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4822 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x482F PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x483C PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4849 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x486C PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4879 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4886 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4893 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48A0 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48AD PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48BA PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48C7 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48D5 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48E3 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x40CE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4980 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x498B DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x49C0 JUMPI PUSH2 0x49BF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D6 DUP3 PUSH2 0x4BA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E1 DUP4 PUSH2 0x4BA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49F1 JUMPI PUSH2 0x49F0 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A07 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A12 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4A22 JUMPI PUSH2 0x4A21 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A38 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A43 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A7C JUMPI PUSH2 0x4A7B PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A92 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9D DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AB0 JUMPI PUSH2 0x4AAF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC6 DUP3 PUSH2 0x4BD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD1 DUP4 PUSH2 0x4BD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AE4 JUMPI PUSH2 0x4AE3 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B31 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B52 DUP3 PUSH2 0x5016 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B65 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF1 DUP3 PUSH2 0x4BF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C03 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C15 DUP3 PUSH2 0x4C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C27 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4B DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5D DUP3 PUSH2 0x4B44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6F DUP3 PUSH2 0x4B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C89 PUSH2 0x4C84 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA3 PUSH2 0x4C9E DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CBD PUSH2 0x4CB8 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCF DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4D02 JUMPI PUSH2 0x4D01 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D18 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4D23 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D33 JUMPI PUSH2 0x4D32 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x5027 JUMPI PUSH2 0x5026 PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x503B JUMPI PUSH2 0x503A PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5047 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP2 EQ PUSH2 0x5052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x505E DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP2 EQ PUSH2 0x5069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5075 DUP2 PUSH2 0x4B6A JUMP JUMPDEST DUP2 EQ PUSH2 0x5080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x508C DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP2 EQ PUSH2 0x5097 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50A3 DUP2 PUSH2 0x4BD6 JUMP JUMPDEST DUP2 EQ PUSH2 0x50AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SWAP11 0x5C PC SUB SDIV 0xC2 DUP14 DIFFICULTY SWAP1 0xCF 0xAD PUSH18 0x7B5C9A9F000750AE43F3CFEE4AF82739BC7C LOG2 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "586:23985:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11337:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8726:392;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7833:504;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15226:2441;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1513:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12181:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1144:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5760:727;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1440:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;863:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2468:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9529:1468;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11855:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;805:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1198:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12458:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13146:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1578:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11593:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4987:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19436:1541;;;:::i;:::-;;2425:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6833:576;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24158:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;18013:1356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1270:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12921:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1369:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;668:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;942:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2519:24;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11337:119::-;11402:4;11425:10;:16;11436:4;11425:16;;;;;;;;;;;;;;;:23;;;;11418:30;;11337:119;;;:::o;8726:392::-;8810:24;8870:11;8859:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8846:36;;8897:6;8893:218;8914:11;8909:1;:16;8893:218;;8947:13;8982:1;8975:6;;:8;;;;:::i;:::-;8963:10;:21;;;;:::i;:::-;8947:37;;9028:11;9002:37;;;;;;;;;;;;;;;;:6;:16;9009:8;9002:16;;;;;;;;;;;:22;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;8999:101;;9076:8;9060:10;9071:1;9060:13;;;;;;;;;;;;;;;;;;;;;:24;;;;;8999:101;8893:218;8927:3;;;;;:::i;:::-;;;;8893:218;;;;8726:392;;;;:::o;7833:504::-;7940:9;7965:13;7981:28;7999:9;7981:17;:28::i;:::-;7965:44;;8122:9;8134:78;8141:8;8151:6;:16;8158:8;8151:16;;;;;;;;;;;:21;;:43;8173:20;8183:9;8173;:20::i;:::-;8151:43;;;;;;;;;;;:60;;;8134:6;:78::i;:::-;8122:90;;8223:9;8235:26;8242:8;8252;8235:6;:26::i;:::-;8223:38;;8283:4;8275;:12;8272:57;;8296:1;8289:8;;8272:57;;;8325:4;8320;:9;;;;:::i;:::-;8313:16;;8272:57;7833:504;;;;;;;;:::o;15226:2441::-;15351:13;15368:27;15385:9;15368:16;:27::i;:::-;15351:44;;15414:31;15426:8;15436;15414:11;:31::i;:::-;15474:11;15488:35;15503:8;15513:9;15488:14;:35::i;:::-;15474:49;;15554:34;15572:15;15554:17;:34::i;:::-;15542:8;:46;;15534:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;15637:6;:16;15644:8;15637:16;;;;;;;;;;;:21;;:29;15659:6;15637:29;;;;;;;;;;;:38;;;;;;;;;;;;15623:52;;:10;:52;;;;15615:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;15706:8;15717:26;15724:8;15734;15717:6;:26::i;:::-;15706:37;;15951:3;15902:6;:16;15909:8;15902:16;;;;;;;;;;;:21;;:29;15924:6;15902:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;15845:15;;;;;;;;;;;:25;;;15871:10;15891:4;15845:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:110;;15837:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;16050:15;;;;;;;;;;;:28;;;16079:10;16099:4;16156:3;16107:6;:16;16114:8;16107:16;;;;;;;;;;;:21;;:29;16129:6;16107:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;16050:111;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16233:3;16203:6;:16;16210:8;16203:16;;;;;;;;;;;:27;;;:33;;;;:::i;:::-;16172:6;:16;16179:8;16172:16;;;;;;;;;;;:27;;:65;;;;16348:11;16309:50;;;;;;;;;;;;;;;;:6;:16;16316:8;16309:16;;;;;;;;;;;:21;;:29;16331:6;16309:29;;;;;;;;;;;:35;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;16305:541;;;16376:13;16392:64;16399:8;16409:6;:16;16416:8;16409:16;;;;;;;;;;;:21;;:29;16431:6;16409:29;;;;;;;;;;;:46;;;16392:6;:64::i;:::-;16376:80;;16501:15;;;;;;;;;;;:24;;;16526:6;:16;16533:8;16526:16;;;;;;;;;;;:21;;:29;16548:6;16526:29;;;;;;;;;;;:38;;;;;;;;;;;;16578:6;:16;16585:8;16578:16;;;;;;;;;;;:21;;:29;16600:6;16578:29;;;;;;;;;;;:46;;;16567:8;:57;;;;:::i;:::-;16501:125;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16735:8;16705:6;:16;16712:8;16705:16;;;;;;;;;;;:27;;;:38;;;;:::i;:::-;16675:6;:16;16682:8;16675:16;;;;;;;;;;;:27;;:68;;;;16305:541;;;;16823:11;16785:6;:16;16792:8;16785:16;;;;;;;;;;;:21;;:29;16807:6;16785:29;;;;;;;;;;;:35;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16305:541;16928:10;16887:6;:16;16894:8;16887:16;;;;;;;;;;;:21;;:29;16909:6;16887:29;;;;;;;;;;;:38;;;:51;;;;;;;;;;;;;;;;;;16998:8;16949:6;:16;16956:8;16949:16;;;;;;;;;;;:21;;:29;16971:6;16949:29;;;;;;;;;;;:46;;:57;;;;17017:10;:22;17028:10;17017:22;;;;;;;;;;;;;;;17045:8;17017:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17067:19;:17;:19::i;:::-;17104:489;17116:8;17153:6;:16;17160:8;17153:16;;;;;;;;;;;:37;;;17218:6;:16;17225:8;17218:16;;;;;;;;;;;:35;;;17281:6;:16;17288:8;17281:16;;;;;;;;;;;:44;;;17353:6;:16;17360:8;17353:16;;;;;;;;;;;:42;;;17423:6;:16;17430:8;17423:16;;;;;;;;;;;:44;;;17495:6;:16;17502:8;17495:16;;;;;;;;;;;:42;;;17565:6;:16;17572:8;17565:16;;;;;;;;;;;:27;;;17104:489;;;;;;;;;;;;;:::i;:::-;;;;;;;;17609:50;17619:8;17629:6;:16;17636:8;17629:16;;;;;;;;;;;:21;;:29;17651:6;17629:29;;;;;;;;;;;17609:50;;;;;;;:::i;:::-;;;;;;;;15226:2441;;;;;;:::o;1513:18::-;;;;:::o;12181:146::-;12248:4;12288:6;:16;12295:8;12288:16;;;;;;;;;;;:24;;12313:5;12288:31;;;;;;;;;;;;;;;;;;;;;;;;12281:38;;12181:146;;;;:::o;1144:21::-;;;;:::o;5760:727::-;5815:13;5848:24;5863:8;5848:14;:24::i;:::-;5954:13;6008:6;:16;6015:8;6008:16;;;;;;;;;;;:37;;;5970:6;:16;5977:8;5970:16;;;;;;;;;;;:35;;;:75;;;;:::i;:::-;5954:91;;6060:14;;;;;;;;;;;6056:346;;;6092:135;;;;;;;;6216:8;6167:6;:16;6174:8;6167:16;;;;;;;;;;;:44;;;6122:6;:16;6129:8;6122:16;;;;;;;;;;;:42;;;:89;;;;:::i;:::-;6121:104;;;;:::i;:::-;6092:135;;;;;:138;;;6087:144;;6076:155;;6056:346;;;6263:135;;;;;;;;6387:8;6338:6;:16;6345:8;6338:16;;;;;;;;;;;:44;;;6293:6;:16;6300:8;6293:16;;;;;;;;;;;:42;;;:89;;;;:::i;:::-;6292:104;;;;:::i;:::-;6263:135;;;;;:138;;;6258:144;;6247:155;;6056:346;6474:4;6466:3;6454:8;:15;;6453:26;;;;:::i;:::-;6444:6;;6437:3;6425:8;:15;;6424:26;;;;:::i;:::-;:55;;;;:::i;:::-;6413:66;;5760:727;;;;:::o;1440:26::-;;;;;;;;;;;;;:::o;1075:18::-;;;;:::o;863:29::-;;;;:::o;4612:212::-;4676:4;4709:13;;4696:9;:26;4692:52;;4731:13;;4724:20;;;;4692:52;4808:6;;4789:13;;4776:9;:27;;;;:::i;:::-;4775:40;;;;:::i;:::-;4762:9;:54;;;;:::i;:::-;4755:61;;4612:212;;;;:::o;2468:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9529:1468::-;9587:21;9620:17;9640:34;9658:15;9640:17;:34::i;:::-;9620:54;;9706:4;9696:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9685:26;;9722:14;;:::i;:::-;9747:12;9774:13;9804:6;9813:1;9804:10;;9800:627;9821:3;9816:1;:8;9800:627;;9855:2;9850:1;:7;9846:110;;9896:2;9894:1;:4;;;;:::i;:::-;9886:6;;:13;;;;:::i;:::-;9871:12;:28;;;;:::i;:::-;9859:41;;9846:110;;;9954:1;9947:6;;:8;;;;:::i;:::-;9932:12;:23;;;;:::i;:::-;9920:36;;9846:110;10003:13;9977:39;;;;;;;;;;;;;;;;:6;:16;9984:8;9977:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;9973:443;;;10042:6;10037:364;10054:6;:16;10061:8;10054:16;;;;;;;;;;;:24;;:31;;;;10052:1;:33;10037:364;;;10121:6;:16;10128:8;10121:16;;;;;;;;;;;:21;;:50;10143:6;:16;10150:8;10143:16;;;;;;;;;;;:24;;10168:1;10143:27;;;;;;;;;;;;;;;;;;;;;;;;10121:50;;;;;;;;;;;10115:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10213:4;10197:20;;:3;:12;;;:20;;;10194:187;;;10265:3;10246:8;10255:7;10246:17;;;;;;;;;;;;;;;;;;;;;:22;;;;10295:10;;;;;:::i;:::-;;;;10346:4;10335:7;:15;10332:25;;10352:5;;10332:25;10194:187;10087:3;;;;;:::i;:::-;;;;10037:364;;;;9973:443;9826:3;;;;;:::i;:::-;;;;9800:627;;;;10443:6;10452:1;10443:10;;10439:551;10460:2;10455:1;:7;10439:551;;10518:1;10511:6;;:8;;;;:::i;:::-;10496:12;:23;;;;:::i;:::-;10484:36;;10565:13;10539:39;;;;;;;;;;;;;;;;:6;:16;10546:8;10539:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;10535:444;;;10604:6;10599:365;10616:6;:16;10623:8;10616:16;;;;;;;;;;;:24;;:31;;;;10614:1;:33;10599:365;;;10683:6;:16;10690:8;10683:16;;;;;;;;;;;:21;;:50;10705:6;:16;10712:8;10705:16;;;;;;;;;;;:24;;10730:1;10705:27;;;;;;;;;;;;;;;;;;;;;;;;10683:50;;;;;;;;;;;10677:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10775:4;10759:20;;:3;:12;;;:20;;;10756:188;;;10822:4;10811:7;:15;10808:25;;10828:5;;10808:25;10879:3;10860:8;10869:7;10860:17;;;;;;;;;;;;;;;;;;;;;:22;;;;10909:10;;;;;:::i;:::-;;;;10756:188;10649:3;;;;;:::i;:::-;;;;10599:365;;;;10535:444;10464:3;;;;;:::i;:::-;;;;10439:551;;;;9529:1468;;;;;;;:::o;11855:150::-;11922:10;;:::i;:::-;11968:6;:16;11975:8;11968:16;;;;;;;;;;;:21;;:29;11990:6;11968:29;;;;;;;;;;;11961:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11855:150;;;;:::o;805:25::-;;;;:::o;1198:21::-;;;;:::o;12458:139::-;12518:4;12558:6;:16;12565:8;12558:16;;;;;;;;;;;:24;;:31;;;;12551:38;;12458:139;;;:::o;13146:103::-;13201:4;13224:10;:17;;;;13217:24;;13146:103;:::o;1578:34::-;;;;;;;;;;;;;:::o;11593:117::-;11652:13;11686:10;:16;11697:4;11686:16;;;;;;;;;;;;;;;11679:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11593:117;;;:::o;4987:150::-;5039:4;5068:1;5059:5;:10;5055:29;;5078:6;;5071:13;;;;5055:29;5122:6;;5111;;5102:5;:16;;;;:::i;:::-;:27;;;;:::i;:::-;5095:34;;4987:150;;;;:::o;19436:1541::-;19483:13;19499:34;19517:15;19499:17;:34::i;:::-;19483:50;;19644:10;;19632:6;;19620:8;:19;;;;:::i;:::-;19619:36;;;;:::i;:::-;19600:15;:56;19596:867;;;19807:68;19862:11;;;;;;;;;;;19807:46;:68::i;:::-;19673:202;;;;;19674:6;:16;19681:8;19674:16;;;;;;;;;;;:44;;;19720:6;:16;19727:8;19720:16;;;;;;;;;;;:44;;;19766:6;:16;19773:8;19766:16;;;;;;;;;;;:37;;;19673:202;;;;;;;;;;;;;;;;;;20019:6;:16;20026:8;20019:16;;;;;;;;;;;:44;;;20065:6;:16;20072:8;20065:16;;;;;;;;;;;:44;;;20111:6;:16;20118:8;20111:16;;;;;;;;;;;:37;;;19891:6;:16;19898:8;19891:16;;;;;;;;;;;:42;;;19935:6;:16;19942:8;19935:16;;;;;;;;;;;:42;;;19979:6;:16;19986:8;19979:16;;;;;;;;;;;:35;;;19890:259;;;;;;;;;;;;;;;;;;19596:867;;;20226:10;;20214:6;;20202:8;:19;;;;:::i;:::-;20201:36;;;;:::i;:::-;20181:15;:57;20177:286;;20383:68;20438:11;;;;;;;;;;;20383:46;:68::i;:::-;20255:196;;;;;20256:6;:16;20263:8;20256:16;;;;;;;;;;;:42;;;20300:6;:16;20307:8;20300:16;;;;;;;;;;;:42;;;20344:6;:16;20351:8;20344:16;;;;;;;;;;;:35;;;20255:196;;;;;;;;;;;;;;;;;;20177:286;19596:867;20480:489;20492:8;20529:6;:16;20536:8;20529:16;;;;;;;;;;;:37;;;20594:6;:16;20601:8;20594:16;;;;;;;;;;;:35;;;20657:6;:16;20664:8;20657:16;;;;;;;;;;;:44;;;20729:6;:16;20736:8;20729:16;;;;;;;;;;;:42;;;20799:6;:16;20806:8;20799:16;;;;;;;;;;;:44;;;20871:6;:16;20878:8;20871:16;;;;;;;;;;;:42;;;20941:6;:16;20948:8;20941:16;;;;;;;;;;;:27;;;20480:489;;;;;;;;;;;;;:::i;:::-;;;;;;;;19436:1541;:::o;2425:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6833:576::-;6931:14;6962:13;6978:28;6996:9;6978:17;:28::i;:::-;6962:44;;7159:34;7177:15;7159:17;:34::i;:::-;7147:8;:46;;7139:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;7244:11;7258:20;7268:9;7258;:20::i;:::-;7244:34;;7289:8;7300:26;7307:8;7317;7300:6;:26::i;:::-;7289:37;;7398:3;7349:6;:16;7356:8;7349:16;;;;;;;;;;;:21;;:29;7371:6;7349:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;7337:64;;6833:576;;;;;;;;:::o;24158:113::-;24213:20;24224:8;24213:10;:20::i;:::-;24244:19;24254:8;24244:9;:19::i;:::-;24158:113;:::o;18013:1356::-;18104:13;18120:27;18137:9;18120:16;:27::i;:::-;18104:43;;18159:30;18171:8;18180;18159:11;:30::i;:::-;18200:11;18214:35;18229:8;18239:9;18214:14;:35::i;:::-;18200:49;;18311:10;18269:52;;:6;:16;18276:8;18269:16;;;;;;;;;;;:21;;:29;18291:6;18269:29;;;;;;;;;;;:38;;;;;;;;;;;;:52;;;18261:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;18370:34;18388:15;18370:17;:34::i;:::-;18358:8;:46;;18350:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;18439:11;18453:26;18460:8;18470;18453:6;:26::i;:::-;18439:40;;18490:11;18504:64;18511:8;18521:6;:16;18528:8;18521:16;;;;;;;;;;;:21;;:29;18543:6;18521:29;;;;;;;;;;;:46;;;18504:6;:64::i;:::-;18490:78;;18594:6;18585;:15;18581:615;;;18691:6;18682;:15;;;;:::i;:::-;18625;;;;;;;;;;;:25;;;18651:10;18671:4;18625:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;18617:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;18811:15;;;;;;;;;;;:28;;;18840:10;18860:4;18877:6;18868;:15;;;;:::i;:::-;18811:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18969:6;18961;:14;;;;:::i;:::-;18930:6;:16;18937:8;18930:16;;;;;;;;;;;:27;;;:46;;;;:::i;:::-;18900:6;:16;18907:8;18900:16;;;;;;;;;;;:27;;:76;;;;18581:615;;;19016:6;19007;:15;19003:193;;;19039:15;;;;;;;;;;;:24;;;19064:10;19085:6;19076;:15;;;;:::i;:::-;19039:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19177:6;19168;:15;;;;:::i;:::-;19137:6;:16;19144:8;19137:16;;;;;;;;;;;:27;;;:47;;;;:::i;:::-;19107:6;:16;19114:8;19107:16;;;;;;;;;;;:27;;:77;;;;19003:193;18581:615;19255:8;19206:6;:16;19213:8;19206:16;;;;;;;;;;;:21;;:29;19228:6;19206:29;;;;;;;;;;;:46;;:57;;;;19276:19;:17;:19::i;:::-;19311:50;19321:8;19331:6;:16;19338:8;19331:16;;;;;;;;;;;:21;;:29;19353:6;19331:29;;;;;;;;;;;19311:50;;;;;;;:::i;:::-;;;;;;;;18013:1356;;;;;;;:::o;1270:28::-;;;;;;;;;;;;;:::o;1006:33::-;;;;;;;;;;;;;:::o;12921:148::-;12984:4;13033:6;:16;13040:8;13033:16;;;;;;;;;;;:27;;;13026:34;;12921:148;;;:::o;1369:29::-;;;;;;;;;;;;;:::o;668:18::-;;;;:::o;942:22::-;;;;:::o;14529:401::-;14606:8;14640:11;14705:15;14693:6;;14655:34;14673:15;14655:17;:34::i;:::-;:45;;;;:::i;:::-;14654:67;;;;:::i;:::-;14640:81;;14733:12;14766:6;;14757;14748;;:15;;;;:::i;:::-;:24;;;;:::i;:::-;14733:39;;14820:6;14808:9;;14789:16;:28;;;;:::i;:::-;:37;;;;:::i;:::-;14783:43;;14893:6;;14883:7;14877:3;:13;;;;:::i;:::-;:22;;;;:::i;:::-;14849:23;14863:8;14849:13;:23::i;:::-;14844:3;:29;;;;:::i;:::-;:56;;;;:::i;:::-;14837:64;;14912:10;;14529:401;;;;:::o;13423:537::-;13483:4;13544:13;13560:28;13578:9;13560:17;:28::i;:::-;13544:44;;13662:11;13636:37;;;;;;;;;;;;;;;;:6;:16;13643:8;13636:16;;;;;;;;;;;:22;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;13632:58;;13682:8;13675:15;;;;;13632:58;13721:34;13739:15;13721:17;:34::i;:::-;13709:8;:46;;13701:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;13833:8;13805:6;:16;13812:8;13805:16;;;;;;;;;;;:25;;:36;;;;13877:13;13852:6;:16;13859:8;13852:16;;;;;;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13901:10;13917:8;13901:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13944:8;13937:15;;;13423:537;;;;:::o;4251:210::-;4325:8;4336:26;4343:8;4353;4336:6;:26::i;:::-;4325:37;;4426:6;;4419:3;:13;;4411:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;4251:210;;;:::o;14125:396::-;14197:4;14213:11;14227:20;14237:9;14227;:20::i;:::-;14213:34;;14301:9;14262:48;;;;;;;;;;;;;;;;:6;:16;14269:8;14262:16;;;;;;;;;;;:21;;:29;14284:6;14262:29;;;;;;;;;;;:35;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;14258:67;;14319:6;14312:13;;;;;14258:67;14377:8;14336:6;:16;14343:8;14336:16;;;;;;;;;;;:21;;:29;14358:6;14336:29;;;;;;;;;;;:38;;:49;;;;14435:6;14396;:16;14403:8;14396:16;;;;;;;;;;;:21;;:29;14418:6;14396:29;;;;;;;;;;;:36;;:45;;;;14452:6;:16;14459:8;14452:16;;;;;;;;;;;:24;;14482:6;14452:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14507:6;14500:13;;;14125:396;;;;;:::o;3603:586::-;3798:1;3750:6;:16;3757:8;3750:16;;;;;;;;;;;:44;;;:49;;:100;;;;3849:1;3803:6;:16;3810:8;3803:16;;;;;;;;;;;:42;;;:47;;3750:100;3746:218;;;3923:29;;;;;;;;;;:::i;:::-;;;;;;;;3746:218;4026:6;:16;4033:8;4026:16;;;;;;;;;;;:42;;;3978:6;:16;3985:8;3978:16;;;;;;;;;;;:44;;;:90;3974:208;;;4141:29;;;;;;;;;;:::i;:::-;;;;;;;;3974:208;3603:586;:::o;646:1040:5:-;730:21;753;776;826:23;:21;:23::i;:::-;809:40;;893:4;878:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;859:62;;965:4;950:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;931:62;;1105:16;1123;1141:25;1185:4;1170:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1104:100;;;;;;1240:14;1218:36;;:18;:36;;;1214:466;;1317:18;1355;1338:14;:35;;;;:::i;:::-;1317:56;;1532:11;1481:62;;1486:39;1506:8;1516;1486:19;:39::i;:::-;:42;;;1481:48;;:62;;;;:::i;:::-;1461:82;;;;;:::i;:::-;;;1658:11;1607:62;;1612:39;1632:8;1642;1612:19;:39::i;:::-;:42;;;1607:48;;:62;;;;:::i;:::-;1587:82;;;;;:::i;:::-;;;1214:466;;646:1040;;;;;;;;:::o;21057:1949:6:-;21110:24;21125:8;21110:14;:24::i;:::-;21177:15;21166:6;;21155:8;:17;;;;:::i;:::-;21154:38;;21145:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;21259:13;21234:6;:16;21241:8;21234:16;;;;;;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21363:13;21417:6;:16;21424:8;21417:16;;;;;;;;;;;:37;;;21379:6;:16;21386:8;21379:16;;;;;;;;;;;:35;;;:75;;;;:::i;:::-;21363:91;;21469:14;;;;;;;;;;;21465:388;;;21522:135;;;;;;;;21646:8;21597:6;:16;21604:8;21597:16;;;;;;;;;;;:44;;;21552:6;:16;21559:8;21552:16;;;;;;;;;;;:42;;;:89;;;;:::i;:::-;21551:104;;;;:::i;:::-;21522:135;;;;;:138;;;21517:144;;21485:6;:16;21492:8;21485:16;;;;;;;;;;;:29;;:176;;;;21465:388;;;21714:135;;;;;;;;21838:8;21789:6;:16;21796:8;21789:16;;;;;;;;;;;:44;;;21744:6;:16;21751:8;21744:16;;;;;;;;;;;:42;;;:89;;;;:::i;:::-;21743:104;;;;:::i;:::-;21714:135;;;;;:138;;;21709:144;;21677:6;:16;21684:8;21677:16;;;;;;;;;;;:29;;:176;;;;21465:388;21988:4;21980:3;21947:6;:16;21954:8;21947:16;;;;;;;;;;;:29;;;:36;;21946:47;;;;:::i;:::-;21937:6;;21930:3;21897:6;:16;21904:8;21897:16;;;;;;;;;;;:29;;;:36;;21896:47;;;;:::i;:::-;:97;;;;:::i;:::-;21864:6;:16;21871:8;21864:16;;;;;;;;;;;:29;;:129;;;;22055:20;22122:6;22109:9;;22078:6;:16;22085:8;22078:16;;;;;;;;;;;:27;;;:41;;;;:::i;:::-;:50;;;;:::i;:::-;22055:73;;22139:22;22210:6;22195:11;;22164:6;:16;22171:8;22164:16;;;;;;;;;;;:27;;;:43;;;;:::i;:::-;:52;;;;:::i;:::-;22139:77;;22305:17;22287:15;22257:6;:16;22264:8;22257:16;;;;;;;;;;;:27;;;:45;;;;:::i;:::-;:65;;;;:::i;:::-;22227:6;:16;22234:8;22227:16;;;;;;;;;;;:27;;:95;;;;22368:15;;;;;;;;;;;:24;;;22393:11;;;;;;;;;;;22406:15;22368:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;22433:15;;;;;;;;;;;:24;;;22458:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22475:17;22433:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;22509:489;22521:8;22558:6;:16;22565:8;22558:16;;;;;;;;;;;:37;;;22623:6;:16;22630:8;22623:16;;;;;;;;;;;:35;;;22686:6;:16;22693:8;22686:16;;;;;;;;;;;:44;;;22758:6;:16;22765:8;22758:16;;;;;;;;;;;:42;;;22828:6;:16;22835:8;22828:16;;;;;;;;;;;:44;;;22900:6;:16;22907:8;22900:16;;;;;;;;;;;:42;;;22970:6;:16;22977:8;22970:16;;;;;;;;;;;:27;;;22509:489;;;;;;;;;;;;;:::i;:::-;;;;;;;;21057:1949;;;;:::o;23169:868::-;23293:13;23267:39;;;;;;;;;;;;;;;;:6;:16;23274:8;23267:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;23259:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;23383:14;23401:40;23411:6;:16;23418:8;23411:16;;;;;;;;;;;:29;;;23401:9;:40::i;:::-;23383:59;;23550:12;23508:54;;;;;;;;;;;;;;;;:6;:16;23515:8;23508:16;;;;;;;;;;;:21;;:32;23530:9;23508:32;;;;;;;;;;;:38;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;23500:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;23693:42;23648:87;;:6;:16;23655:8;23648:16;;;;;;;;;;;:21;;:32;23670:9;23648:32;;;;;;;;;;;:41;;;;;;;;;;;;:87;;;;23640:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;23759:15;;;;;;;;;;;:24;;;23784:6;:16;23791:8;23784:16;;;;;;;;;;;:21;;:32;23806:9;23784:32;;;;;;;;;;;:41;;;;;;;;;;;;23827:6;:16;23834:8;23827:16;;;;;;;;;;;:27;;;23759:96;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23946:12;23905:6;:16;23912:8;23905:16;;;;;;;;;;;:21;;:32;23927:9;23905:32;;;;;;;;;;;:38;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23976;23986:8;23996:6;:16;24003:8;23996:16;;;;;;;;;;;:21;;:32;24018:9;23996:32;;;;;;;;;;;23976:53;;;;;;;:::i;:::-;;;;;;;;23169:868;;:::o;5363:227::-;5423:4;5460:34;5478:15;5460:17;:34::i;:::-;5448:8;:46;5444:60;;;5503:1;5496:8;;;;5444:60;5574:6;;5554:15;5542:8;:28;;;;:::i;:::-;5541:39;;;;:::i;:::-;5532:50;;5363:227;;;;:::o;422:121:5:-;478:6;528:7;510:15;:25;;;;:::i;:::-;496:40;;422:121;:::o;1517:243:1:-;1598:16;;:::i;:::-;1648:1;1634:11;:15;;;1626:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1694:59;;;;;;;;1741:11;1704:48;;407:3;1705:32;;1713:9;1705:18;;:32;;;;1704:48;;;;:::i;:::-;1694:59;;;;;1687:66;;1517:243;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:137::-;355:5;386:6;380:13;371:22;;402:30;426:5;402:30;:::i;:::-;361:77;;;;:::o;444:143::-;501:5;532:6;526:13;517:22;;548:33;575:5;548:33;:::i;:::-;507:80;;;;:::o;593:139::-;639:5;677:6;664:20;655:29;;693:33;720:5;693:33;:::i;:::-;645:87;;;;:::o;738:143::-;795:5;826:6;820:13;811:22;;842:33;869:5;842:33;:::i;:::-;801:80;;;;:::o;887:141::-;943:5;974:6;968:13;959:22;;990:32;1016:5;990:32;:::i;:::-;949:79;;;;:::o;1034:262::-;1093:6;1142:2;1130:9;1121:7;1117:23;1113:32;1110:2;;;1158:1;1155;1148:12;1110:2;1201:1;1226:53;1271:7;1262:6;1251:9;1247:22;1226:53;:::i;:::-;1216:63;;1172:117;1100:196;;;;:::o;1302:284::-;1372:6;1421:2;1409:9;1400:7;1396:23;1392:32;1389:2;;;1437:1;1434;1427:12;1389:2;1480:1;1505:64;1561:7;1552:6;1541:9;1537:22;1505:64;:::i;:::-;1495:74;;1451:128;1379:207;;;;:::o;1592:407::-;1660:6;1668;1717:2;1705:9;1696:7;1692:23;1688:32;1685:2;;;1733:1;1730;1723:12;1685:2;1776:1;1801:53;1846:7;1837:6;1826:9;1822:22;1801:53;:::i;:::-;1791:63;;1747:117;1903:2;1929:53;1974:7;1965:6;1954:9;1950:22;1929:53;:::i;:::-;1919:63;;1874:118;1675:324;;;;;:::o;2005:278::-;2072:6;2121:2;2109:9;2100:7;2096:23;2092:32;2089:2;;;2137:1;2134;2127:12;2089:2;2180:1;2205:61;2258:7;2249:6;2238:9;2234:22;2205:61;:::i;:::-;2195:71;;2151:125;2079:204;;;;:::o;2289:594::-;2376:6;2384;2392;2441:2;2429:9;2420:7;2416:23;2412:32;2409:2;;;2457:1;2454;2447:12;2409:2;2500:1;2525:64;2581:7;2572:6;2561:9;2557:22;2525:64;:::i;:::-;2515:74;;2471:128;2638:2;2664:64;2720:7;2711:6;2700:9;2696:22;2664:64;:::i;:::-;2654:74;;2609:129;2777:2;2803:63;2858:7;2849:6;2838:9;2834:22;2803:63;:::i;:::-;2793:73;;2748:128;2399:484;;;;;:::o;2889:262::-;2948:6;2997:2;2985:9;2976:7;2972:23;2968:32;2965:2;;;3013:1;3010;3003:12;2965:2;3056:1;3081:53;3126:7;3117:6;3106:9;3102:22;3081:53;:::i;:::-;3071:63;;3027:117;2955:196;;;;:::o;3157:284::-;3227:6;3276:2;3264:9;3255:7;3251:23;3247:32;3244:2;;;3292:1;3289;3282:12;3244:2;3335:1;3360:64;3416:7;3407:6;3396:9;3392:22;3360:64;:::i;:::-;3350:74;;3306:128;3234:207;;;;:::o;3447:407::-;3515:6;3523;3572:2;3560:9;3551:7;3547:23;3543:32;3540:2;;;3588:1;3585;3578:12;3540:2;3631:1;3656:53;3701:7;3692:6;3681:9;3677:22;3656:53;:::i;:::-;3646:63;;3602:117;3758:2;3784:53;3829:7;3820:6;3809:9;3805:22;3784:53;:::i;:::-;3774:63;;3729:118;3530:324;;;;;:::o;3860:552::-;3937:6;3945;3953;4002:2;3990:9;3981:7;3977:23;3973:32;3970:2;;;4018:1;4015;4008:12;3970:2;4061:1;4086:53;4131:7;4122:6;4111:9;4107:22;4086:53;:::i;:::-;4076:63;;4032:117;4188:2;4214:53;4259:7;4250:6;4239:9;4235:22;4214:53;:::i;:::-;4204:63;;4159:118;4316:2;4342:53;4387:7;4378:6;4367:9;4363:22;4342:53;:::i;:::-;4332:63;;4287:118;3960:452;;;;;:::o;4418:259::-;4527:10;4548:86;4630:3;4622:6;4548:86;:::i;:::-;4666:4;4661:3;4657:14;4643:28;;4538:139;;;;:::o;4683:179::-;4752:10;4773:46;4815:3;4807:6;4773:46;:::i;:::-;4851:4;4846:3;4842:14;4828:28;;4763:99;;;;:::o;4868:108::-;4945:24;4963:5;4945:24;:::i;:::-;4940:3;4933:37;4923:53;;:::o;4982:118::-;5069:24;5087:5;5069:24;:::i;:::-;5064:3;5057:37;5047:53;;:::o;5156:892::-;5315:3;5344:74;5412:5;5344:74;:::i;:::-;5434:106;5533:6;5528:3;5434:106;:::i;:::-;5427:113;;5564:76;5634:5;5564:76;:::i;:::-;5663:7;5694:1;5679:344;5704:6;5701:1;5698:13;5679:344;;;5780:6;5774:13;5807:103;5906:3;5891:13;5807:103;:::i;:::-;5800:110;;5933:80;6006:6;5933:80;:::i;:::-;5923:90;;5739:284;5726:1;5723;5719:9;5714:14;;5679:344;;;5683:14;6039:3;6032:10;;5320:728;;;;;;;:::o;6084:732::-;6203:3;6232:54;6280:5;6232:54;:::i;:::-;6302:86;6381:6;6376:3;6302:86;:::i;:::-;6295:93;;6412:56;6462:5;6412:56;:::i;:::-;6491:7;6522:1;6507:284;6532:6;6529:1;6526:13;6507:284;;;6608:6;6602:13;6635:63;6694:3;6679:13;6635:63;:::i;:::-;6628:70;;6721:60;6774:6;6721:60;:::i;:::-;6711:70;;6567:224;6554:1;6551;6547:9;6542:14;;6507:284;;;6511:14;6807:3;6800:10;;6208:608;;;;;;;:::o;6822:109::-;6903:21;6918:5;6903:21;:::i;:::-;6898:3;6891:34;6881:50;;:::o;6937:157::-;7037:50;7081:5;7037:50;:::i;:::-;7032:3;7025:63;7015:79;;:::o;7100:175::-;7209:59;7262:5;7209:59;:::i;:::-;7204:3;7197:72;7187:88;;:::o;7281:175::-;7390:59;7443:5;7390:59;:::i;:::-;7385:3;7378:72;7368:88;;:::o;7462:147::-;7557:45;7596:5;7557:45;:::i;:::-;7552:3;7545:58;7535:74;;:::o;7615:133::-;7698:43;7735:5;7698:43;:::i;:::-;7693:3;7686:56;7676:72;;:::o;7754:366::-;7896:3;7917:67;7981:2;7976:3;7917:67;:::i;:::-;7910:74;;7993:93;8082:3;7993:93;:::i;:::-;8111:2;8106:3;8102:12;8095:19;;7900:220;;;:::o;8126:366::-;8268:3;8289:67;8353:2;8348:3;8289:67;:::i;:::-;8282:74;;8365:93;8454:3;8365:93;:::i;:::-;8483:2;8478:3;8474:12;8467:19;;8272:220;;;:::o;8498:366::-;8640:3;8661:67;8725:2;8720:3;8661:67;:::i;:::-;8654:74;;8737:93;8826:3;8737:93;:::i;:::-;8855:2;8850:3;8846:12;8839:19;;8644:220;;;:::o;8870:365::-;9012:3;9033:66;9097:1;9092:3;9033:66;:::i;:::-;9026:73;;9108:93;9197:3;9108:93;:::i;:::-;9226:2;9221:3;9217:12;9210:19;;9016:219;;;:::o;9241:366::-;9383:3;9404:67;9468:2;9463:3;9404:67;:::i;:::-;9397:74;;9480:93;9569:3;9480:93;:::i;:::-;9598:2;9593:3;9589:12;9582:19;;9387:220;;;:::o;9613:366::-;9755:3;9776:67;9840:2;9835:3;9776:67;:::i;:::-;9769:74;;9852:93;9941:3;9852:93;:::i;:::-;9970:2;9965:3;9961:12;9954:19;;9759:220;;;:::o;9985:366::-;10127:3;10148:67;10212:2;10207:3;10148:67;:::i;:::-;10141:74;;10224:93;10313:3;10224:93;:::i;:::-;10342:2;10337:3;10333:12;10326:19;;10131:220;;;:::o;10357:366::-;10499:3;10520:67;10584:2;10579:3;10520:67;:::i;:::-;10513:74;;10596:93;10685:3;10596:93;:::i;:::-;10714:2;10709:3;10705:12;10698:19;;10503:220;;;:::o;10729:366::-;10871:3;10892:67;10956:2;10951:3;10892:67;:::i;:::-;10885:74;;10968:93;11057:3;10968:93;:::i;:::-;11086:2;11081:3;11077:12;11070:19;;10875:220;;;:::o;11101:366::-;11243:3;11264:67;11328:2;11323:3;11264:67;:::i;:::-;11257:74;;11340:93;11429:3;11340:93;:::i;:::-;11458:2;11453:3;11449:12;11442:19;;11247:220;;;:::o;11473:366::-;11615:3;11636:67;11700:2;11695:3;11636:67;:::i;:::-;11629:74;;11712:93;11801:3;11712:93;:::i;:::-;11830:2;11825:3;11821:12;11814:19;;11619:220;;;:::o;11845:366::-;11987:3;12008:67;12072:2;12067:3;12008:67;:::i;:::-;12001:74;;12084:93;12173:3;12084:93;:::i;:::-;12202:2;12197:3;12193:12;12186:19;;11991:220;;;:::o;12217:366::-;12359:3;12380:67;12444:2;12439:3;12380:67;:::i;:::-;12373:74;;12456:93;12545:3;12456:93;:::i;:::-;12574:2;12569:3;12565:12;12558:19;;12363:220;;;:::o;12589:366::-;12731:3;12752:67;12816:2;12811:3;12752:67;:::i;:::-;12745:74;;12828:93;12917:3;12828:93;:::i;:::-;12946:2;12941:3;12937:12;12930:19;;12735:220;;;:::o;13007:1038::-;13134:4;13129:3;13125:14;13225:4;13218:5;13214:16;13208:23;13244:63;13301:4;13296:3;13292:14;13278:12;13244:63;:::i;:::-;13149:168;13401:4;13394:5;13390:16;13384:23;13420:63;13477:4;13472:3;13468:14;13454:12;13420:63;:::i;:::-;13327:166;13579:4;13572:5;13568:16;13562:23;13598:63;13655:4;13650:3;13646:14;13632:12;13598:63;:::i;:::-;13503:168;13765:4;13758:5;13754:16;13748:23;13784:63;13841:4;13836:3;13832:14;13818:12;13784:63;:::i;:::-;13681:176;13940:4;13933:5;13929:16;13923:23;13959:69;14022:4;14017:3;14013:14;13999:12;13959:69;:::i;:::-;13867:171;13103:942;;;:::o;14097:1048::-;14234:4;14229:3;14225:14;14325:4;14318:5;14314:16;14308:23;14344:63;14401:4;14396:3;14392:14;14378:12;14344:63;:::i;:::-;14249:168;14501:4;14494:5;14490:16;14484:23;14520:63;14577:4;14572:3;14568:14;14554:12;14520:63;:::i;:::-;14427:166;14679:4;14672:5;14668:16;14662:23;14698:63;14755:4;14750:3;14746:14;14732:12;14698:63;:::i;:::-;14603:168;14865:4;14858:5;14854:16;14848:23;14884:63;14941:4;14936:3;14932:14;14918:12;14884:63;:::i;:::-;14781:176;15040:4;15033:5;15029:16;15023:23;15059:69;15122:4;15117:3;15113:14;15099:12;15059:69;:::i;:::-;14967:171;14203:942;;;:::o;15197:1480::-;15331:4;15326:3;15322:14;15362:1;15441:4;15434:5;15430:16;15424:23;15411:36;;15480:55;15525:9;15480:55;:::i;:::-;15548:63;15605:4;15600:3;15596:14;15582:12;15548:63;:::i;:::-;15373:248;15697:4;15690:5;15686:16;15680:23;15667:36;;15736:55;15781:9;15736:55;:::i;:::-;15804:63;15861:4;15856:3;15852:14;15838:12;15804:63;:::i;:::-;15631:246;15955:4;15948:5;15944:16;15938:23;15925:36;;15994:55;16039:9;15994:55;:::i;:::-;16062:63;16119:4;16114:3;16110:14;16096:12;16062:63;:::i;:::-;15887:248;16221:4;16214:5;16210:16;16204:23;16191:36;;16260:55;16305:9;16260:55;:::i;:::-;16328:63;16385:4;16380:3;16376:14;16362:12;16328:63;:::i;:::-;16145:256;16476:4;16469:5;16465:16;16459:23;16446:36;;16515:63;16568:9;16515:63;:::i;:::-;16591:69;16654:4;16649:3;16645:14;16631:12;16591:69;:::i;:::-;16411:259;15300:1377;;;;:::o;16683:108::-;16760:24;16778:5;16760:24;:::i;:::-;16755:3;16748:37;16738:53;;:::o;16797:118::-;16884:24;16902:5;16884:24;:::i;:::-;16879:3;16872:37;16862:53;;:::o;16921:222::-;17014:4;17052:2;17041:9;17037:18;17029:26;;17065:71;17133:1;17122:9;17118:17;17109:6;17065:71;:::i;:::-;17019:124;;;;:::o;17149:332::-;17270:4;17308:2;17297:9;17293:18;17285:26;;17321:71;17389:1;17378:9;17374:17;17365:6;17321:71;:::i;:::-;17402:72;17470:2;17459:9;17455:18;17446:6;17402:72;:::i;:::-;17275:206;;;;;:::o;17487:442::-;17636:4;17674:2;17663:9;17659:18;17651:26;;17687:71;17755:1;17744:9;17740:17;17731:6;17687:71;:::i;:::-;17768:72;17836:2;17825:9;17821:18;17812:6;17768:72;:::i;:::-;17850;17918:2;17907:9;17903:18;17894:6;17850:72;:::i;:::-;17641:288;;;;;;:::o;17935:332::-;18056:4;18094:2;18083:9;18079:18;18071:26;;18107:71;18175:1;18164:9;18160:17;18151:6;18107:71;:::i;:::-;18188:72;18256:2;18245:9;18241:18;18232:6;18188:72;:::i;:::-;18061:206;;;;;:::o;18273:453::-;18456:4;18494:2;18483:9;18479:18;18471:26;;18543:9;18537:4;18533:20;18529:1;18518:9;18514:17;18507:47;18571:148;18714:4;18705:6;18571:148;:::i;:::-;18563:156;;18461:265;;;;:::o;18732:373::-;18875:4;18913:2;18902:9;18898:18;18890:26;;18962:9;18956:4;18952:20;18948:1;18937:9;18933:17;18926:47;18990:108;19093:4;19084:6;18990:108;:::i;:::-;18982:116;;18880:225;;;;:::o;19111:210::-;19198:4;19236:2;19225:9;19221:18;19213:26;;19249:65;19311:1;19300:9;19296:17;19287:6;19249:65;:::i;:::-;19203:118;;;;:::o;19327:248::-;19433:4;19471:2;19460:9;19456:18;19448:26;;19484:84;19565:1;19554:9;19550:17;19541:6;19484:84;:::i;:::-;19438:137;;;;:::o;19581:266::-;19696:4;19734:2;19723:9;19719:18;19711:26;;19747:93;19837:1;19826:9;19822:17;19813:6;19747:93;:::i;:::-;19701:146;;;;:::o;19853:266::-;19968:4;20006:2;19995:9;19991:18;19983:26;;20019:93;20109:1;20098:9;20094:17;20085:6;20019:93;:::i;:::-;19973:146;;;;:::o;20125:419::-;20291:4;20329:2;20318:9;20314:18;20306:26;;20378:9;20372:4;20368:20;20364:1;20353:9;20349:17;20342:47;20406:131;20532:4;20406:131;:::i;:::-;20398:139;;20296:248;;;:::o;20550:419::-;20716:4;20754:2;20743:9;20739:18;20731:26;;20803:9;20797:4;20793:20;20789:1;20778:9;20774:17;20767:47;20831:131;20957:4;20831:131;:::i;:::-;20823:139;;20721:248;;;:::o;20975:419::-;21141:4;21179:2;21168:9;21164:18;21156:26;;21228:9;21222:4;21218:20;21214:1;21203:9;21199:17;21192:47;21256:131;21382:4;21256:131;:::i;:::-;21248:139;;21146:248;;;:::o;21400:419::-;21566:4;21604:2;21593:9;21589:18;21581:26;;21653:9;21647:4;21643:20;21639:1;21628:9;21624:17;21617:47;21681:131;21807:4;21681:131;:::i;:::-;21673:139;;21571:248;;;:::o;21825:419::-;21991:4;22029:2;22018:9;22014:18;22006:26;;22078:9;22072:4;22068:20;22064:1;22053:9;22049:17;22042:47;22106:131;22232:4;22106:131;:::i;:::-;22098:139;;21996:248;;;:::o;22250:419::-;22416:4;22454:2;22443:9;22439:18;22431:26;;22503:9;22497:4;22493:20;22489:1;22478:9;22474:17;22467:47;22531:131;22657:4;22531:131;:::i;:::-;22523:139;;22421:248;;;:::o;22675:419::-;22841:4;22879:2;22868:9;22864:18;22856:26;;22928:9;22922:4;22918:20;22914:1;22903:9;22899:17;22892:47;22956:131;23082:4;22956:131;:::i;:::-;22948:139;;22846:248;;;:::o;23100:419::-;23266:4;23304:2;23293:9;23289:18;23281:26;;23353:9;23347:4;23343:20;23339:1;23328:9;23324:17;23317:47;23381:131;23507:4;23381:131;:::i;:::-;23373:139;;23271:248;;;:::o;23525:419::-;23691:4;23729:2;23718:9;23714:18;23706:26;;23778:9;23772:4;23768:20;23764:1;23753:9;23749:17;23742:47;23806:131;23932:4;23806:131;:::i;:::-;23798:139;;23696:248;;;:::o;23950:419::-;24116:4;24154:2;24143:9;24139:18;24131:26;;24203:9;24197:4;24193:20;24189:1;24178:9;24174:17;24167:47;24231:131;24357:4;24231:131;:::i;:::-;24223:139;;24121:248;;;:::o;24375:419::-;24541:4;24579:2;24568:9;24564:18;24556:26;;24628:9;24622:4;24618:20;24614:1;24603:9;24599:17;24592:47;24656:131;24782:4;24656:131;:::i;:::-;24648:139;;24546:248;;;:::o;24800:419::-;24966:4;25004:2;24993:9;24989:18;24981:26;;25053:9;25047:4;25043:20;25039:1;25028:9;25024:17;25017:47;25081:131;25207:4;25081:131;:::i;:::-;25073:139;;24971:248;;;:::o;25225:419::-;25391:4;25429:2;25418:9;25414:18;25406:26;;25478:9;25472:4;25468:20;25464:1;25453:9;25449:17;25442:47;25506:131;25632:4;25506:131;:::i;:::-;25498:139;;25396:248;;;:::o;25650:419::-;25816:4;25854:2;25843:9;25839:18;25831:26;;25903:9;25897:4;25893:20;25889:1;25878:9;25874:17;25867:47;25931:131;26057:4;25931:131;:::i;:::-;25923:139;;25821:248;;;:::o;26075:303::-;26208:4;26246:3;26235:9;26231:19;26223:27;;26260:111;26368:1;26357:9;26353:17;26344:6;26260:111;:::i;:::-;26213:165;;;;:::o;26384:222::-;26477:4;26515:2;26504:9;26500:18;26492:26;;26528:71;26596:1;26585:9;26581:17;26572:6;26528:71;:::i;:::-;26482:124;;;;:::o;26612:407::-;26770:4;26808:3;26797:9;26793:19;26785:27;;26822:71;26890:1;26879:9;26875:17;26866:6;26822:71;:::i;:::-;26903:109;27008:2;26997:9;26993:18;26984:6;26903:109;:::i;:::-;26775:244;;;;;:::o;27025:997::-;27314:4;27352:3;27341:9;27337:19;27329:27;;27366:71;27434:1;27423:9;27419:17;27410:6;27366:71;:::i;:::-;27447:72;27515:2;27504:9;27500:18;27491:6;27447:72;:::i;:::-;27529;27597:2;27586:9;27582:18;27573:6;27529:72;:::i;:::-;27611;27679:2;27668:9;27664:18;27655:6;27611:72;:::i;:::-;27693:73;27761:3;27750:9;27746:19;27737:6;27693:73;:::i;:::-;27776;27844:3;27833:9;27829:19;27820:6;27776:73;:::i;:::-;27859;27927:3;27916:9;27912:19;27903:6;27859:73;:::i;:::-;27942;28010:3;27999:9;27995:19;27986:6;27942:73;:::i;:::-;27319:703;;;;;;;;;;;:::o;28028:1235::-;28381:4;28419:3;28408:9;28404:19;28396:27;;28433:71;28501:1;28490:9;28486:17;28477:6;28433:71;:::i;:::-;28514:72;28582:2;28571:9;28567:18;28558:6;28514:72;:::i;:::-;28596;28664:2;28653:9;28649:18;28640:6;28596:72;:::i;:::-;28678;28746:2;28735:9;28731:18;28722:6;28678:72;:::i;:::-;28760:73;28828:3;28817:9;28813:19;28804:6;28760:73;:::i;:::-;28843;28911:3;28900:9;28896:19;28887:6;28843:73;:::i;:::-;28926;28994:3;28983:9;28979:19;28970:6;28926:73;:::i;:::-;29009;29077:3;29066:9;29062:19;29053:6;29009:73;:::i;:::-;29092;29160:3;29149:9;29145:19;29136:6;29092:73;:::i;:::-;29175:81;29251:3;29240:9;29236:19;29227:6;29175:81;:::i;:::-;28386:877;;;;;;;;;;;;;:::o;29269:152::-;29356:4;29379:3;29371:11;;29409:4;29404:3;29400:14;29392:22;;29361:60;;;:::o;29427:132::-;29494:4;29517:3;29509:11;;29547:4;29542:3;29538:14;29530:22;;29499:60;;;:::o;29565:134::-;29652:6;29686:5;29680:12;29670:22;;29659:40;;;:::o;29705:114::-;29772:6;29806:5;29800:12;29790:22;;29779:40;;;:::o;29825:133::-;29915:4;29947;29942:3;29938:14;29930:22;;29920:38;;;:::o;29964:113::-;30034:4;30066;30061:3;30057:14;30049:22;;30039:38;;;:::o;30083:204::-;30202:11;30236:6;30231:3;30224:19;30276:4;30271:3;30267:14;30252:29;;30214:73;;;;:::o;30293:184::-;30392:11;30426:6;30421:3;30414:19;30466:4;30461:3;30457:14;30442:29;;30404:73;;;;:::o;30483:169::-;30567:11;30601:6;30596:3;30589:19;30641:4;30636:3;30632:14;30617:29;;30579:73;;;;:::o;30658:305::-;30698:3;30717:20;30735:1;30717:20;:::i;:::-;30712:25;;30751:20;30769:1;30751:20;:::i;:::-;30746:25;;30905:1;30837:66;30833:74;30830:1;30827:81;30824:2;;;30911:18;;:::i;:::-;30824:2;30955:1;30952;30948:9;30941:16;;30702:261;;;;:::o;30969:185::-;31009:1;31026:20;31044:1;31026:20;:::i;:::-;31021:25;;31060:20;31078:1;31060:20;:::i;:::-;31055:25;;31099:1;31089:2;;31104:18;;:::i;:::-;31089:2;31146:1;31143;31139:9;31134:14;;31011:143;;;;:::o;31160:185::-;31200:1;31217:20;31235:1;31217:20;:::i;:::-;31212:25;;31251:20;31269:1;31251:20;:::i;:::-;31246:25;;31290:1;31280:2;;31295:18;;:::i;:::-;31280:2;31337:1;31334;31330:9;31325:14;;31202:143;;;;:::o;31351:348::-;31391:7;31414:20;31432:1;31414:20;:::i;:::-;31409:25;;31448:20;31466:1;31448:20;:::i;:::-;31443:25;;31636:1;31568:66;31564:74;31561:1;31558:81;31553:1;31546:9;31539:17;31535:105;31532:2;;;31643:18;;:::i;:::-;31532:2;31691:1;31688;31684:9;31673:20;;31399:300;;;;:::o;31705:191::-;31745:4;31765:20;31783:1;31765:20;:::i;:::-;31760:25;;31799:20;31817:1;31799:20;:::i;:::-;31794:25;;31838:1;31835;31832:8;31829:2;;;31843:18;;:::i;:::-;31829:2;31888:1;31885;31881:9;31873:17;;31750:146;;;;:::o;31902:188::-;31941:4;31961:19;31978:1;31961:19;:::i;:::-;31956:24;;31994:19;32011:1;31994:19;:::i;:::-;31989:24;;32032:1;32029;32026:8;32023:2;;;32037:18;;:::i;:::-;32023:2;32082:1;32079;32075:9;32067:17;;31946:144;;;;:::o;32096:139::-;32146:7;32186:42;32179:5;32175:54;32164:65;;32154:81;;;:::o;32241:109::-;32299:7;32339:4;32332:5;32328:16;32317:27;;32307:43;;;:::o;32356:90::-;32406:7;32435:5;32424:16;;32414:32;;;:::o;32452:96::-;32489:7;32518:24;32536:5;32518:24;:::i;:::-;32507:35;;32497:51;;;:::o;32554:90::-;32588:7;32631:5;32624:13;32617:21;32606:32;;32596:48;;;:::o;32650:131::-;32697:7;32726:5;32715:16;;32732:43;32769:5;32732:43;:::i;:::-;32705:76;;;:::o;32787:127::-;32832:7;32861:5;32850:16;;32867:41;32902:5;32867:41;:::i;:::-;32840:74;;;:::o;32920:114::-;32957:7;32997:30;32990:5;32986:42;32975:53;;32965:69;;;:::o;33040:126::-;33077:7;33117:42;33110:5;33106:54;33095:65;;33085:81;;;:::o;33172:142::-;33209:7;33249:58;33242:5;33238:70;33227:81;;33217:97;;;:::o;33320:77::-;33357:7;33386:5;33375:16;;33365:32;;;:::o;33403:93::-;33439:7;33479:10;33472:5;33468:22;33457:33;;33447:49;;;:::o;33502:152::-;33565:9;33598:50;33642:5;33598:50;:::i;:::-;33585:63;;33575:79;;;:::o;33660:126::-;33723:9;33756:24;33774:5;33756:24;:::i;:::-;33743:37;;33733:53;;;:::o;33792:170::-;33864:9;33897:59;33950:5;33897:59;:::i;:::-;33884:72;;33874:88;;;:::o;33968:135::-;34040:9;34073:24;34091:5;34073:24;:::i;:::-;34060:37;;34050:53;;;:::o;34109:170::-;34181:9;34214:59;34267:5;34214:59;:::i;:::-;34201:72;;34191:88;;;:::o;34285:135::-;34357:9;34390:24;34408:5;34390:24;:::i;:::-;34377:37;;34367:53;;;:::o;34426:131::-;34484:9;34517:34;34545:5;34517:34;:::i;:::-;34504:47;;34494:63;;;:::o;34563:127::-;34619:9;34652:32;34678:5;34652:32;:::i;:::-;34639:45;;34629:61;;;:::o;34696:166::-;34765:5;34790:66;34821:34;34844:10;34821:34;:::i;:::-;34790:66;:::i;:::-;34781:75;;34771:91;;;:::o;34868:182::-;34945:5;34970:74;35009:34;35032:10;35009:34;:::i;:::-;34970:74;:::i;:::-;34961:83;;34951:99;;;:::o;35056:166::-;35125:5;35150:66;35181:34;35204:10;35181:34;:::i;:::-;35150:66;:::i;:::-;35141:75;;35131:91;;;:::o;35228:233::-;35267:3;35290:24;35308:5;35290:24;:::i;:::-;35281:33;;35336:66;35329:5;35326:77;35323:2;;;35406:18;;:::i;:::-;35323:2;35453:1;35446:5;35442:13;35435:20;;35271:190;;;:::o;35467:176::-;35499:1;35516:20;35534:1;35516:20;:::i;:::-;35511:25;;35550:20;35568:1;35550:20;:::i;:::-;35545:25;;35589:1;35579:2;;35594:18;;:::i;:::-;35579:2;35635:1;35632;35628:9;35623:14;;35501:142;;;;:::o;35649:180::-;35697:77;35694:1;35687:88;35794:4;35791:1;35784:15;35818:4;35815:1;35808:15;35835:180;35883:77;35880:1;35873:88;35980:4;35977:1;35970:15;36004:4;36001:1;35994:15;36021:180;36069:77;36066:1;36059:88;36166:4;36163:1;36156:15;36190:4;36187:1;36180:15;36207:102;36249:8;36296:5;36293:1;36289:13;36268:34;;36258:51;;;:::o;36315:176::-;36455:28;36451:1;36443:6;36439:14;36432:52;36421:70;:::o;36497:161::-;36637:13;36633:1;36625:6;36621:14;36614:37;36603:55;:::o;36664:163::-;36804:15;36800:1;36792:6;36788:14;36781:39;36770:57;:::o;36833:158::-;36973:10;36969:1;36961:6;36957:14;36950:34;36939:52;:::o;36997:169::-;37137:21;37133:1;37125:6;37121:14;37114:45;37103:63;:::o;37172:169::-;37312:21;37308:1;37300:6;37296:14;37289:45;37278:63;:::o;37347:166::-;37487:18;37483:1;37475:6;37471:14;37464:42;37453:60;:::o;37519:177::-;37659:29;37655:1;37647:6;37643:14;37636:53;37625:71;:::o;37702:163::-;37842:15;37838:1;37830:6;37826:14;37819:39;37808:57;:::o;37871:175::-;38011:27;38007:1;37999:6;37995:14;37988:51;37977:69;:::o;38052:166::-;38192:18;38188:1;38180:6;38176:14;38169:42;38158:60;:::o;38224:163::-;38364:15;38360:1;38352:6;38348:14;38341:39;38330:57;:::o;38393:167::-;38533:19;38529:1;38521:6;38517:14;38510:43;38499:61;:::o;38566:173::-;38706:25;38702:1;38694:6;38690:14;38683:49;38672:67;:::o;38745:115::-;38828:1;38821:5;38818:12;38808:2;;38834:18;;:::i;:::-;38808:2;38798:62;:::o;38866:113::-;38947:1;38940:5;38937:12;38927:2;;38953:18;;:::i;:::-;38927:2;38917:62;:::o;38985:122::-;39058:24;39076:5;39058:24;:::i;:::-;39051:5;39048:35;39038:2;;39097:1;39094;39087:12;39038:2;39028:79;:::o;39113:116::-;39183:21;39198:5;39183:21;:::i;:::-;39176:5;39173:32;39163:2;;39219:1;39216;39209:12;39163:2;39153:76;:::o;39235:122::-;39308:24;39326:5;39308:24;:::i;:::-;39301:5;39298:35;39288:2;;39347:1;39344;39337:12;39288:2;39278:79;:::o;39363:122::-;39436:24;39454:5;39436:24;:::i;:::-;39429:5;39426:35;39416:2;;39475:1;39472;39465:12;39416:2;39406:79;:::o;39491:120::-;39563:23;39580:5;39563:23;:::i;:::-;39556:5;39553:34;39543:2;;39601:1;39598;39591:12;39543:2;39533:78;:::o"
            },
            "methodIdentifiers": {
              "accountingToken()": "da68cf8b",
              "avgPriceSwitch()": "8f9eca82",
              "buyLot(uint256,uint256,uint256)": "3c80d8ea",
              "claimReward(uint256)": "ae169a50",
              "clcAmountToApprove(uint256,uint256,uint256)": "a4d246ff",
              "clcAmountToApproveForUpdate(uint256,uint256,uint256)": "3656d5ee",
              "clcFrameTimestamp(uint256)": "5b3ad63e",
              "clcLotKey(uint256)": "9592de18",
              "clcPrice(uint256)": "41a8b6f8",
              "dPrice()": "499a0fc4",
              "factory()": "c45a0155",
              "feeMarket()": "410f0710",
              "feeProtocol()": "527eb4bc",
              "frames(uint256)": "a10340bc",
              "framesKeys(uint256)": "050e8840",
              "getLot(uint256,uint256)": "6f1aefc3",
              "getLotKey(uint256,uint256)": "3e16bc20",
              "getLotsCount(uint256)": "830ab119",
              "getNumOfUserFrames(address)": "0ef19273",
              "getNumberOfFrameKeys()": "89da88a3",
              "getOpenFrameKeys(uint256,uint256)": "14aa5a99",
              "getRewardAmount(uint256)": "c84993af",
              "getUserFrames(address)": "9495833c",
              "getUserLots(address)": "659d0ca0",
              "initTimestamp()": "7358c57a",
              "minTax()": "3d09a82a",
              "ownerMarket()": "45084775",
              "period()": "ef78d4fd",
              "tReporting()": "ff5c86b0",
              "taxMarket()": "7e996639",
              "uniswapPair()": "c816841b",
              "updateFramePrices()": "96b2c6f3",
              "updateLotPrice(uint256,uint256,uint256)": "bb15d2dd",
              "userFrames(address,uint256)": "60f65c60"
            }
          }
        }
      },
      "contracts/MarketFactory.sol": {
        "MarketFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_uniswapFactory",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_uniswapPair",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "_period",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "_initTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "_tax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_fee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_dPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "_tReporting",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "_minTax",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_avgPriceSwitch",
                  "type": "bool"
                }
              ],
              "name": "addMarket",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMarketsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "markets",
              "outputs": [
                {
                  "internalType": "contract Market",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "marketsKeys",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "uniswapFactory",
              "outputs": [
                {
                  "internalType": "contract IUniswapV2Factory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:805:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "233:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "279:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "288:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "291:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "281:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "281:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "281:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "263:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "250:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "250:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "246:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "243:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "305:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "320:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "334:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "324:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "349:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "395:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "406:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "391:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "391:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "415:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "359:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "359:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "349:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "203:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "214:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "226:6:8",
                            "type": ""
                          }
                        ],
                        "src": "156:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "491:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "501:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "512:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "473:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "483:7:8",
                            "type": ""
                          }
                        ],
                        "src": "446:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "593:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "603:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "625:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "575:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "585:7:8",
                            "type": ""
                          }
                        ],
                        "src": "548:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "723:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "780:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "789:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "792:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "782:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "782:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "782:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "746:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "771:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "753:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "743:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "743:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "736:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "736:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "733:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "716:5:8",
                            "type": ""
                          }
                        ],
                        "src": "680:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50604051615f4f380380615f4f833981810160405281019061003291906100ce565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b615e008061014f6000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806313afc618146200006f57806327fa35c3146200008f57806346a81c0014620000b15780638bdb2afa14620000e75780638da5cb5b14620001095780638e8f294b146200012b575b600080fd5b6200008d600480360381019062000087919062000400565b62000161565b005b62000099620002a0565b604051620000a89190620006cd565b60405180910390f35b620000cf6004803603810190620000c99190620004f0565b620002ad565b604051620000de9190620005b5565b60405180910390f35b620000f1620002ed565b604051620001009190620005d2565b60405180910390f35b6200011362000311565b604051620001229190620005b5565b60405180910390f35b620001496004803603810190620001439190620003d4565b62000337565b604051620001589190620006b0565b60405180910390f35b6000308b8b8b8b8b8b8b8b8b8b6040516200017c906200036a565b620001929b9a99989796959493929190620005ef565b604051809103906000f080158015620001af573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050505050565b6000600280549050905090565b60028181548110620002be57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61553e806200088d83390190565b600081359050620003898162000824565b92915050565b600081359050620003a0816200083e565b92915050565b600081359050620003b78162000858565b92915050565b600081359050620003ce8162000872565b92915050565b600060208284031215620003e757600080fd5b6000620003f78482850162000378565b91505092915050565b6000806000806000806000806000806101408b8d0312156200042157600080fd5b6000620004318d828e0162000378565b9a50506020620004448d828e0162000378565b9950506040620004578d828e01620003bd565b98505060606200046a8d828e01620003bd565b97505060806200047d8d828e01620003a6565b96505060a0620004908d828e01620003a6565b95505060c0620004a38d828e01620003a6565b94505060e0620004b68d828e01620003bd565b935050610100620004ca8d828e01620003a6565b925050610120620004de8d828e016200038f565b9150509295989b9194979a5092959850565b6000602082840312156200050357600080fd5b60006200051384828501620003a6565b91505092915050565b6200052781620006ea565b82525050565b6200053881620006fe565b82525050565b620005498162000748565b82525050565b6200055a8162000770565b82525050565b6200056b8162000798565b82525050565b6200057c81620007c0565b82525050565b6200058d81620007e8565b82525050565b6200059e816200072a565b82525050565b620005af8162000810565b82525050565b6000602082019050620005cc60008301846200051c565b92915050565b6000602082019050620005e960008301846200054f565b92915050565b60006101608201905062000607600083018e62000571565b62000616602083018d6200053e565b62000625604083018c62000560565b62000634606083018b620005a4565b62000643608083018a620005a4565b6200065260a083018962000593565b6200066160c083018862000593565b6200067060e083018762000593565b62000680610100830186620005a4565b6200069061012083018562000593565b620006a06101408301846200052d565b9c9b505050505050505050505050565b6000602082019050620006c7600083018462000582565b92915050565b6000602082019050620006e4600083018462000593565b92915050565b6000620006f7826200070a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600062000755826200075c565b9050919050565b600062000769826200070a565b9050919050565b60006200077d8262000784565b9050919050565b600062000791826200070a565b9050919050565b6000620007a582620007ac565b9050919050565b6000620007b9826200070a565b9050919050565b6000620007cd82620007d4565b9050919050565b6000620007e1826200070a565b9050919050565b6000620007f582620007fc565b9050919050565b600062000809826200070a565b9050919050565b60006200081d8262000734565b9050919050565b6200082f81620006ea565b81146200083b57600080fd5b50565b6200084981620006fe565b81146200085557600080fd5b50565b62000863816200072a565b81146200086f57600080fd5b50565b6200087d8162000734565b81146200088957600080fd5b5056fe608060405260646002556000600c60006101000a81548160ff02191690831515021790555069d3c21bcecceda1000000600d553480156200003f57600080fd5b506040516200553e3803806200553e833981810160405281019062000065919062000238565b89600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508760008190555086600181905550856007819055508460068190555088600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836005819055508a600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260038190555081600b8190555080600c60006101000a81548160ff021916908315150217905550505050505050505050505062000447565b600081519050620001d681620003c5565b92915050565b600081519050620001ed81620003df565b92915050565b6000815190506200020481620003f9565b92915050565b6000815190506200021b8162000413565b92915050565b60008151905062000232816200042d565b92915050565b60008060008060008060008060008060006101608c8e0312156200025b57600080fd5b60006200026b8e828f016200020a565b9b505060206200027e8e828f01620001dc565b9a50506040620002918e828f01620001f3565b9950506060620002a48e828f0162000221565b9850506080620002b78e828f0162000221565b97505060a0620002ca8e828f0162000221565b96505060c0620002dd8e828f0162000221565b95505060e0620002f08e828f0162000221565b945050610100620003048e828f0162000221565b935050610120620003188e828f0162000221565b9250506101406200032c8e828f01620001c5565b9150509295989b509295989b9093969950565b60006200034c826200039b565b9050919050565b60008115159050919050565b60006200036c826200033f565b9050919050565b600062000380826200033f565b9050919050565b600062000394826200033f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620003d08162000353565b8114620003dc57600080fd5b50565b620003ea816200035f565b8114620003f657600080fd5b50565b620004048162000373565b81146200041057600080fd5b50565b6200041e8162000387565b81146200042a57600080fd5b50565b6200043881620003bb565b81146200044457600080fd5b50565b6150e780620004576000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80637e9966391161011a578063a4d246ff116100ad578063c816841b1161007c578063c816841b1461066e578063c84993af1461068c578063da68cf8b146106bc578063ef78d4fd146106da578063ff5c86b0146106f857610206565b8063a4d246ff146105e8578063ae169a5014610618578063bb15d2dd14610634578063c45a01551461065057610206565b80639495833c116100e95780639495833c146105455780639592de181461057557806396b2c6f3146105a5578063a10340bc146105af57610206565b80637e996639146104bb578063830ab119146104d957806389da88a3146105095780638f9eca821461052757610206565b806341a8b6f81161019d5780635b3ad63e1161016c5780635b3ad63e146103dd57806360f65c601461040d578063659d0ca01461043d5780636f1aefc31461046d5780637358c57a1461049d57610206565b806341a8b6f8146103535780634508477514610383578063499a0fc4146103a1578063527eb4bc146103bf57610206565b80633c80d8ea116101d95780633c80d8ea146102cb5780633d09a82a146102e75780633e16bc2014610305578063410f07101461033557610206565b8063050e88401461020b5780630ef192731461023b57806314aa5a991461026b5780633656d5ee1461029b575b600080fd5b61022560048036038101906102209190613eab565b610716565b6040516102329190614794565b60405180910390f35b61025560048036038101906102509190613da5565b61073a565b6040516102629190614794565b60405180910390f35b61028560048036038101906102809190613efd565b610786565b604051610292919061452b565b60405180910390f35b6102b560048036038101906102b09190613f39565b61091d565b6040516102c29190614794565b60405180910390f35b6102e560048036038101906102e09190613f39565b6109a2565b005b6102ef61123f565b6040516102fc9190614794565b60405180910390f35b61031f600480360381019061031a9190613efd565b611245565b60405161032c9190614794565b60405180910390f35b61033d6112a8565b60405161034a9190614794565b60405180910390f35b61036d60048036038101906103689190613eab565b6112ae565b60405161037a9190614794565b60405180910390f35b61038b61147f565b6040516103989190614465565b60405180910390f35b6103a96114a5565b6040516103b69190614794565b60405180910390f35b6103c76114ab565b6040516103d49190614794565b60405180910390f35b6103f760048036038101906103f29190613eab565b6114b1565b6040516104049190614794565b60405180910390f35b61042760048036038101906104229190613df7565b6114f4565b6040516104349190614794565b60405180910390f35b61045760048036038101906104529190613da5565b611525565b6040516104649190614509565b60405180910390f35b61048760048036038101906104829190613efd565b611c61565b6040516104949190614779565b60405180910390f35b6104a5611d9e565b6040516104b29190614794565b60405180910390f35b6104c3611da4565b6040516104d09190614794565b60405180910390f35b6104f360048036038101906104ee9190613eab565b611daa565b6040516105009190614794565b60405180910390f35b610511611dcd565b60405161051e9190614794565b60405180910390f35b61052f611dda565b60405161053c919061454d565b60405180910390f35b61055f600480360381019061055a9190613da5565b611ded565b60405161056c919061452b565b60405180910390f35b61058f600480360381019061058a9190613eab565b611e84565b60405161059c9190614794565b60405180910390f35b6105ad611eba565b005b6105c960048036038101906105c49190613eab565b6121ae565b6040516105df9a99989796959493929190614856565b60405180910390f35b61060260048036038101906105fd9190613f39565b61220f565b60405161060f9190614794565b60405180910390f35b610632600480360381019061062d9190613eab565b6122c5565b005b61064e60048036038101906106499190613f39565b6122da565b005b6106586127fe565b604051610665919061459e565b60405180910390f35b610676612824565b6040516106839190614583565b60405180910390f35b6106a660048036038101906106a19190613eab565b61284a565b6040516106b39190614794565b60405180910390f35b6106c461286a565b6040516106d19190614568565b60405180910390f35b6106e2612890565b6040516106ef9190614794565b60405180910390f35b610700612896565b60405161070d9190614794565b60405180910390f35b6010818154811061072657600080fd5b906000526020600020016000915090505481565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60608167ffffffffffffffff8111156107c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156107f65781602001602082028036833780820191505090505b50905060005b828111610916576000816000546108139190614a2d565b8561081e9190614975565b90506000600281111561085a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060090160009054906101000a900460ff1660028111156108b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461090257808383815181106108f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b50808061090e90614cc4565b9150506107fc565b5092915050565b600080610929856114b1565b9050600061096982600e6000858152602001908152602001600020600b01600061095289611e84565b81526020019081526020016000206003015461289c565b90506000610977838661289c565b90508082106109895760009350610998565b81816109959190614a87565b93505b5050509392505050565b60006109ad8461293f565b90506109b98183612aef565b60006109c58285612b47565b90506109d0426114b1565b821015610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a09906145d9565b60405180910390fd5b600e6000838152602001908152602001600020600b01600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac2906146b9565b60405180910390fd5b6000610ad7838561289c565b905080600e6000858152602001908152602001600020600b01600084815260200190815260200160002060030154610b0f9190614975565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610b6c929190614480565b60206040518083038186803b158015610b8457600080fd5b505afa158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc9190613ed4565b1015610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf4906146d9565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084600e6000898152602001908152602001600020600b01600088815260200190815260200160002060030154610c739190614975565b6040518463ffffffff1660e01b8152600401610c91939291906144a9565b602060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190613e33565b5080600e600085815260200190815260200160002060030154610d069190614975565b600e60008581526020019081526020016000206003018190555060016002811115610d5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000858152602001908152602001600020600b01600084815260200190815260200160002060040160009054906101000a900460ff166002811115610dca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610f79576000610e0684600e6000878152602001908152602001600020600b0160008681526020019081526020016000206003015461289c565b9050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600e6000878152602001908152602001600020600b01600086815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e6000888152602001908152602001600020600b0160008781526020019081526020016000206003015484610ec79190614975565b6040518363ffffffff1660e01b8152600401610ee49291906144e0565b602060405180830381600087803b158015610efe57600080fd5b505af1158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f369190613e33565b5080600e600086815260200190815260200160002060030154610f599190614a87565b600e60008681526020019081526020016000206003018190555050610ff3565b6001600e6000858152602001908152602001600020600b01600084815260200190815260200160002060040160006101000a81548160ff02191690836002811115610fed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b33600e6000858152602001908152602001600020600b01600084815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600e6000858152602001908152602001600020600b01600084815260200190815260200160002060030181905550600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150506001900390600052602060002001600090919091909150556110f9611eba565b7ff733bd7f4402cb7d331b34d5cd22f432b9bf71a833f786974545860d74976af283600e600086815260200190815260200160002060010154600e600087815260200190815260200160002060020154600e600088815260200190815260200160002060050154600e600089815260200190815260200160002060060154600e60008a815260200190815260200160002060070154600e60008b815260200190815260200160002060080154600e60008c8152602001908152602001600020600301546040516111d09897969594939291906147d8565b60405180910390a17f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d83600e6000868152602001908152602001600020600b01600085815260200190815260200160002060405161122f9291906147af565b60405180910390a1505050505050565b600b5481565b6000600e6000848152602001908152602001600020600a018281548110611295577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b60065481565b60006112b982612cb3565b6000600e600084815260200190815260200160002060010154600e6000858152602001908152602001600020600201546112f39190614a87565b9050600c60009054906101000a900460ff16156113a257604051806020016040528082600e600087815260200190815260200160002060050154600e60008881526020019081526020016000206006015461134e9190614a87565b61135891906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169150611436565b604051806020016040528082600e600087815260200190815260200160002060070154600e6000888152602001908152602001600020600801546113e69190614a87565b6113f091906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1691505b7406d79f82328ea3da61e066ebb2f88a000000000000607083901b61145b91906149fc565b600d54607084901c61146d9190614a2d565b6114779190614975565b915050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60025481565b600060015482116114c65760015490506114ef565b600054600154836114d79190614a87565b6114e19190614d0d565b826114ec9190614a87565b90505b919050565b600f602052816000526040600020818154811061151057600080fd5b90600052602060002001600091509150505481565b60606000611532426114b1565b90506107d067ffffffffffffffff811115611576577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156115af57816020015b61159c613c64565b8152602001906001900390816115945790505b5091506115ba613c64565b60008080600190505b6064811161192457603281106115ff576032816115e09190614a87565b6000546115ed9190614a2d565b856115f89190614975565b915061161b565b8060005461160d9190614a2d565b856116189190614a87565b91505b60016002811115611655577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600084815260200190815260200160002060090160009054906101000a900460ff1660028111156116b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156119115760005b600e6000848152602001908152602001600020600a018054905081101561190f57600e6000848152602001908152602001600020600b016000600e6000868152602001908152602001600020600a018381548110611741577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611824577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561185c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505094508773ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff1614156118fc57848785815181106118d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525083806118ea90614cc4565b9450506107d084106118fb5761190f565b5b808061190790614cc4565b9150506116ba565b505b808061191c90614cc4565b9150506115c3565b506000600190505b60318111611c5757806000546119429190614a2d565b8561194d9190614a87565b9150600280811115611988577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600084815260200190815260200160002060090160009054906101000a900460ff1660028111156119e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611c445760005b600e6000848152602001908152602001600020600a0180549050811015611c4257600e6000848152602001908152602001600020600b016000600e6000868152602001908152602001600020600a018381548110611a74577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611b57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611b8f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505094508773ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff161415611c2f576107d08410611bdb57611c42565b84878581518110611c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508380611c2b90614cc4565b9450505b8080611c3a90614cc4565b9150506119ed565b505b8080611c4f90614cc4565b91505061192c565b5050505050919050565b611c69613c64565b600e6000848152602001908152602001600020600b0160008381526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611d5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611d92577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905092915050565b60015481565b60075481565b6000600e6000838152602001908152602001600020600a01805490509050919050565b6000601080549050905090565b600c60009054906101000a900460ff1681565b6060600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611e7857602002820191906000526020600020905b815481526020019060010190808311611e64575b50505050509050919050565b6000808211611e97576005549050611eb5565b60055460055483611ea891906149fc565b611eb29190614a2d565b90505b919050565b6000611ec5426114b1565b905060035460005482611ed89190614975565b611ee29190614a87565b42101561201b57611f14600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612da2565b8063ffffffff169050600e60008581526020019081526020016000206005016000600e60008781526020019081526020016000206007016000600e60008981526020019081526020016000206001016000869190505585919050558491905055505050600e600082815260200190815260200160002060050154600e600083815260200190815260200160002060070154600e600084815260200190815260200160002060010154600e60008581526020019081526020016000206006016000600e60008781526020019081526020016000206008016000600e600089815260200190815260200160002060020160008691905055859190505584919050555050506120cc565b6003546000548261202c9190614975565b6120369190614a87565b42106120cb57612067600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612da2565b8063ffffffff169050600e60008581526020019081526020016000206006016000600e60008781526020019081526020016000206008016000600e600089815260200190815260200160002060020160008691905055859190505584919050555050505b5b7ff733bd7f4402cb7d331b34d5cd22f432b9bf71a833f786974545860d74976af281600e600084815260200190815260200160002060010154600e600085815260200190815260200160002060020154600e600086815260200190815260200160002060050154600e600087815260200190815260200160002060060154600e600088815260200190815260200160002060070154600e600089815260200190815260200160002060080154600e60008a8152602001908152602001600020600301546040516121a39897969594939291906147d8565b60405180910390a150565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508a565b60008061221b856114b1565b9050612226426114b1565b811015612268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161225f90614699565b60405180910390fd5b600061227385611e84565b90506000612281838661289c565b905080600e6000858152602001908152602001600020600b016000848152602001908152602001600020600301546122b99190614975565b93505050509392505050565b6122ce81612ffd565b6122d7816136a8565b50565b60006122e58461293f565b90506122f18183612aef565b60006122fd8285612b47565b90503373ffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600b01600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ae906145f9565b60405180910390fd5b6123c0426114b1565b821015612402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123f990614739565b60405180910390fd5b600061240e838561289c565b9050600061244684600e6000878152602001908152602001600020600b0160008681526020019081526020016000206003015461289c565b90508082111561265357808261245c9190614a87565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016124b9929190614480565b60206040518083038186803b1580156124d157600080fd5b505afa1580156124e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125099190613ed4565b101561254a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612541906146d9565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084866125969190614a87565b6040518463ffffffff1660e01b81526004016125b4939291906144a9565b602060405180830381600087803b1580156125ce57600080fd5b505af11580156125e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126069190613e33565b5080826126139190614a87565b600e6000868152602001908152602001600020600301546126349190614975565b600e60008681526020019081526020016000206003018190555061275f565b8082101561275e57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3384846126a69190614a87565b6040518363ffffffff1660e01b81526004016126c39291906144e0565b602060405180830381600087803b1580156126dd57600080fd5b505af11580156126f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127159190613e33565b5081816127229190614a87565b600e6000868152602001908152602001600020600301546127439190614a87565b600e6000868152602001908152602001600020600301819055505b5b84600e6000868152602001908152602001600020600b01600085815260200190815260200160002060030181905550612796611eba565b7f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d84600e6000878152602001908152602001600020600b0160008681526020019081526020016000206040516127ed9291906147af565b60405180910390a150505050505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600e6000838152602001908152602001600020600301549050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60035481565b600080426000546128ac426114b1565b6128b69190614975565b6128c09190614a87565b90506000805482600d546128d49190614a2d565b6128de91906149fc565b9050620186a0600754856128f29190614a2d565b6128fc91906149fc565b9250600d54818461290d9190614a2d565b61291791906149fc565b61292086613b30565b8461292b9190614a2d565b6129359190614975565b9250505092915050565b60008061294b836114b1565b905060006002811115612987577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060090160009054906101000a900460ff1660028111156129e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146129f15780915050612aea565b6129fa426114b1565b811015612a3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3390614719565b60405180910390fd5b80600e6000838152602001908152602001600020600001819055506001600e600083815260200190815260200160002060090160006101000a81548160ff02191690836002811115612ab7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506010819080600181540180825580915050600190039060005260206000200160009091909190915055809150505b919050565b6000612afb838361289c565b9050600b54811015612b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b3990614679565b60405180910390fd5b505050565b600080612b5383611e84565b905060006002811115612b8f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000868152602001908152602001600020600b01600083815260200190815260200160002060040160009054906101000a900460ff166002811115612bff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14612c0d5780915050612cad565b83600e6000868152602001908152602001600020600b0160008381526020019081526020016000206000018190555080600e6000868152602001908152602001600020600b01600083815260200190815260200160002060010181905550600e6000858152602001908152602001600020600a01819080600181540180825580915050600190039060005260206000200160009091909190915055809150505b92915050565b6000600e600083815260200190815260200160002060050154111580612cf057506000600e60008381526020019081526020016000206006015411155b15612d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d2790614639565b60405180910390fd5b600e600082815260200190815260200160002060060154600e6000838152602001908152602001600020600501541415612d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d9690614639565b60405180910390fd5b50565b6000806000612daf613b6c565b90508373ffffffffffffffffffffffffffffffffffffffff16635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b158015612df757600080fd5b505afa158015612e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e2f9190613ed4565b92508373ffffffffffffffffffffffffffffffffffffffff16635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b158015612e7757600080fd5b505afa158015612e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eaf9190613ed4565b915060008060008673ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612efc57600080fd5b505afa158015612f10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f349190613e5c565b9250925092508363ffffffff168163ffffffff1614612ff35760008185612f5b9190614abb565b90508063ffffffff16612f6e8486613b84565b600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612f9a9190614a2d565b87612fa59190614975565b96508063ffffffff16612fb88585613b84565b600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612fe49190614a2d565b86612fef9190614975565b9550505b5050509193909250565b61300681612cb3565b42600054826130159190614975565b1115613056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161304d906145b9565b60405180910390fd5b6002600e600083815260200190815260200160002060090160006101000a81548160ff021916908360028111156130b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600e600083815260200190815260200160002060010154600e6000848152602001908152602001600020600201546130f59190614a87565b9050600c60009054906101000a900460ff16156131bc57604051806020016040528082600e600086815260200190815260200160002060050154600e6000878152602001908152602001600020600601546131509190614a87565b61315a91906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600e600084815260200190815260200160002060040181905550613268565b604051806020016040528082600e600086815260200190815260200160002060070154600e6000878152602001908152602001600020600801546132009190614a87565b61320a91906149fc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600401819055505b7406d79f82328ea3da61e066ebb2f88a0000000000006070600e600085815260200190815260200160002060040154901b6132a391906149fc565b600d546070600e600086815260200190815260200160002060040154901c6132cb9190614a2d565b6132d59190614975565b600e6000848152602001908152602001600020600401819055506000620186a0600654600e6000868152602001908152602001600020600301546133199190614a2d565b61332391906149fc565b90506000620186a0600254600e60008781526020019081526020016000206003015461334f9190614a2d565b61335991906149fc565b90508082600e60008781526020019081526020016000206003015461337e9190614a87565b6133889190614a87565b600e600086815260200190815260200160002060030181905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016134219291906144e0565b602060405180830381600087803b15801561343b57600080fd5b505af115801561344f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134739190613e33565b50600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561351a57600080fd5b505afa15801561352e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135529190613dce565b836040518363ffffffff1660e01b81526004016135709291906144e0565b602060405180830381600087803b15801561358a57600080fd5b505af115801561359e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135c29190613e33565b507ff733bd7f4402cb7d331b34d5cd22f432b9bf71a833f786974545860d74976af284600e600087815260200190815260200160002060010154600e600088815260200190815260200160002060020154600e600089815260200190815260200160002060050154600e60008a815260200190815260200160002060060154600e60008b815260200190815260200160002060070154600e60008c815260200190815260200160002060080154600e60008d81526020019081526020016000206003015460405161369a9897969594939291906147d8565b60405180910390a150505050565b6002808111156136e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060090160009054906101000a900460ff16600281111561373d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461377d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613774906146f9565b60405180910390fd5b600061379e600e600084815260200190815260200160002060040154611e84565b90506002808111156137d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000848152602001908152602001600020600b01600083815260200190815260200160002060040160009054906101000a900460ff166002811115613849577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561388a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161388190614659565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600b01600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161393b90614619565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600e6000858152602001908152602001600020600b01600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e6000868152602001908152602001600020600301546040518363ffffffff1660e01b8152600401613a019291906144e0565b602060405180830381600087803b158015613a1b57600080fd5b505af1158015613a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a539190613e33565b506002600e6000848152602001908152602001600020600b01600083815260200190815260200160002060040160006101000a81548160ff02191690836002811115613ac8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d82600e6000858152602001908152602001600020600b016000848152602001908152602001600020604051613b249291906147af565b60405180910390a15050565b6000613b3b426114b1565b821415613b4b5760009050613b67565b6000544283613b5a9190614a87565b613b6491906149fc565b90505b919050565b600064010000000042613b7f9190614d0d565b905090565b613b8c613ce1565b6000826dffffffffffffffffffffffffffff1611613bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613bd690614759565b60405180910390fd5b6040518060200160405280836dffffffffffffffffffffffffffff16607060ff16866dffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16901b613c3b91906149cb565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250905092915050565b6040518060a001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160006002811115613cdb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b604051806020016040528060007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050613d218161503e565b92915050565b600081519050613d368161503e565b92915050565b600081519050613d4b81615055565b92915050565b600081519050613d608161506c565b92915050565b600081359050613d7581615083565b92915050565b600081519050613d8a81615083565b92915050565b600081519050613d9f8161509a565b92915050565b600060208284031215613db757600080fd5b6000613dc584828501613d12565b91505092915050565b600060208284031215613de057600080fd5b6000613dee84828501613d27565b91505092915050565b60008060408385031215613e0a57600080fd5b6000613e1885828601613d12565b9250506020613e2985828601613d66565b9150509250929050565b600060208284031215613e4557600080fd5b6000613e5384828501613d3c565b91505092915050565b600080600060608486031215613e7157600080fd5b6000613e7f86828701613d51565b9350506020613e9086828701613d51565b9250506040613ea186828701613d90565b9150509250925092565b600060208284031215613ebd57600080fd5b6000613ecb84828501613d66565b91505092915050565b600060208284031215613ee657600080fd5b6000613ef484828501613d7b565b91505092915050565b60008060408385031215613f1057600080fd5b6000613f1e85828601613d66565b9250506020613f2f85828601613d66565b9150509250929050565b600080600060608486031215613f4e57600080fd5b6000613f5c86828701613d66565b9350506020613f6d86828701613d66565b9250506040613f7e86828701613d66565b9150509250925092565b6000613f9483836142d6565b60a08301905092915050565b6000613fac8383614447565b60208301905092915050565b613fc181614b26565b82525050565b613fd081614b26565b82525050565b6000613fe182614912565b613feb8185614942565b9350613ff6836148f2565b8060005b8381101561402757815161400e8882613f88565b975061401983614928565b925050600181019050613ffa565b5085935050505092915050565b600061403f8261491d565b6140498185614953565b935061405483614902565b8060005b8381101561408557815161406c8882613fa0565b975061407783614935565b925050600181019050614058565b5085935050505092915050565b61409b81614b38565b82525050565b6140aa81614be6565b82525050565b6140b981614c0a565b82525050565b6140c881614c2e565b82525050565b6140d781614c52565b82525050565b6140e681614c64565b82525050565b60006140f9601a83614964565b915061410482614dd8565b602082019050919050565b600061411c600b83614964565b915061412782614e01565b602082019050919050565b600061413f600d83614964565b915061414a82614e2a565b602082019050919050565b6000614162600883614964565b915061416d82614e53565b602082019050919050565b6000614185601383614964565b915061419082614e7c565b602082019050919050565b60006141a8601383614964565b91506141b382614ea5565b602082019050919050565b60006141cb601083614964565b91506141d682614ece565b602082019050919050565b60006141ee601b83614964565b91506141f982614ef7565b602082019050919050565b6000614211600d83614964565b915061421c82614f20565b602082019050919050565b6000614234601983614964565b915061423f82614f49565b602082019050919050565b6000614257601083614964565b915061426282614f72565b602082019050919050565b600061427a600d83614964565b915061428582614f9b565b602082019050919050565b600061429d601183614964565b91506142a882614fc4565b602082019050919050565b60006142c0601783614964565b91506142cb82614fed565b602082019050919050565b60a0820160008201516142ec6000850182614447565b5060208201516142ff6020850182614447565b5060408201516143126040850182613fb8565b5060608201516143256060850182614447565b50608082015161433860808501826140dd565b50505050565b60a0820160008201516143546000850182614447565b5060208201516143676020850182614447565b50604082015161437a6040850182613fb8565b50606082015161438d6060850182614447565b5060808201516143a060808501826140dd565b50505050565b60a0820160008083015490506143bb81614caa565b6143c86000860182614447565b50600183015490506143d981614caa565b6143e66020860182614447565b50600283015490506143f781614c76565b6144046040860182613fb8565b506003830154905061441581614caa565b6144226060860182614447565b506004830154905061443381614c90565b61444060808601826140dd565b5050505050565b61445081614bcc565b82525050565b61445f81614bcc565b82525050565b600060208201905061447a6000830184613fc7565b92915050565b60006040820190506144956000830185613fc7565b6144a26020830184613fc7565b9392505050565b60006060820190506144be6000830186613fc7565b6144cb6020830185613fc7565b6144d86040830184614456565b949350505050565b60006040820190506144f56000830185613fc7565b6145026020830184614456565b9392505050565b600060208201905081810360008301526145238184613fd6565b905092915050565b600060208201905081810360008301526145458184614034565b905092915050565b60006020820190506145626000830184614092565b92915050565b600060208201905061457d60008301846140a1565b92915050565b600060208201905061459860008301846140b0565b92915050565b60006020820190506145b360008301846140bf565b92915050565b600060208201905081810360008301526145d2816140ec565b9050919050565b600060208201905081810360008301526145f28161410f565b9050919050565b6000602082019050818103600083015261461281614132565b9050919050565b6000602082019050818103600083015261463281614155565b9050919050565b6000602082019050818103600083015261465281614178565b9050919050565b600060208201905081810360008301526146728161419b565b9050919050565b60006020820190508181036000830152614692816141be565b9050919050565b600060208201905081810360008301526146b2816141e1565b9050919050565b600060208201905081810360008301526146d281614204565b9050919050565b600060208201905081810360008301526146f281614227565b9050919050565b600060208201905081810360008301526147128161424a565b9050919050565b600060208201905081810360008301526147328161426d565b9050919050565b6000602082019050818103600083015261475281614290565b9050919050565b60006020820190508181036000830152614772816142b3565b9050919050565b600060a08201905061478e600083018461433e565b92915050565b60006020820190506147a96000830184614456565b92915050565b600060c0820190506147c46000830185614456565b6147d160208301846143a6565b9392505050565b6000610100820190506147ee600083018b614456565b6147fb602083018a614456565b6148086040830189614456565b6148156060830188614456565b6148226080830187614456565b61482f60a0830186614456565b61483c60c0830185614456565b61484960e0830184614456565b9998505050505050505050565b60006101408201905061486c600083018d614456565b614879602083018c614456565b614886604083018b614456565b614893606083018a614456565b6148a06080830189614456565b6148ad60a0830188614456565b6148ba60c0830187614456565b6148c760e0830186614456565b6148d5610100830185614456565b6148e36101208301846140ce565b9b9a5050505050505050505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061498082614bcc565b915061498b83614bcc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156149c0576149bf614d3e565b5b828201905092915050565b60006149d682614ba4565b91506149e183614ba4565b9250826149f1576149f0614d6d565b5b828204905092915050565b6000614a0782614bcc565b9150614a1283614bcc565b925082614a2257614a21614d6d565b5b828204905092915050565b6000614a3882614bcc565b9150614a4383614bcc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614a7c57614a7b614d3e565b5b828202905092915050565b6000614a9282614bcc565b9150614a9d83614bcc565b925082821015614ab057614aaf614d3e565b5b828203905092915050565b6000614ac682614bd6565b9150614ad183614bd6565b925082821015614ae457614ae3614d3e565b5b828203905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b6000819050919050565b6000614b3182614b84565b9050919050565b60008115159050919050565b6000819050614b5282615016565b919050565b6000819050614b658261502a565b919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b6000614bf182614bf8565b9050919050565b6000614c0382614b84565b9050919050565b6000614c1582614c1c565b9050919050565b6000614c2782614b84565b9050919050565b6000614c3982614c40565b9050919050565b6000614c4b82614b84565b9050919050565b6000614c5d82614b44565b9050919050565b6000614c6f82614b57565b9050919050565b6000614c89614c8483614dcb565b614aef565b9050919050565b6000614ca3614c9e83614dcb565b614b0f565b9050919050565b6000614cbd614cb883614dcb565b614b1c565b9050919050565b6000614ccf82614bcc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614d0257614d01614d3e565b5b600182019050919050565b6000614d1882614bcc565b9150614d2383614bcc565b925082614d3357614d32614d6d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160001c9050919050565b7f4652414d4520454e442054494d45204e4f542052454143484544000000000000600082015250565b7f4c4f5420494e2050415354000000000000000000000000000000000000000000600082015250565b7f4e4f54204c4f54204f574e455200000000000000000000000000000000000000600082015250565b7f4e4f204f574e4552000000000000000000000000000000000000000000000000600082015250565b7f494e56414c4944204652414d4520505249434500000000000000000000000000600082015250565b7f4c4f5420414c524541445920534554544c454400000000000000000000000000600082015250565b7f505249434520495320544f4f204c4f5700000000000000000000000000000000600082015250565b7f54484953204c4f5420495320494e20412050415354204652414d450000000000600082015250565b7f414c5245414459204f574e455200000000000000000000000000000000000000600082015250565b7f415050524f56454420414d4f554e5420544f4f20534d414c4c00000000000000600082015250565b7f4652414d45204e4f5420434c4f53454400000000000000000000000000000000600082015250565b7f4652414d4520494e205041535400000000000000000000000000000000000000600082015250565b7f4c4f5420494e2050415354204652414d45000000000000000000000000000000600082015250565b7f4669786564506f696e743a204449565f42595f5a45524f000000000000000000600082015250565b6003811061502757615026614d9c565b5b50565b6003811061503b5761503a614d9c565b5b50565b61504781614b26565b811461505257600080fd5b50565b61505e81614b38565b811461506957600080fd5b50565b61507581614b6a565b811461508057600080fd5b50565b61508c81614bcc565b811461509757600080fd5b50565b6150a381614bd6565b81146150ae57600080fd5b5056fea2646970667358221220a69a5c580305c28d4490cfad717b5c9a9f000750ae43f3cfee4af82739bc7ca264736f6c63430008040033a2646970667358221220203898612f890410fb226a940d835ab134783542a9bba862634a94c82556101c64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F4F CODESIZE SUB DUP1 PUSH2 0x5F4F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0x129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEE DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 DUP3 PUSH2 0x109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132 DUP2 PUSH2 0xF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E00 DUP1 PUSH2 0x14F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AFC618 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x27FA35C3 EQ PUSH3 0x8F JUMPI DUP1 PUSH4 0x46A81C00 EQ PUSH3 0xB1 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x8E8F294B EQ PUSH3 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x400 JUMP JUMPDEST PUSH3 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x99 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0x4F0 JUMP JUMPDEST PUSH3 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF1 PUSH3 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x143 SWAP2 SWAP1 PUSH3 0x3D4 JUMP JUMPDEST PUSH3 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x158 SWAP2 SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH3 0x17C SWAP1 PUSH3 0x36A JUMP JUMPDEST PUSH3 0x192 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x553E DUP1 PUSH3 0x88D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x389 DUP2 PUSH3 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3A0 DUP2 PUSH3 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3B7 DUP2 PUSH3 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3CE DUP2 PUSH3 0x872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3F7 DUP5 DUP3 DUP6 ADD PUSH3 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x431 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH3 0x444 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x457 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x46A DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x47D DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x490 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x4A3 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x4B6 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x4CA DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x4DE DUP14 DUP3 DUP15 ADD PUSH3 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x513 DUP5 DUP3 DUP6 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x527 DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x538 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x549 DUP2 PUSH3 0x748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x55A DUP2 PUSH3 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x56B DUP2 PUSH3 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x57C DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x58D DUP2 PUSH3 0x7E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x59E DUP2 PUSH3 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x5AF DUP2 PUSH3 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x54F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH3 0x607 PUSH1 0x0 DUP4 ADD DUP15 PUSH3 0x571 JUMP JUMPDEST PUSH3 0x616 PUSH1 0x20 DUP4 ADD DUP14 PUSH3 0x53E JUMP JUMPDEST PUSH3 0x625 PUSH1 0x40 DUP4 ADD DUP13 PUSH3 0x560 JUMP JUMPDEST PUSH3 0x634 PUSH1 0x60 DUP4 ADD DUP12 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x643 PUSH1 0x80 DUP4 ADD DUP11 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x652 PUSH1 0xA0 DUP4 ADD DUP10 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x661 PUSH1 0xC0 DUP4 ADD DUP9 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x670 PUSH1 0xE0 DUP4 ADD DUP8 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x680 PUSH2 0x100 DUP4 ADD DUP7 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x690 PUSH2 0x120 DUP4 ADD DUP6 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x6A0 PUSH2 0x140 DUP4 ADD DUP5 PUSH3 0x52D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F7 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x755 DUP3 PUSH3 0x75C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x769 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x77D DUP3 PUSH3 0x784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x791 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A5 DUP3 PUSH3 0x7AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B9 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CD DUP3 PUSH3 0x7D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7E1 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F5 DUP3 PUSH3 0x7FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x809 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x81D DUP3 PUSH3 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82F DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP2 EQ PUSH3 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x849 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP2 EQ PUSH3 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x863 DUP2 PUSH3 0x72A JUMP JUMPDEST DUP2 EQ PUSH3 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x87D DUP2 PUSH3 0x734 JUMP JUMPDEST DUP2 EQ PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x553E CODESIZE SUB DUP1 PUSH3 0x553E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST DUP10 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x204 DUP2 PUSH3 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21B DUP2 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x42D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP15 DUP3 DUP16 ADD PUSH3 0x20A JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH3 0x27E DUP15 DUP3 DUP16 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH3 0x291 DUP15 DUP3 DUP16 ADD PUSH3 0x1F3 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH3 0x2A4 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH3 0x2B7 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH3 0x2CA DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH3 0x2DD DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH3 0x2F0 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH3 0x304 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 PUSH3 0x318 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x140 PUSH3 0x32C DUP15 DUP3 DUP16 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34C DUP3 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36C DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x380 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x394 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D0 DUP2 PUSH3 0x353 JUMP JUMPDEST DUP2 EQ PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA DUP2 PUSH3 0x35F JUMP JUMPDEST DUP2 EQ PUSH3 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x404 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP2 EQ PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x387 JUMP JUMPDEST DUP2 EQ PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x438 DUP2 PUSH3 0x3BB JUMP JUMPDEST DUP2 EQ PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50E7 DUP1 PUSH3 0x457 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E996639 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6F8 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x650 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x5AF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x8F9ECA82 EQ PUSH2 0x527 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x49D JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3BF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x335 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x3DF7 JUMP JUMPDEST PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x4509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x454D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH2 0x1EBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x220F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x22C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x22DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x658 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x459E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x284A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH2 0x286A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x4568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E2 PUSH2 0x2890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x700 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 GT PUSH2 0x916 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x85A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x902 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x90E SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7FC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x929 DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x969 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH2 0x952 DUP10 PUSH2 0x1E84 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x977 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x989 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x998 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x9B9 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0x45D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC2 SWAP1 PUSH2 0x46B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD7 DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDCA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 PUSH2 0xE06 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE4 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x10F9 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11D0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x122F SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1295 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B9 DUP3 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x12F3 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x1358 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 DUP4 SWAP1 SHL PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 DUP5 SWAP1 SHR PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x1477 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14C6 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST DUP3 PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1532 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15AF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x159C PUSH2 0x3C64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1594 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15BA PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x1924 JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15FF JUMPI PUSH1 0x32 DUP2 PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP PUSH2 0x161B JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x160D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16B1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1911 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x190F JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1741 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x185C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18FC JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18D4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18EA SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x18FB JUMPI PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1907 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16BA JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x191C SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15C3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C57 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x194D SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1988 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19E4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C42 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A74 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x7D0 DUP5 LT PUSH2 0x1BDB JUMPI PUSH2 0x1C42 JUMP JUMPDEST DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C2B SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1C3A SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19ED JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4F SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x192C JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C69 PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D92 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1E78 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1E64 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1E97 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x1EA8 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x1EB2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x1EE2 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x201B JUMPI PUSH2 0x1F14 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x202C SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x2036 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x20CB JUMPI PUSH2 0x2067 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP JUMPDEST JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x21A3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x221B DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2226 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225F SWAP1 PUSH2 0x4699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2273 DUP6 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2281 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22CE DUP2 PUSH2 0x2FFD JUMP JUMPDEST PUSH2 0x22D7 DUP2 PUSH2 0x36A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x22F1 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23AE SWAP1 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23C0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F9 SWAP1 PUSH2 0x4739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2446 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2653 JUMPI DUP1 DUP3 PUSH2 0x245C SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B9 SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2509 SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0x254A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2541 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2596 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2606 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x2613 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2634 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x275F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x275E JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x26A6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C3 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2722 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2743 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP5 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2796 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x27ED SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x28AC TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x28B6 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x28C0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xD SLOAD PUSH2 0x28D4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28DE SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP6 PUSH2 0x28F2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28FC SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP3 POP PUSH1 0xD SLOAD DUP2 DUP5 PUSH2 0x290D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2917 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x2920 DUP7 PUSH2 0x3B30 JUMP JUMPDEST DUP5 PUSH2 0x292B SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2935 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x294B DUP4 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2987 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29E3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29F1 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x29FA TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A33 SWAP1 PUSH2 0x4719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2AB7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFB DUP4 DUP4 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B39 SWAP1 PUSH2 0x4679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B53 DUP4 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2BFF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2C0D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2CAD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2CF0 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2D30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D27 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x2D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D96 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DAF PUSH2 0x3B6C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E2F SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F34 SWAP2 SWAP1 PUSH2 0x3E5C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x2FF3 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x2F5B SWAP2 SWAP1 PUSH2 0x4ABB JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F6E DUP5 DUP7 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F9A SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP8 PUSH2 0x2FA5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2FB8 DUP6 DUP6 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FE4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP7 PUSH2 0x2FEF SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x3006 DUP2 PUSH2 0x2CB3 JUMP JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP3 PUSH2 0x3015 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST GT ISZERO PUSH2 0x3056 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304D SWAP1 PUSH2 0x45B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x30B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x30F5 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x31BC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3150 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x315A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x3200 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x320A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHL PUSH2 0x32A3 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHR PUSH2 0x32CB SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x32D5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3319 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3323 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x334F SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3359 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x337E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3388 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3421 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x343B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x344F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3473 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x352E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3552 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3570 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35C2 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x369A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x36E1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x377D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3774 SWAP1 PUSH2 0x46F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x379E PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x37D9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3849 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x388A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3881 SWAP1 PUSH2 0x4659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393B SWAP1 PUSH2 0x4619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A01 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A53 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3AC8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3B24 SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3B TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3B4B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B67 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3B64 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3B7F SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B8C PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3BDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BD6 SWAP1 PUSH2 0x4759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3C3B SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3CDB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D21 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D36 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D4B DUP2 PUSH2 0x5055 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D60 DUP2 PUSH2 0x506C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D75 DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D8A DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D9F DUP2 PUSH2 0x509A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DC5 DUP5 DUP3 DUP6 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DEE DUP5 DUP3 DUP6 ADD PUSH2 0x3D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E18 DUP6 DUP3 DUP7 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E29 DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E53 DUP5 DUP3 DUP6 ADD PUSH2 0x3D3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E7F DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E90 DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3EA1 DUP7 DUP3 DUP8 ADD PUSH2 0x3D90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ECB DUP5 DUP3 DUP6 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP5 DUP3 DUP6 ADD PUSH2 0x3D7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F1E DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F2F DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F5C DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3F6D DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3F7E DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F94 DUP4 DUP4 PUSH2 0x42D6 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAC DUP4 DUP4 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FC1 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3FD0 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP3 PUSH2 0x4912 JUMP JUMPDEST PUSH2 0x3FEB DUP2 DUP6 PUSH2 0x4942 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FF6 DUP4 PUSH2 0x48F2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4027 JUMPI DUP2 MLOAD PUSH2 0x400E DUP9 DUP3 PUSH2 0x3F88 JUMP JUMPDEST SWAP8 POP PUSH2 0x4019 DUP4 PUSH2 0x4928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FFA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x403F DUP3 PUSH2 0x491D JUMP JUMPDEST PUSH2 0x4049 DUP2 DUP6 PUSH2 0x4953 JUMP JUMPDEST SWAP4 POP PUSH2 0x4054 DUP4 PUSH2 0x4902 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4085 JUMPI DUP2 MLOAD PUSH2 0x406C DUP9 DUP3 PUSH2 0x3FA0 JUMP JUMPDEST SWAP8 POP PUSH2 0x4077 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4058 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x409B DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40AA DUP2 PUSH2 0x4BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40B9 DUP2 PUSH2 0x4C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40C8 DUP2 PUSH2 0x4C2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40D7 DUP2 PUSH2 0x4C52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40E6 DUP2 PUSH2 0x4C64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F9 PUSH1 0x1A DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4104 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411C PUSH1 0xB DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4127 DUP3 PUSH2 0x4E01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413F PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x414A DUP3 PUSH2 0x4E2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4162 PUSH1 0x8 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x416D DUP3 PUSH2 0x4E53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4185 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4190 DUP3 PUSH2 0x4E7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A8 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 DUP3 PUSH2 0x4EA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41CB PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D6 DUP3 PUSH2 0x4ECE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EE PUSH1 0x1B DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41F9 DUP3 PUSH2 0x4EF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4211 PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x421C DUP3 PUSH2 0x4F20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4234 PUSH1 0x19 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x423F DUP3 PUSH2 0x4F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4262 DUP3 PUSH2 0x4F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427A PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4285 DUP3 PUSH2 0x4F9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429D PUSH1 0x11 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A8 DUP3 PUSH2 0x4FC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C0 PUSH1 0x17 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42CB DUP3 PUSH2 0x4FED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x42EC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x42FF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4312 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4325 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4338 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4354 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4367 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x437A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x438D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x43A0 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43BB DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43C8 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43D9 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43E6 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43F7 DUP2 PUSH2 0x4C76 JUMP JUMPDEST PUSH2 0x4404 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4415 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x4422 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4433 DUP2 PUSH2 0x4C90 JUMP JUMPDEST PUSH2 0x4440 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4450 DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x445F DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x447A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4495 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44BE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44F5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x4502 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4523 DUP2 DUP5 PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4545 DUP2 DUP5 PUSH2 0x4034 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4562 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x457D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4598 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45D2 DUP2 PUSH2 0x40EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45F2 DUP2 PUSH2 0x410F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4612 DUP2 PUSH2 0x4132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4632 DUP2 PUSH2 0x4155 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4652 DUP2 PUSH2 0x4178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4672 DUP2 PUSH2 0x419B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4692 DUP2 PUSH2 0x41BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46B2 DUP2 PUSH2 0x41E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46D2 DUP2 PUSH2 0x4204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F2 DUP2 PUSH2 0x4227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4712 DUP2 PUSH2 0x424A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4732 DUP2 PUSH2 0x426D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4752 DUP2 PUSH2 0x4290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4772 DUP2 PUSH2 0x42B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x478E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x433E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x47C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x47EE PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47FB PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4808 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4815 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4822 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x482F PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x483C PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4849 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x486C PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4879 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4886 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4893 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48A0 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48AD PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48BA PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48C7 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48D5 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48E3 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x40CE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4980 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x498B DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x49C0 JUMPI PUSH2 0x49BF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D6 DUP3 PUSH2 0x4BA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E1 DUP4 PUSH2 0x4BA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49F1 JUMPI PUSH2 0x49F0 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A07 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A12 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4A22 JUMPI PUSH2 0x4A21 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A38 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A43 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A7C JUMPI PUSH2 0x4A7B PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A92 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9D DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AB0 JUMPI PUSH2 0x4AAF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC6 DUP3 PUSH2 0x4BD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD1 DUP4 PUSH2 0x4BD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AE4 JUMPI PUSH2 0x4AE3 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B31 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B52 DUP3 PUSH2 0x5016 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B65 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF1 DUP3 PUSH2 0x4BF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C03 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C15 DUP3 PUSH2 0x4C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C27 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4B DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5D DUP3 PUSH2 0x4B44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6F DUP3 PUSH2 0x4B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C89 PUSH2 0x4C84 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA3 PUSH2 0x4C9E DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CBD PUSH2 0x4CB8 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCF DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4D02 JUMPI PUSH2 0x4D01 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D18 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4D23 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D33 JUMPI PUSH2 0x4D32 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x5027 JUMPI PUSH2 0x5026 PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x503B JUMPI PUSH2 0x503A PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5047 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP2 EQ PUSH2 0x5052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x505E DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP2 EQ PUSH2 0x5069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5075 DUP2 PUSH2 0x4B6A JUMP JUMPDEST DUP2 EQ PUSH2 0x5080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x508C DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP2 EQ PUSH2 0x5097 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50A3 DUP2 PUSH2 0x4BD6 JUMP JUMPDEST DUP2 EQ PUSH2 0x50AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SWAP11 0x5C PC SUB SDIV 0xC2 DUP14 DIFFICULTY SWAP1 0xCF 0xAD PUSH18 0x7B5C9A9F000750AE43F3CFEE4AF82739BC7C LOG2 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 CODESIZE SWAP9 PUSH2 0x2F89 DIV LT 0xFB 0x22 PUSH11 0x940D835AB134783542A9BB 0xA8 PUSH3 0x634A94 0xC8 0x25 JUMP LT SHR PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "283:909:7:-:0;;;473:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;529:10;521:5;;:18;;;;;;;;;;;;;;;;;;585:15;550:14;;:51;;;;;;;;;;;;;;;;;;473:136;283:909;;7:143:8;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;283:909:7:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:9170:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "201:84:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "211:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "233:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "220:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "220:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "249:30:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "179:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "187:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "195:5:8",
                            "type": ""
                          }
                        ],
                        "src": "152:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "343:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "353:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "375:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "391:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "321:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "329:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "337:5:8",
                            "type": ""
                          }
                        ],
                        "src": "291:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "487:86:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "497:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "519:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "506:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "506:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "497:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "561:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "535:25:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "535:32:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "535:32:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "465:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "473:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "481:5:8",
                            "type": ""
                          }
                        ],
                        "src": "436:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "645:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "691:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "700:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "703:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "693:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "693:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "693:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "666:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "675:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "662:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "662:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "687:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "658:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "658:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "655:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "717:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "732:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "746:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "736:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "761:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "796:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "807:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "792:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "792:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "816:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "771:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "771:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "761:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "615:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "626:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "638:6:8",
                            "type": ""
                          }
                        ],
                        "src": "579:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1060:1349:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1107:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1116:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1119:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1109:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1109:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1109:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1090:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1077:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1077:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1102:3:8",
                                    "type": "",
                                    "value": "320"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1073:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1073:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1070:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1133:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1148:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1162:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1152:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1177:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1212:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1223:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1208:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1208:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1232:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1187:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1187:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1177:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1260:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1275:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1289:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1279:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1305:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1340:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1351:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1336:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1336:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1360:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1315:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1315:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1305:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1388:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1403:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1417:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1407:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1433:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1467:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1478:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1463:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1463:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1487:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "1443:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1443:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1433:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1515:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1530:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1544:2:8",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1534:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1560:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1594:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1605:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1590:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1590:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1614:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "1570:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1570:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1560:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1642:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1657:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1671:3:8",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1661:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1688:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1723:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1734:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1719:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1719:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1743:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1698:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1698:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1688:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1771:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1786:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1800:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1790:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1817:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1852:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1863:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1848:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1848:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1872:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1827:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1827:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "1817:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1900:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1915:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1929:3:8",
                                    "type": "",
                                    "value": "192"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1919:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1946:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1981:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1992:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1977:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1977:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2001:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1956:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1956:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value6",
                                      "nodeType": "YulIdentifier",
                                      "src": "1946:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2029:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2044:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2058:3:8",
                                    "type": "",
                                    "value": "224"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2048:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2075:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2109:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2120:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2105:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2105:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2129:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "2085:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2085:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2075:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2157:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2172:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2186:3:8",
                                    "type": "",
                                    "value": "256"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2176:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2203:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2238:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2249:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2234:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2234:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2258:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2213:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2213:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2203:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2286:116:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2301:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2315:3:8",
                                    "type": "",
                                    "value": "288"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2305:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2332:60:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2364:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2375:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2360:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2360:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2384:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "2342:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2342:50:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value9",
                                      "nodeType": "YulIdentifier",
                                      "src": "2332:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint64t_uint64t_uint256t_uint256t_uint256t_uint64t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "958:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "969:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "981:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "989:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "997:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1005:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1013:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1021:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "1029:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "1037:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "1045:6:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "1053:6:8",
                            "type": ""
                          }
                        ],
                        "src": "847:1562:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2481:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2527:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2536:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2539:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2529:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2529:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2529:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2502:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2511:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2498:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2498:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2523:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2494:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2494:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2491:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2553:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2568:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2582:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2572:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2597:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2632:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2643:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2628:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2628:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2652:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2607:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2607:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2597:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2451:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2462:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2474:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2415:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2748:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2765:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2788:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2770:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2770:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2758:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2758:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2758:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2736:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2743:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2683:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2866:50:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2883:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2903:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "2888:14:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2888:21:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2876:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2876:34:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2876:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2854:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2861:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2807:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3000:79:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3017:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3066:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$77_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3022:43:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3022:50:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3010:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3010:63:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3010:63:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2988:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2995:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2922:157:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3175:91:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3192:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3253:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3197:55:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3197:62:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3185:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3185:75:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3185:75:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3163:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3170:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3085:181:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3359:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3376:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3434:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3381:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3381:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3369:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3369:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3347:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3354:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3272:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3540:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3557:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3615:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_MarketFactory_$2865_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3562:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3562:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3550:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3550:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3550:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3528:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3535:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3453:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3714:81:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3731:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3782:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_Market_$2754_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3736:45:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3736:52:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3724:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3724:65:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3724:65:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_Market_$2754_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3702:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3709:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3634:161:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3866:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3883:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3906:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3888:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3888:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3876:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3876:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3876:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3854:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3861:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3801:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3989:65:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4006:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4041:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_uint64_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4011:29:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4011:36:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3999:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3999:49:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3999:49:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3977:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3984:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3925:129:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4158:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4168:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4180:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4191:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4176:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4176:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4168:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4248:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4261:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4272:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4257:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4257:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4204:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4204:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4204:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4130:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4142:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4153:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4060:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4411:149:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4421:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4433:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4444:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4429:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4429:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4421:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4526:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4539:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4550:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4535:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4535:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4457:68:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4457:96:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4457:96:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$326__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4383:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4395:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4406:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4288:272:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4993:1001:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5003:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5015:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5026:3:8",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5011:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5011:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5003:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5106:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5119:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5130:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5115:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5115:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5040:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5040:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5040:93:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5200:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5213:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5224:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5209:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5209:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5143:56:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5143:85:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5143:85:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5304:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5317:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5328:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5313:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5313:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5238:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5238:94:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5238:94:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5385:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5398:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5409:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5394:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5394:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5342:42:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5342:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5342:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5466:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5479:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5490:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5475:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5475:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5423:42:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5423:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5423:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "5549:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5562:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5573:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5558:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5558:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5505:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5505:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5505:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "5632:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5645:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5656:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5641:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5641:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5588:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5588:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5588:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5715:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5728:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5739:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5724:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5724:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5671:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5671:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5671:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5797:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5810:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5821:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5806:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5806:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5754:42:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5754:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5754:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "5880:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5893:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5904:3:8",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5889:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5889:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5836:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5836:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5836:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5957:7:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5971:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5982:3:8",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5967:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5967:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5919:37:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5919:68:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5919:68:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_MarketFactory_$2865_t_contract$_IERC20_$77_t_contract$_IUniswapV2Pair_$568_t_uint64_t_uint64_t_uint256_t_uint256_t_uint256_t_uint64_t_uint256_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4884:9:8",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "4896:7:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "4905:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "4913:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "4921:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "4929:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "4937:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4945:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4953:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4961:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4969:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4977:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4988:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4566:1428:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6113:139:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6123:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6135:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6146:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6131:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6131:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6123:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6218:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6231:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6242:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6227:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6227:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_Market_$2754_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6159:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6159:86:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6159:86:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_Market_$2754__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6085:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6097:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6108:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6000:252:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6356:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6366:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6378:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6389:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6374:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6374:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6366:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6446:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6459:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6470:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6455:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6455:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6402:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6402:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6402:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6328:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6340:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6351:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6258:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6531:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6541:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6570:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6552:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6552:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6541:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6513:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6523:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6486:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6630:48:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6640:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6665:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6658:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6658:13:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6651:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6651:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6640:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6612:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6622:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6588:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6729:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6739:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6754:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6761:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6750:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6750:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6739:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6711:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6721:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6684:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6861:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6871:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6882:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6871:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6843:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6853:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6816:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6943:57:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6953:41:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6968:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6975:18:8",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6964:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6964:30:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6953:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6925:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6935:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6899:101:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7079:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7089:63:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7146:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7102:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7102:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7089:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7059:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7069:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7006:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7237:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7247:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7278:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7260:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7260:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7247:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7217:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7227:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7164:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7381:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7391:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7460:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7404:55:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7404:62:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7391:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7361:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7371:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7296:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7563:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7573:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7604:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7586:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7586:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7573:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7543:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7553:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7478:138:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7704:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7714:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7780:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7727:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7727:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7714:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7684:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7694:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7622:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7880:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7890:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7921:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7903:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7903:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7890:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7860:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7870:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7798:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8021:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8031:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8097:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_MarketFactory_$2865_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8044:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8044:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8031:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2865_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8001:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8011:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7939:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8197:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8207:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8238:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8220:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8220:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8207:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2865_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8177:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8187:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8115:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8331:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8341:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8400:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_Market_$2754_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8354:45:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8354:52:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8341:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Market_$2754_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8311:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8321:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8256:156:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8493:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8503:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8534:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8516:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8516:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8503:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Market_$2754_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8473:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8483:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8418:128:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8611:52:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8621:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8651:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "8634:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8634:23:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8621:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint64_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8591:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8601:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8552:111:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8712:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8769:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8778:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8781:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8771:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8771:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8771:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8735:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8760:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "8742:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8742:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8732:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8732:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8725:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8725:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8722:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8705:5:8",
                            "type": ""
                          }
                        ],
                        "src": "8669:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8837:76:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8891:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8900:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8903:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8893:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8893:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8893:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8860:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8882:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "8867:14:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8867:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8857:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8857:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8850:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8850:40:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8847:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8830:5:8",
                            "type": ""
                          }
                        ],
                        "src": "8797:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8962:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9019:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9028:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9031:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9021:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9021:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9021:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8985:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9010:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "8992:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8992:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8982:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8982:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8975:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8975:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8972:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8955:5:8",
                            "type": ""
                          }
                        ],
                        "src": "8919:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9089:78:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9145:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9154:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9157:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9147:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9147:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9147:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "9112:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9136:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint64",
                                          "nodeType": "YulIdentifier",
                                          "src": "9119:16:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9119:23:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "9109:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9109:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9102:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9102:42:8"
                              },
                              "nodeType": "YulIf",
                              "src": "9099:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9082:5:8",
                            "type": ""
                          }
                        ],
                        "src": "9047:120:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint64t_uint64t_uint256t_uint256t_uint256t_uint64t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9 {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Factory_$326_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MarketFactory_$2865_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Market_$2754_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Market_$2754_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$326__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_MarketFactory_$2865_t_contract$_IERC20_$77_t_contract$_IUniswapV2Pair_$568_t_uint64_t_uint64_t_uint256_t_uint256_t_uint256_t_uint64_t_uint256_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_contract$_MarketFactory_$2865_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Market_$2754__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Market_$2754_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$326_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2865_to_t_address(value) -> converted {\n        converted := convert_t_contract$_MarketFactory_$2865_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2865_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Market_$2754_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Market_$2754_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Market_$2754_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint64(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AFC618 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x27FA35C3 EQ PUSH3 0x8F JUMPI DUP1 PUSH4 0x46A81C00 EQ PUSH3 0xB1 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x8E8F294B EQ PUSH3 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x400 JUMP JUMPDEST PUSH3 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x99 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0x4F0 JUMP JUMPDEST PUSH3 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF1 PUSH3 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x143 SWAP2 SWAP1 PUSH3 0x3D4 JUMP JUMPDEST PUSH3 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x158 SWAP2 SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH3 0x17C SWAP1 PUSH3 0x36A JUMP JUMPDEST PUSH3 0x192 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x553E DUP1 PUSH3 0x88D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x389 DUP2 PUSH3 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3A0 DUP2 PUSH3 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3B7 DUP2 PUSH3 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3CE DUP2 PUSH3 0x872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3F7 DUP5 DUP3 DUP6 ADD PUSH3 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x431 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH3 0x444 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x457 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x46A DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x47D DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x490 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x4A3 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x4B6 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x4CA DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x4DE DUP14 DUP3 DUP15 ADD PUSH3 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x513 DUP5 DUP3 DUP6 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x527 DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x538 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x549 DUP2 PUSH3 0x748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x55A DUP2 PUSH3 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x56B DUP2 PUSH3 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x57C DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x58D DUP2 PUSH3 0x7E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x59E DUP2 PUSH3 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x5AF DUP2 PUSH3 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x54F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH3 0x607 PUSH1 0x0 DUP4 ADD DUP15 PUSH3 0x571 JUMP JUMPDEST PUSH3 0x616 PUSH1 0x20 DUP4 ADD DUP14 PUSH3 0x53E JUMP JUMPDEST PUSH3 0x625 PUSH1 0x40 DUP4 ADD DUP13 PUSH3 0x560 JUMP JUMPDEST PUSH3 0x634 PUSH1 0x60 DUP4 ADD DUP12 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x643 PUSH1 0x80 DUP4 ADD DUP11 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x652 PUSH1 0xA0 DUP4 ADD DUP10 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x661 PUSH1 0xC0 DUP4 ADD DUP9 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x670 PUSH1 0xE0 DUP4 ADD DUP8 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x680 PUSH2 0x100 DUP4 ADD DUP7 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x690 PUSH2 0x120 DUP4 ADD DUP6 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x6A0 PUSH2 0x140 DUP4 ADD DUP5 PUSH3 0x52D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F7 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x755 DUP3 PUSH3 0x75C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x769 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x77D DUP3 PUSH3 0x784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x791 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A5 DUP3 PUSH3 0x7AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B9 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CD DUP3 PUSH3 0x7D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7E1 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F5 DUP3 PUSH3 0x7FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x809 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x81D DUP3 PUSH3 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82F DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP2 EQ PUSH3 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x849 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP2 EQ PUSH3 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x863 DUP2 PUSH3 0x72A JUMP JUMPDEST DUP2 EQ PUSH3 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x87D DUP2 PUSH3 0x734 JUMP JUMPDEST DUP2 EQ PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x553E CODESIZE SUB DUP1 PUSH3 0x553E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST DUP10 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x204 DUP2 PUSH3 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21B DUP2 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x42D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP15 DUP3 DUP16 ADD PUSH3 0x20A JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH3 0x27E DUP15 DUP3 DUP16 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH3 0x291 DUP15 DUP3 DUP16 ADD PUSH3 0x1F3 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH3 0x2A4 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH3 0x2B7 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH3 0x2CA DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH3 0x2DD DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH3 0x2F0 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH3 0x304 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 PUSH3 0x318 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x140 PUSH3 0x32C DUP15 DUP3 DUP16 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34C DUP3 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36C DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x380 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x394 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D0 DUP2 PUSH3 0x353 JUMP JUMPDEST DUP2 EQ PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA DUP2 PUSH3 0x35F JUMP JUMPDEST DUP2 EQ PUSH3 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x404 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP2 EQ PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x387 JUMP JUMPDEST DUP2 EQ PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x438 DUP2 PUSH3 0x3BB JUMP JUMPDEST DUP2 EQ PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50E7 DUP1 PUSH3 0x457 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E996639 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6F8 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x650 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x5AF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x8F9ECA82 EQ PUSH2 0x527 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x49D JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3BF JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x335 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x3DF7 JUMP JUMPDEST PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x4509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x454D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x452B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH2 0x1EBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x220F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x22C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x3F39 JUMP JUMPDEST PUSH2 0x22DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x658 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x459E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x284A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH2 0x286A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x4568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E2 PUSH2 0x2890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x700 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x4794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 GT PUSH2 0x916 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x85A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x902 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x90E SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7FC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x929 DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x969 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH2 0x952 DUP10 PUSH2 0x1E84 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x977 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x989 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x998 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x9B9 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0x45D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC2 SWAP1 PUSH2 0x46B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD7 DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDCA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 PUSH2 0xE06 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE4 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x10F9 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11D0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x122F SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1295 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B9 DUP3 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x12F3 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x1358 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 DUP4 SWAP1 SHL PUSH2 0x145B SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 DUP5 SWAP1 SHR PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x1477 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14C6 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST DUP3 PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1532 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15AF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x159C PUSH2 0x3C64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1594 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15BA PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x1924 JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15FF JUMPI PUSH1 0x32 DUP2 PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP PUSH2 0x161B JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x160D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16B1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1911 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x190F JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1741 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x185C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18FC JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18D4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18EA SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x18FB JUMPI PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1907 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16BA JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x191C SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15C3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C57 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP6 PUSH2 0x194D SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1988 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19E4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C42 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A74 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x7D0 DUP5 LT PUSH2 0x1BDB JUMPI PUSH2 0x1C42 JUMP JUMPDEST DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C2B SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1C3A SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19ED JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4F SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x192C JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C69 PUSH2 0x3C64 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D5A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D92 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1E78 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1E64 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1E97 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x1EA8 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x1EB2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x1EE2 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x201B JUMPI PUSH2 0x1F14 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP3 PUSH2 0x202C SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x2036 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x20CB JUMPI PUSH2 0x2067 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA2 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP7 SWAP2 SWAP1 POP SSTORE DUP6 SWAP2 SWAP1 POP SSTORE DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP JUMPDEST JUMPDEST PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x21A3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x221B DUP6 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2226 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225F SWAP1 PUSH2 0x4699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2273 DUP6 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2281 DUP4 DUP7 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22CE DUP2 PUSH2 0x2FFD JUMP JUMPDEST PUSH2 0x22D7 DUP2 PUSH2 0x36A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP1 POP PUSH2 0x22F1 DUP2 DUP4 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP3 DUP6 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23AE SWAP1 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23C0 TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F9 SWAP1 PUSH2 0x4739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP4 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2446 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x289C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2653 JUMPI DUP1 DUP3 PUSH2 0x245C SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B9 SWAP3 SWAP2 SWAP1 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2509 SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST LT ISZERO PUSH2 0x254A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2541 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2596 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2606 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x2613 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2634 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x275F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x275E JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x26A6 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C3 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2722 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2743 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP5 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2796 PUSH2 0x1EBA JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x27ED SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x28AC TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x28B6 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH2 0x28C0 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xD SLOAD PUSH2 0x28D4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28DE SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP6 PUSH2 0x28F2 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x28FC SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP3 POP PUSH1 0xD SLOAD DUP2 DUP5 PUSH2 0x290D SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2917 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH2 0x2920 DUP7 PUSH2 0x3B30 JUMP JUMPDEST DUP5 PUSH2 0x292B SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x2935 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x294B DUP4 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2987 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29E3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29F1 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x29FA TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A33 SWAP1 PUSH2 0x4719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2AB7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFB DUP4 DUP4 PUSH2 0x289C JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B39 SWAP1 PUSH2 0x4679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B53 DUP4 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2BFF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2C0D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2CAD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2CF0 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2D30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D27 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x2D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D96 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DAF PUSH2 0x3B6C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E2F SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x3ED4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F34 SWAP2 SWAP1 PUSH2 0x3E5C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x2FF3 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x2F5B SWAP2 SWAP1 PUSH2 0x4ABB JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F6E DUP5 DUP7 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F9A SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP8 PUSH2 0x2FA5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2FB8 DUP6 DUP6 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FE4 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST DUP7 PUSH2 0x2FEF SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x3006 DUP2 PUSH2 0x2CB3 JUMP JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP3 PUSH2 0x3015 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST GT ISZERO PUSH2 0x3056 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304D SWAP1 PUSH2 0x45B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x30B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x30F5 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x31BC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3150 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x315A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x3200 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x320A SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHL PUSH2 0x32A3 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x70 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SHR PUSH2 0x32CB SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x32D5 SWAP2 SWAP1 PUSH2 0x4975 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3319 SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3323 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x334F SWAP2 SWAP1 PUSH2 0x4A2D JUMP JUMPDEST PUSH2 0x3359 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x337E SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3388 SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3421 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x343B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x344F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3473 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x352E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3552 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3570 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35C2 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH32 0xF733BD7F4402CB7D331B34D5CD22F432B9BF71A833F786974545860D74976AF2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x369A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x36E1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x377D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3774 SWAP1 PUSH2 0x46F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x379E PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x37D9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3849 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x388A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3881 SWAP1 PUSH2 0x4659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393B SWAP1 PUSH2 0x4619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A01 SWAP3 SWAP2 SWAP1 PUSH2 0x44E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A53 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3AC8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3B24 SWAP3 SWAP2 SWAP1 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3B TIMESTAMP PUSH2 0x14B1 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3B4B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B67 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4A87 JUMP JUMPDEST PUSH2 0x3B64 SWAP2 SWAP1 PUSH2 0x49FC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3B7F SWAP2 SWAP1 PUSH2 0x4D0D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B8C PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3BDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BD6 SWAP1 PUSH2 0x4759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3C3B SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3CDB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D21 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D36 DUP2 PUSH2 0x503E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D4B DUP2 PUSH2 0x5055 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D60 DUP2 PUSH2 0x506C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D75 DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D8A DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D9F DUP2 PUSH2 0x509A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DC5 DUP5 DUP3 DUP6 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DEE DUP5 DUP3 DUP6 ADD PUSH2 0x3D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E18 DUP6 DUP3 DUP7 ADD PUSH2 0x3D12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E29 DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E53 DUP5 DUP3 DUP6 ADD PUSH2 0x3D3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E7F DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E90 DUP7 DUP3 DUP8 ADD PUSH2 0x3D51 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3EA1 DUP7 DUP3 DUP8 ADD PUSH2 0x3D90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ECB DUP5 DUP3 DUP6 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP5 DUP3 DUP6 ADD PUSH2 0x3D7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F1E DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F2F DUP6 DUP3 DUP7 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F5C DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3F6D DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3F7E DUP7 DUP3 DUP8 ADD PUSH2 0x3D66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F94 DUP4 DUP4 PUSH2 0x42D6 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAC DUP4 DUP4 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FC1 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3FD0 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP3 PUSH2 0x4912 JUMP JUMPDEST PUSH2 0x3FEB DUP2 DUP6 PUSH2 0x4942 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FF6 DUP4 PUSH2 0x48F2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4027 JUMPI DUP2 MLOAD PUSH2 0x400E DUP9 DUP3 PUSH2 0x3F88 JUMP JUMPDEST SWAP8 POP PUSH2 0x4019 DUP4 PUSH2 0x4928 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FFA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x403F DUP3 PUSH2 0x491D JUMP JUMPDEST PUSH2 0x4049 DUP2 DUP6 PUSH2 0x4953 JUMP JUMPDEST SWAP4 POP PUSH2 0x4054 DUP4 PUSH2 0x4902 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4085 JUMPI DUP2 MLOAD PUSH2 0x406C DUP9 DUP3 PUSH2 0x3FA0 JUMP JUMPDEST SWAP8 POP PUSH2 0x4077 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4058 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x409B DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40AA DUP2 PUSH2 0x4BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40B9 DUP2 PUSH2 0x4C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40C8 DUP2 PUSH2 0x4C2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40D7 DUP2 PUSH2 0x4C52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40E6 DUP2 PUSH2 0x4C64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F9 PUSH1 0x1A DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4104 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411C PUSH1 0xB DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4127 DUP3 PUSH2 0x4E01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413F PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x414A DUP3 PUSH2 0x4E2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4162 PUSH1 0x8 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x416D DUP3 PUSH2 0x4E53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4185 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4190 DUP3 PUSH2 0x4E7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A8 PUSH1 0x13 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 DUP3 PUSH2 0x4EA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41CB PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D6 DUP3 PUSH2 0x4ECE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EE PUSH1 0x1B DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x41F9 DUP3 PUSH2 0x4EF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4211 PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x421C DUP3 PUSH2 0x4F20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4234 PUSH1 0x19 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x423F DUP3 PUSH2 0x4F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 PUSH1 0x10 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4262 DUP3 PUSH2 0x4F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427A PUSH1 0xD DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x4285 DUP3 PUSH2 0x4F9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429D PUSH1 0x11 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A8 DUP3 PUSH2 0x4FC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C0 PUSH1 0x17 DUP4 PUSH2 0x4964 JUMP JUMPDEST SWAP2 POP PUSH2 0x42CB DUP3 PUSH2 0x4FED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x42EC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x42FF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4312 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4325 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4338 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4354 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4367 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x437A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x438D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x43A0 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43BB DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43C8 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43D9 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x43E6 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x43F7 DUP2 PUSH2 0x4C76 JUMP JUMPDEST PUSH2 0x4404 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4415 DUP2 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x4422 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4447 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4433 DUP2 PUSH2 0x4C90 JUMP JUMPDEST PUSH2 0x4440 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x40DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4450 DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x445F DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x447A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4495 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44BE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x44D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44F5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x4502 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4523 DUP2 DUP5 PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4545 DUP2 DUP5 PUSH2 0x4034 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4562 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x457D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4598 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45D2 DUP2 PUSH2 0x40EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45F2 DUP2 PUSH2 0x410F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4612 DUP2 PUSH2 0x4132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4632 DUP2 PUSH2 0x4155 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4652 DUP2 PUSH2 0x4178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4672 DUP2 PUSH2 0x419B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4692 DUP2 PUSH2 0x41BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46B2 DUP2 PUSH2 0x41E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46D2 DUP2 PUSH2 0x4204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F2 DUP2 PUSH2 0x4227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4712 DUP2 PUSH2 0x424A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4732 DUP2 PUSH2 0x426D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4752 DUP2 PUSH2 0x4290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4772 DUP2 PUSH2 0x42B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x478E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x433E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x47C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x47EE PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x47FB PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4808 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4815 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4822 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x482F PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x483C PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4849 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4456 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x486C PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4879 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4886 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x4893 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48A0 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48AD PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48BA PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48C7 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48D5 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x4456 JUMP JUMPDEST PUSH2 0x48E3 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x40CE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4980 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x498B DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x49C0 JUMPI PUSH2 0x49BF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D6 DUP3 PUSH2 0x4BA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E1 DUP4 PUSH2 0x4BA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49F1 JUMPI PUSH2 0x49F0 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A07 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A12 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4A22 JUMPI PUSH2 0x4A21 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A38 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A43 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A7C JUMPI PUSH2 0x4A7B PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A92 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9D DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AB0 JUMPI PUSH2 0x4AAF PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC6 DUP3 PUSH2 0x4BD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD1 DUP4 PUSH2 0x4BD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4AE4 JUMPI PUSH2 0x4AE3 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B31 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B52 DUP3 PUSH2 0x5016 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4B65 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF1 DUP3 PUSH2 0x4BF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C03 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C15 DUP3 PUSH2 0x4C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C27 DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4B DUP3 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5D DUP3 PUSH2 0x4B44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6F DUP3 PUSH2 0x4B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C89 PUSH2 0x4C84 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA3 PUSH2 0x4C9E DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CBD PUSH2 0x4CB8 DUP4 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCF DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4D02 JUMPI PUSH2 0x4D01 PUSH2 0x4D3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D18 DUP3 PUSH2 0x4BCC JUMP JUMPDEST SWAP2 POP PUSH2 0x4D23 DUP4 PUSH2 0x4BCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D33 JUMPI PUSH2 0x4D32 PUSH2 0x4D6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x5027 JUMPI PUSH2 0x5026 PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x503B JUMPI PUSH2 0x503A PUSH2 0x4D9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5047 DUP2 PUSH2 0x4B26 JUMP JUMPDEST DUP2 EQ PUSH2 0x5052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x505E DUP2 PUSH2 0x4B38 JUMP JUMPDEST DUP2 EQ PUSH2 0x5069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5075 DUP2 PUSH2 0x4B6A JUMP JUMPDEST DUP2 EQ PUSH2 0x5080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x508C DUP2 PUSH2 0x4BCC JUMP JUMPDEST DUP2 EQ PUSH2 0x5097 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50A3 DUP2 PUSH2 0x4BD6 JUMP JUMPDEST DUP2 EQ PUSH2 0x50AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SWAP11 0x5C PC SUB SDIV 0xC2 DUP14 DIFFICULTY SWAP1 0xCF 0xAD PUSH18 0x7B5C9A9F000750AE43F3CFEE4AF82739BC7C LOG2 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 CODESIZE SWAP9 PUSH2 0x2F89 DIV LT 0xFB 0x22 PUSH11 0x940D835AB134783542A9BB 0xA8 PUSH3 0x634A94 0xC8 0x25 JUMP LT SHR PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "283:909:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:467;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1092:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;315:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;444:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;361:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;617:467;825:13;852:4;865:6;889:12;904:7;913:14;929:4;935;941:7;950:11;963:7;972:15;841:147;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;825:163;;1026:6;999:7;:24;1015:6;999:24;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1043:11;1068:6;1043:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:467;;;;;;;;;;;:::o;1092:97::-;1140:4;1163:11;:18;;;;1156:25;;1092:97;:::o;409:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;315:39::-;;;;;;;;;;;;:::o;444:20::-;;;;;;;;;;;;;:::o;361:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:139::-;337:5;375:6;362:20;353:29;;391:33;418:5;391:33;:::i;:::-;343:87;;;;:::o;436:137::-;481:5;519:6;506:20;497:29;;535:32;561:5;535:32;:::i;:::-;487:86;;;;:::o;579:262::-;638:6;687:2;675:9;666:7;662:23;658:32;655:2;;;703:1;700;693:12;655:2;746:1;771:53;816:7;807:6;796:9;792:22;771:53;:::i;:::-;761:63;;717:117;645:196;;;;:::o;847:1562::-;981:6;989;997;1005;1013;1021;1029;1037;1045;1053;1102:3;1090:9;1081:7;1077:23;1073:33;1070:2;;;1119:1;1116;1109:12;1070:2;1162:1;1187:53;1232:7;1223:6;1212:9;1208:22;1187:53;:::i;:::-;1177:63;;1133:117;1289:2;1315:53;1360:7;1351:6;1340:9;1336:22;1315:53;:::i;:::-;1305:63;;1260:118;1417:2;1443:52;1487:7;1478:6;1467:9;1463:22;1443:52;:::i;:::-;1433:62;;1388:117;1544:2;1570:52;1614:7;1605:6;1594:9;1590:22;1570:52;:::i;:::-;1560:62;;1515:117;1671:3;1698:53;1743:7;1734:6;1723:9;1719:22;1698:53;:::i;:::-;1688:63;;1642:119;1800:3;1827:53;1872:7;1863:6;1852:9;1848:22;1827:53;:::i;:::-;1817:63;;1771:119;1929:3;1956:53;2001:7;1992:6;1981:9;1977:22;1956:53;:::i;:::-;1946:63;;1900:119;2058:3;2085:52;2129:7;2120:6;2109:9;2105:22;2085:52;:::i;:::-;2075:62;;2029:118;2186:3;2213:53;2258:7;2249:6;2238:9;2234:22;2213:53;:::i;:::-;2203:63;;2157:119;2315:3;2342:50;2384:7;2375:6;2364:9;2360:22;2342:50;:::i;:::-;2332:60;;2286:116;1060:1349;;;;;;;;;;;;;:::o;2415:262::-;2474:6;2523:2;2511:9;2502:7;2498:23;2494:32;2491:2;;;2539:1;2536;2529:12;2491:2;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2481:196;;;;:::o;2683:118::-;2770:24;2788:5;2770:24;:::i;:::-;2765:3;2758:37;2748:53;;:::o;2807:109::-;2888:21;2903:5;2888:21;:::i;:::-;2883:3;2876:34;2866:50;;:::o;2922:157::-;3022:50;3066:5;3022:50;:::i;:::-;3017:3;3010:63;3000:79;;:::o;3085:181::-;3197:62;3253:5;3197:62;:::i;:::-;3192:3;3185:75;3175:91;;:::o;3272:175::-;3381:59;3434:5;3381:59;:::i;:::-;3376:3;3369:72;3359:88;;:::o;3453:175::-;3562:59;3615:5;3562:59;:::i;:::-;3557:3;3550:72;3540:88;;:::o;3634:161::-;3736:52;3782:5;3736:52;:::i;:::-;3731:3;3724:65;3714:81;;:::o;3801:118::-;3888:24;3906:5;3888:24;:::i;:::-;3883:3;3876:37;3866:53;;:::o;3925:129::-;4011:36;4041:5;4011:36;:::i;:::-;4006:3;3999:49;3989:65;;:::o;4060:222::-;4153:4;4191:2;4180:9;4176:18;4168:26;;4204:71;4272:1;4261:9;4257:17;4248:6;4204:71;:::i;:::-;4158:124;;;;:::o;4288:272::-;4406:4;4444:2;4433:9;4429:18;4421:26;;4457:96;4550:1;4539:9;4535:17;4526:6;4457:96;:::i;:::-;4411:149;;;;:::o;4566:1428::-;4988:4;5026:3;5015:9;5011:19;5003:27;;5040:93;5130:1;5119:9;5115:17;5106:6;5040:93;:::i;:::-;5143:85;5224:2;5213:9;5209:18;5200:6;5143:85;:::i;:::-;5238:94;5328:2;5317:9;5313:18;5304:6;5238:94;:::i;:::-;5342:71;5409:2;5398:9;5394:18;5385:6;5342:71;:::i;:::-;5423:72;5490:3;5479:9;5475:19;5466:6;5423:72;:::i;:::-;5505:73;5573:3;5562:9;5558:19;5549:6;5505:73;:::i;:::-;5588;5656:3;5645:9;5641:19;5632:6;5588:73;:::i;:::-;5671;5739:3;5728:9;5724:19;5715:6;5671:73;:::i;:::-;5754:72;5821:3;5810:9;5806:19;5797:6;5754:72;:::i;:::-;5836:73;5904:3;5893:9;5889:19;5880:6;5836:73;:::i;:::-;5919:68;5982:3;5971:9;5967:19;5957:7;5919:68;:::i;:::-;4993:1001;;;;;;;;;;;;;;:::o;6000:252::-;6108:4;6146:2;6135:9;6131:18;6123:26;;6159:86;6242:1;6231:9;6227:17;6218:6;6159:86;:::i;:::-;6113:139;;;;:::o;6258:222::-;6351:4;6389:2;6378:9;6374:18;6366:26;;6402:71;6470:1;6459:9;6455:17;6446:6;6402:71;:::i;:::-;6356:124;;;;:::o;6486:96::-;6523:7;6552:24;6570:5;6552:24;:::i;:::-;6541:35;;6531:51;;;:::o;6588:90::-;6622:7;6665:5;6658:13;6651:21;6640:32;;6630:48;;;:::o;6684:126::-;6721:7;6761:42;6754:5;6750:54;6739:65;;6729:81;;;:::o;6816:77::-;6853:7;6882:5;6871:16;;6861:32;;;:::o;6899:101::-;6935:7;6975:18;6968:5;6964:30;6953:41;;6943:57;;;:::o;7006:152::-;7069:9;7102:50;7146:5;7102:50;:::i;:::-;7089:63;;7079:79;;;:::o;7164:126::-;7227:9;7260:24;7278:5;7260:24;:::i;:::-;7247:37;;7237:53;;;:::o;7296:176::-;7371:9;7404:62;7460:5;7404:62;:::i;:::-;7391:75;;7381:91;;;:::o;7478:138::-;7553:9;7586:24;7604:5;7586:24;:::i;:::-;7573:37;;7563:53;;;:::o;7622:170::-;7694:9;7727:59;7780:5;7727:59;:::i;:::-;7714:72;;7704:88;;;:::o;7798:135::-;7870:9;7903:24;7921:5;7903:24;:::i;:::-;7890:37;;7880:53;;;:::o;7939:170::-;8011:9;8044:59;8097:5;8044:59;:::i;:::-;8031:72;;8021:88;;;:::o;8115:135::-;8187:9;8220:24;8238:5;8220:24;:::i;:::-;8207:37;;8197:53;;;:::o;8256:156::-;8321:9;8354:52;8400:5;8354:52;:::i;:::-;8341:65;;8331:81;;;:::o;8418:128::-;8483:9;8516:24;8534:5;8516:24;:::i;:::-;8503:37;;8493:53;;;:::o;8552:111::-;8601:9;8634:23;8651:5;8634:23;:::i;:::-;8621:36;;8611:52;;;:::o;8669:122::-;8742:24;8760:5;8742:24;:::i;:::-;8735:5;8732:35;8722:2;;8781:1;8778;8771:12;8722:2;8712:79;:::o;8797:116::-;8867:21;8882:5;8867:21;:::i;:::-;8860:5;8857:32;8847:2;;8903:1;8900;8893:12;8847:2;8837:76;:::o;8919:122::-;8992:24;9010:5;8992:24;:::i;:::-;8985:5;8982:35;8972:2;;9031:1;9028;9021:12;8972:2;8962:79;:::o;9047:120::-;9119:23;9136:5;9119:23;:::i;:::-;9112:5;9109:34;9099:2;;9157:1;9154;9147:12;9099:2;9089:78;:::o"
            },
            "methodIdentifiers": {
              "addMarket(address,address,uint64,uint64,uint256,uint256,uint256,uint64,uint256,bool)": "13afc618",
              "getMarketsCount()": "27fa35c3",
              "markets(address)": "8e8f294b",
              "marketsKeys(uint256)": "46a81c00",
              "owner()": "8da5cb5b",
              "uniswapFactory()": "8bdb2afa"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/lib/contracts/libraries/FixedPoint.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/libraries/UQ112x112.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ]
          },
          "id": 78,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:0",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 77,
              "linearizedBaseContracts": [
                77
              ],
              "name": "IERC20",
              "nameLocation": "139:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:0",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 8,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "232:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 8,
                        "src": "269:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:0"
                  },
                  "scope": 77,
                  "src": "223:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:0",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "370:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "388:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "380:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "420:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:0"
                  },
                  "scope": 77,
                  "src": "361:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:0",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "658:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "675:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "667:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "694:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "686:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "720:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:0"
                  },
                  "scope": 77,
                  "src": "649:77:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 36,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1010:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1028:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1020:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1043:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1035:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1075:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:0"
                  },
                  "scope": 77,
                  "src": "1001:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 37,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:0",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 46,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1746:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1762:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1754:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 41,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1779:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1771:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:0"
                  },
                  "returnParameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1805:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:0"
                  },
                  "scope": 77,
                  "src": "1737:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:0",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 58,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2127:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2157:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2149:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2149:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2181:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2173:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2173:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2208:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2200:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:81:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2239:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2238:6:0"
                  },
                  "scope": 77,
                  "src": "2118:127:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "2251:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 67,
                  "name": "Transfer",
                  "nameLocation": "2420:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2445:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2429:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2467:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2451:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2479:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2471:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2428:57:0"
                  },
                  "src": "2414:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "2492:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 76,
                  "name": "Approval",
                  "nameLocation": "2651:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2676:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2660:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 72,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2699:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2683:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 74,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2716:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2708:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:63:0"
                  },
                  "src": "2645:78:0"
                }
              ],
              "scope": 78,
              "src": "129:2596:0",
              "usedErrors": []
            }
          ],
          "src": "33:2693:0"
        },
        "id": 0
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "ast": {
          "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
          "exportedSymbols": {
            "FixedPoint": [
              263
            ]
          },
          "id": 264,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 79,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 263,
              "linearizedBaseContracts": [
                263
              ],
              "name": "FixedPoint",
              "nameLocation": "137:10:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "FixedPoint.uq112x112",
                  "id": 82,
                  "members": [
                    {
                      "constant": false,
                      "id": 81,
                      "mutability": "mutable",
                      "name": "_x",
                      "nameLocation": "249:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "241:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "uq112x112",
                  "nameLocation": "221:9:1",
                  "nodeType": "StructDefinition",
                  "scope": 263,
                  "src": "214:44:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "FixedPoint.uq144x112",
                  "id": 85,
                  "members": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "_x",
                      "nameLocation": "356:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 85,
                      "src": "351:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "351:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "uq144x112",
                  "nameLocation": "331:9:1",
                  "nodeType": "StructDefinition",
                  "scope": 263,
                  "src": "324:41:1",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 88,
                  "mutability": "constant",
                  "name": "RESOLUTION",
                  "nameLocation": "394:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "371:39:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "313132",
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "407:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_112_by_1",
                      "typeString": "int_const 112"
                    },
                    "value": "112"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "524:59:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 99,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90,
                                    "src": "559:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 98,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "551:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint224_$",
                                    "typeString": "type(uint224)"
                                  },
                                  "typeName": {
                                    "id": 97,
                                    "name": "uint224",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "551:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "551:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 101,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "565:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "551:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 96,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "541:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "541:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 95,
                        "id": 104,
                        "nodeType": "Return",
                        "src": "534:42:1"
                      }
                    ]
                  },
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "465:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "480:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "472:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "471:11:1"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "506:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 93,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 92,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "506:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "506:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "505:18:1"
                  },
                  "scope": 263,
                  "src": "456:127:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "700:59:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 117,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "735:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint144",
                                      "typeString": "uint144"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint144",
                                      "typeString": "uint144"
                                    }
                                  ],
                                  "id": 116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "727:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 115,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "727:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "727:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 119,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "741:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "727:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 114,
                            "name": "uq144x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "717:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq144x112_$85_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq144x112 storage pointer)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                            "typeString": "struct FixedPoint.uq144x112 memory"
                          }
                        },
                        "functionReturnParameters": 113,
                        "id": 122,
                        "nodeType": "Return",
                        "src": "710:42:1"
                      }
                    ]
                  },
                  "id": 124,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode144",
                  "nameLocation": "638:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "656:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "648:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "647:11:1"
                  },
                  "returnParameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "682:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 111,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 110,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 85,
                            "src": "682:9:1"
                          },
                          "referencedDeclaration": 85,
                          "src": "682:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "681:18:1"
                  },
                  "scope": 263,
                  "src": "629:130:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "915:107:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 136,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 129,
                                "src": "933:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "938:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "933:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204449565f42595f5a45524f",
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "941:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              },
                              "value": "FixedPoint: DIV_BY_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "925:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "925:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "925:42:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 143,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "994:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 144,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 81,
                                "src": "994:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 147,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 129,
                                    "src": "1012:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1004:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint224_$",
                                    "typeString": "type(uint224)"
                                  },
                                  "typeName": {
                                    "id": 145,
                                    "name": "uint224",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1004:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1004:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "src": "994:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 142,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "984:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 134,
                        "id": 151,
                        "nodeType": "Return",
                        "src": "977:38:1"
                      }
                    ]
                  },
                  "id": 153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "836:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "857:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "840:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 126,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 125,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "840:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "840:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "871:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "863:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "839:34:1"
                  },
                  "returnParameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "897:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 132,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 131,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "897:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "897:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "896:18:1"
                  },
                  "scope": 263,
                  "src": "827:195:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "1201:164:1",
                    "statements": [
                      {
                        "assignments": [
                          165
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 165,
                            "mutability": "mutable",
                            "name": "z",
                            "nameLocation": "1216:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "1211:6:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 164,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1211:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 166,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1211:6:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 168,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 158,
                                  "src": "1235:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1240:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1235:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "id": 179,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 171,
                                          "name": "z",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 165,
                                          "src": "1246:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 178,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 174,
                                                  "name": "self",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 156,
                                                  "src": "1255:4:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                                  }
                                                },
                                                "id": 175,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "_x",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 81,
                                                "src": "1255:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint224",
                                                  "typeString": "uint224"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint224",
                                                  "typeString": "uint224"
                                                }
                                              ],
                                              "id": 173,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1250:4:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 172,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1250:4:1",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 176,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1250:13:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 177,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 158,
                                            "src": "1266:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "1250:17:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1246:21:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 180,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1245:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 181,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 158,
                                    "src": "1271:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1245:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 185,
                                        "name": "self",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 156,
                                        "src": "1281:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                          "typeString": "struct FixedPoint.uq112x112 memory"
                                        }
                                      },
                                      "id": 186,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "_x",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 81,
                                      "src": "1281:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    ],
                                    "id": 184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1276:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 183,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1276:4:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1276:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1245:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1235:54:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204d554c5449504c49434154494f4e5f4f564552464c4f57",
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1291:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c49d28a1a0a9590848dc8e15e2ce94a0e18d974f72b2d7169c2f9169e1ee31e8",
                                "typeString": "literal_string \"FixedPoint: MULTIPLICATION_OVERFLOW\""
                              },
                              "value": "FixedPoint: MULTIPLICATION_OVERFLOW"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c49d28a1a0a9590848dc8e15e2ce94a0e18d974f72b2d7169c2f9169e1ee31e8",
                                "typeString": "literal_string \"FixedPoint: MULTIPLICATION_OVERFLOW\""
                              }
                            ],
                            "id": 167,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1227:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1227:102:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 192,
                        "nodeType": "ExpressionStatement",
                        "src": "1227:102:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 194,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "1356:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 193,
                            "name": "uq144x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "1346:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq144x112_$85_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq144x112 storage pointer)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1346:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                            "typeString": "struct FixedPoint.uq144x112 memory"
                          }
                        },
                        "functionReturnParameters": 163,
                        "id": 196,
                        "nodeType": "Return",
                        "src": "1339:19:1"
                      }
                    ]
                  },
                  "id": 198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "1125:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1146:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "1129:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 155,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 154,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "1129:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "1129:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "1157:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "1152:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1128:31:1"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "1183:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 161,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 160,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 85,
                            "src": "1183:9:1"
                          },
                          "referencedDeclaration": 85,
                          "src": "1183:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1182:18:1"
                  },
                  "scope": 263,
                  "src": "1116:249:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 227,
                    "nodeType": "Block",
                    "src": "1616:144:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 209,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "1634:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1648:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1634:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204449565f42595f5a45524f",
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1651:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              },
                              "value": "FixedPoint: DIV_BY_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              }
                            ],
                            "id": 208,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1626:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1626:51:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "1626:51:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    },
                                    "id": 221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 218,
                                          "name": "numerator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 200,
                                          "src": "1713:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        ],
                                        "id": 217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1705:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint224_$",
                                          "typeString": "type(uint224)"
                                        },
                                        "typeName": {
                                          "id": 216,
                                          "name": "uint224",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1705:7:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 219,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1705:18:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<<",
                                    "rightExpression": {
                                      "id": 220,
                                      "name": "RESOLUTION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88,
                                      "src": "1727:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1705:32:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    }
                                  }
                                ],
                                "id": 222,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1704:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 223,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "1741:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "src": "1704:48:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 215,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1694:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1694:59:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 207,
                        "id": 226,
                        "nodeType": "Return",
                        "src": "1687:66:1"
                      }
                    ]
                  },
                  "id": 228,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fraction",
                  "nameLocation": "1526:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "numerator",
                        "nameLocation": "1543:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1535:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1535:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "1562:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1554:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1534:40:1"
                  },
                  "returnParameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1598:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 205,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 204,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "1598:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "1598:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1597:18:1"
                  },
                  "scope": 263,
                  "src": "1517:243:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 244,
                    "nodeType": "Block",
                    "src": "1914:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 238,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 231,
                                  "src": "1939:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 239,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 81,
                                "src": "1939:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "id": 240,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "1950:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "1939:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1931:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint112_$",
                              "typeString": "type(uint112)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1931:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1931:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "functionReturnParameters": 235,
                        "id": 243,
                        "nodeType": "Return",
                        "src": "1924:37:1"
                      }
                    ]
                  },
                  "id": 245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decode",
                  "nameLocation": "1852:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1876:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1859:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 230,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 229,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "1859:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "1859:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1858:23:1"
                  },
                  "returnParameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1905:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1905:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1904:9:1"
                  },
                  "scope": 263,
                  "src": "1843:125:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "2125:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 255,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 248,
                                  "src": "2150:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                                    "typeString": "struct FixedPoint.uq144x112 memory"
                                  }
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 84,
                                "src": "2150:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "id": 257,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "2161:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "2150:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2142:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint144_$",
                              "typeString": "type(uint144)"
                            },
                            "typeName": {
                              "id": 253,
                              "name": "uint144",
                              "nodeType": "ElementaryTypeName",
                              "src": "2142:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2142:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "functionReturnParameters": 252,
                        "id": 260,
                        "nodeType": "Return",
                        "src": "2135:37:1"
                      }
                    ]
                  },
                  "id": 262,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decode144",
                  "nameLocation": "2060:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "2087:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2070:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 247,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 246,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 85,
                            "src": "2070:9:1"
                          },
                          "referencedDeclaration": 85,
                          "src": "2070:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2069:23:1"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2116:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:9:1"
                  },
                  "scope": 263,
                  "src": "2051:128:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 264,
              "src": "129:2052:1",
              "usedErrors": []
            }
          ],
          "src": "0:2182:1"
        },
        "id": 1
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
          "exportedSymbols": {
            "IUniswapV2Factory": [
              326
            ]
          },
          "id": 327,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 265,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 326,
              "linearizedBaseContracts": [
                326
              ],
              "name": "IUniswapV2Factory",
              "nameLocation": "36:17:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 275,
                  "name": "PairCreated",
                  "nameLocation": "66:11:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "94:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "78:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "78:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "118:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "102:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "102:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 271,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "134:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "126:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "126:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 273,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "140:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "77:68:2"
                  },
                  "src": "60:86:2"
                },
                {
                  "functionSelector": "017e7e58",
                  "id": 280,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nameLocation": "161:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "166:2:2"
                  },
                  "returnParameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "192:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "192:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "191:9:2"
                  },
                  "scope": 326,
                  "src": "152:49:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "094b7415",
                  "id": 285,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeToSetter",
                  "nameLocation": "215:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "226:2:2"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "252:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "251:9:2"
                  },
                  "scope": 326,
                  "src": "206:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e6a43905",
                  "id": 294,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPair",
                  "nameLocation": "276:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "292:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "284:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "284:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "308:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "300:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "300:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "283:32:2"
                  },
                  "returnParameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "347:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "339:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "339:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "338:14:2"
                  },
                  "scope": 326,
                  "src": "267:86:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1e3dd18b",
                  "id": 301,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairs",
                  "nameLocation": "367:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "376:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "376:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "375:6:2"
                  },
                  "returnParameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "413:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "405:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:14:2"
                  },
                  "scope": 326,
                  "src": "358:61:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "574f2ba3",
                  "id": 306,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nameLocation": "433:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "447:2:2"
                  },
                  "returnParameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "473:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "472:6:2"
                  },
                  "scope": 326,
                  "src": "424:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c9c65396",
                  "id": 315,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "494:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "513:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "505:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "529:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "521:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:32:2"
                  },
                  "returnParameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "563:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "555:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "554:14:2"
                  },
                  "scope": 326,
                  "src": "485:84:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f46901ed",
                  "id": 320,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nameLocation": "584:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 318,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 317,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "593:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 316,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "593:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "592:9:2"
                  },
                  "returnParameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "610:0:2"
                  },
                  "scope": 326,
                  "src": "575:36:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a2e74af6",
                  "id": 325,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nameLocation": "625:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "640:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "639:9:2"
                  },
                  "returnParameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "657:0:2"
                  },
                  "scope": 326,
                  "src": "616:42:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 327,
              "src": "26:634:2",
              "usedErrors": []
            }
          ],
          "src": "0:661:2"
        },
        "id": 2
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
          "exportedSymbols": {
            "IUniswapV2Pair": [
              568
            ]
          },
          "id": 569,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 328,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 568,
              "linearizedBaseContracts": [
                568
              ],
              "name": "IUniswapV2Pair",
              "nameLocation": "36:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 336,
                  "name": "Approval",
                  "nameLocation": "63:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "88:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "72:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "72:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "111:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "95:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "95:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "125:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "120:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "120:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "71:60:3"
                  },
                  "src": "57:75:3"
                },
                {
                  "anonymous": false,
                  "id": 344,
                  "name": "Transfer",
                  "nameLocation": "143:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "168:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "152:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "152:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "190:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "174:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "174:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 342,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "199:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "194:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "194:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "151:54:3"
                  },
                  "src": "137:69:3"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 349,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "221:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "225:2:3"
                  },
                  "returnParameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "251:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "251:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "250:15:3"
                  },
                  "scope": 568,
                  "src": "212:54:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "280:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "286:2:3"
                  },
                  "returnParameters": {
                    "id": 353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "312:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "311:15:3"
                  },
                  "scope": 568,
                  "src": "271:56:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 359,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "341:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "349:2:3"
                  },
                  "returnParameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 359,
                        "src": "375:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "375:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "374:7:3"
                  },
                  "scope": 568,
                  "src": "332:50:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 364,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "396:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "407:2:3"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 364,
                        "src": "433:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "432:6:3"
                  },
                  "scope": 568,
                  "src": "387:52:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 371,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "453:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "471:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "463:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "462:15:3"
                  },
                  "returnParameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "501:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:6:3"
                  },
                  "scope": 568,
                  "src": "444:63:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 380,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "521:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "539:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "531:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "531:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "554:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "546:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "530:32:3"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "586:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "585:6:3"
                  },
                  "scope": 568,
                  "src": "512:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 389,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "607:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "623:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "615:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "637:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "632:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "614:29:3"
                  },
                  "returnParameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "662:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "661:6:3"
                  },
                  "scope": 568,
                  "src": "598:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 398,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "682:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "699:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "691:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "703:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "703:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:24:3"
                  },
                  "returnParameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "733:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "732:6:3"
                  },
                  "scope": 568,
                  "src": "673:66:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 409,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "753:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "774:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "766:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "788:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "780:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "780:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 404,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "797:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "792:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "792:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "765:38:3"
                  },
                  "returnParameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "822:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:6:3"
                  },
                  "scope": 568,
                  "src": "744:84:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3644e515",
                  "id": 414,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "843:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "859:2:3"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "885:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "884:9:3"
                  },
                  "scope": 568,
                  "src": "834:60:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "30adf81f",
                  "id": 419,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "908:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:3"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "949:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "948:9:3"
                  },
                  "scope": 568,
                  "src": "899:59:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ecebe00",
                  "id": 426,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "972:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "987:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "979:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "979:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "978:15:3"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "1017:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:6:3"
                  },
                  "scope": 568,
                  "src": "963:60:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d505accf",
                  "id": 443,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "1038:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 428,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1053:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1045:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1045:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1068:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1060:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1060:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1082:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1077:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1077:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1094:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1089:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1110:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1104:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1121:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1113:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1132:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1124:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1124:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1044:90:3"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1143:0:3"
                  },
                  "scope": 568,
                  "src": "1029:115:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 451,
                  "name": "Mint",
                  "nameLocation": "1156:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 445,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1177:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1161:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1161:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 447,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1190:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1185:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1204:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1199:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1160:52:3"
                  },
                  "src": "1150:63:3"
                },
                {
                  "anonymous": false,
                  "id": 461,
                  "name": "Burn",
                  "nameLocation": "1224:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1245:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1229:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1229:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1258:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1253:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1272:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1267:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1297:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1281:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1281:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1228:72:3"
                  },
                  "src": "1218:83:3"
                },
                {
                  "anonymous": false,
                  "id": 475,
                  "name": "Swap",
                  "nameLocation": "1312:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1342:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1326:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 465,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "1363:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1358:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 467,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "1387:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1382:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 469,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "1411:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1406:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1406:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 471,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "1436:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1431:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1431:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 473,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1472:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1456:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1456:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:164:3"
                  },
                  "src": "1306:175:3"
                },
                {
                  "anonymous": false,
                  "id": 481,
                  "name": "Sync",
                  "nameLocation": "1492:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "1505:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "1497:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1497:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "1523:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "1515:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1515:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1496:36:3"
                  },
                  "src": "1486:47:3"
                },
                {
                  "functionSelector": "ba9a7a56",
                  "id": 486,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "1548:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1565:2:3"
                  },
                  "returnParameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 484,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "1591:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1591:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1590:6:3"
                  },
                  "scope": 568,
                  "src": "1539:58:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c45a0155",
                  "id": 491,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "1611:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1618:2:3"
                  },
                  "returnParameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "1644:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1644:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:9:3"
                  },
                  "scope": 568,
                  "src": "1602:51:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0dfe1681",
                  "id": 496,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nameLocation": "1667:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1673:2:3"
                  },
                  "returnParameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "1699:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1698:9:3"
                  },
                  "scope": 568,
                  "src": "1658:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d21220a7",
                  "id": 501,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nameLocation": "1722:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1728:2:3"
                  },
                  "returnParameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "1754:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:9:3"
                  },
                  "scope": 568,
                  "src": "1713:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0902f1ac",
                  "id": 510,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "1777:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1788:2:3"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "1822:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1814:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1814:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "1840:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1832:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1832:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "blockTimestampLast",
                        "nameLocation": "1857:18:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1850:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1850:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1813:63:3"
                  },
                  "scope": 568,
                  "src": "1768:109:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5909c0d5",
                  "id": 515,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price0CumulativeLast",
                  "nameLocation": "1891:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1911:2:3"
                  },
                  "returnParameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "1937:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1937:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1936:6:3"
                  },
                  "scope": 568,
                  "src": "1882:61:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5a3d5493",
                  "id": 520,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price1CumulativeLast",
                  "nameLocation": "1957:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "2003:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2003:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2002:6:3"
                  },
                  "scope": 568,
                  "src": "1948:61:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7464fc3d",
                  "id": 525,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "kLast",
                  "nameLocation": "2023:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:3"
                  },
                  "returnParameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2054:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2054:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2053:6:3"
                  },
                  "scope": 568,
                  "src": "2014:46:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6a627842",
                  "id": 532,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "2075:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2088:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "2080:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2080:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2079:12:3"
                  },
                  "returnParameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "2115:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "2110:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2110:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2109:16:3"
                  },
                  "scope": 568,
                  "src": "2066:60:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "89afcb44",
                  "id": 541,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "2140:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 535,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2153:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "2145:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2145:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2144:12:3"
                  },
                  "returnParameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2180:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "2175:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2194:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "2189:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2189:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2174:28:3"
                  },
                  "scope": 568,
                  "src": "2131:72:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "022c0d9f",
                  "id": 552,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "2217:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "2227:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2222:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "2244:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2239:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2264:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2256:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2283:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2268:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2268:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2221:67:3"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2297:0:3"
                  },
                  "scope": 568,
                  "src": "2208:90:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bc25cf77",
                  "id": 557,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "skim",
                  "nameLocation": "2312:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 554,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2325:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "2317:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2316:12:3"
                  },
                  "returnParameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2337:0:3"
                  },
                  "scope": 568,
                  "src": "2303:35:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fff6cae9",
                  "id": 560,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sync",
                  "nameLocation": "2352:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2356:2:3"
                  },
                  "returnParameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2367:0:3"
                  },
                  "scope": 568,
                  "src": "2343:25:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "485cc955",
                  "id": 567,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2383:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "2394:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2394:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 564,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "2403:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 563,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2403:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2393:18:3"
                  },
                  "returnParameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2420:0:3"
                  },
                  "scope": 568,
                  "src": "2374:47:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 569,
              "src": "26:2397:3",
              "usedErrors": []
            }
          ],
          "src": "0:2424:3"
        },
        "id": 3
      },
      "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
          "exportedSymbols": {
            "UQ112x112": [
              612
            ]
          },
          "id": 613,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 570,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 612,
              "linearizedBaseContracts": [
                612
              ],
              "name": "UQ112x112",
              "nameLocation": "190:9:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 575,
                  "mutability": "constant",
                  "name": "Q112",
                  "nameLocation": "223:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "206:30:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                      "typeString": "int_const 5192...(26 digits omitted)...0096"
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "230:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "313132",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "233:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_112_by_1",
                        "typeString": "int_const 112"
                      },
                      "value": "112"
                    },
                    "src": "230:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                      "typeString": "int_const 5192...(26 digits omitted)...0096"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "343:57:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 582,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "353:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 585,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 577,
                                  "src": "365:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "357:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 583,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "357:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "357:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 587,
                              "name": "Q112",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "370:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "src": "357:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "353:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "353:21:4"
                      }
                    ]
                  },
                  "id": 592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "291:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "306:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "298:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "297:11:4"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "340:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "332:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "332:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "331:11:4"
                  },
                  "scope": 612,
                  "src": "282:118:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 610,
                    "nodeType": "Block",
                    "src": "539:35:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 601,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "549:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 602,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "553:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 605,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 596,
                                  "src": "565:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "557:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 603,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "557:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "557:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "src": "553:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "549:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 609,
                        "nodeType": "ExpressionStatement",
                        "src": "549:18:4"
                      }
                    ]
                  },
                  "id": 611,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uqdiv",
                  "nameLocation": "477:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "491:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "483:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "483:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "502:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "494:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "494:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "482:22:4"
                  },
                  "returnParameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "536:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "528:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "528:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "527:11:4"
                  },
                  "scope": 612,
                  "src": "468:106:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 613,
              "src": "182:394:4",
              "usedErrors": []
            }
          ],
          "src": "0:576:4"
        },
        "id": 4
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
          "exportedSymbols": {
            "FixedPoint": [
              263
            ],
            "IUniswapV2Pair": [
              568
            ],
            "UniswapV2OracleLibrary": [
              719
            ]
          },
          "id": 720,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 614,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:5"
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 615,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 720,
              "sourceUnit": 569,
              "src": "26:66:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "id": 616,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 720,
              "sourceUnit": 264,
              "src": "93:57:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 719,
              "linearizedBaseContracts": [
                719
              ],
              "name": "UniswapV2OracleLibrary",
              "nameLocation": "252:22:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 618,
                  "libraryName": {
                    "id": 617,
                    "name": "FixedPoint",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 263,
                    "src": "287:10:5"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "281:23:5"
                },
                {
                  "body": {
                    "id": 633,
                    "nodeType": "Block",
                    "src": "486:57:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 625,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "510:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "510:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                },
                                "id": 629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "528:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "533:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "528:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                }
                              },
                              "src": "510:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "503:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 623,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "503:6:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "503:33:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "functionReturnParameters": 622,
                        "id": 632,
                        "nodeType": "Return",
                        "src": "496:40:5"
                      }
                    ]
                  },
                  "id": 634,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentBlockTimestamp",
                  "nameLocation": "431:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "452:2:5"
                  },
                  "returnParameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "478:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "477:8:5"
                  },
                  "scope": 719,
                  "src": "422:121:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "799:887:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 645,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "809:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 646,
                              "name": "currentBlockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 634,
                              "src": "826:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                                "typeString": "function () view returns (uint32)"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "826:23:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "809:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "809:40:5"
                      },
                      {
                        "expression": {
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 650,
                            "name": "price0Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "859:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 652,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "893:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 651,
                                  "name": "IUniswapV2Pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 568,
                                  "src": "878:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                    "typeString": "type(contract IUniswapV2Pair)"
                                  }
                                },
                                "id": 653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "878:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price0CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "878:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "878:43:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "859:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "859:62:5"
                      },
                      {
                        "expression": {
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 658,
                            "name": "price1Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "931:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 660,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "965:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 659,
                                  "name": "IUniswapV2Pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 568,
                                  "src": "950:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                    "typeString": "type(contract IUniswapV2Pair)"
                                  }
                                },
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "950:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price1CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 520,
                              "src": "950:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "950:43:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "931:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "931:62:5"
                      },
                      {
                        "assignments": [
                          667,
                          669,
                          671
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 667,
                            "mutability": "mutable",
                            "name": "reserve0",
                            "nameLocation": "1113:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 717,
                            "src": "1105:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 666,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1105:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 669,
                            "mutability": "mutable",
                            "name": "reserve1",
                            "nameLocation": "1131:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 717,
                            "src": "1123:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 668,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1123:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 671,
                            "mutability": "mutable",
                            "name": "blockTimestampLast",
                            "nameLocation": "1148:18:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 717,
                            "src": "1141:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 670,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1141:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 677,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 673,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 636,
                                  "src": "1185:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 672,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 568,
                                "src": "1170:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1170:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 510,
                            "src": "1170:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view external returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1170:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1104:100:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 678,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "1218:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 679,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "1240:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1218:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "1214:466:5",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "1256:424:5",
                          "statements": [
                            {
                              "assignments": [
                                682
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 682,
                                  "mutability": "mutable",
                                  "name": "timeElapsed",
                                  "nameLocation": "1324:11:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 715,
                                  "src": "1317:18:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 681,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1317:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 686,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 683,
                                  "name": "blockTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 643,
                                  "src": "1338:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 684,
                                  "name": "blockTimestampLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "1355:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "1338:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1317:56:5"
                            },
                            {
                              "expression": {
                                "id": 699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 687,
                                  "name": "price0Cumulative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "1461:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 698,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 692,
                                              "name": "reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 669,
                                              "src": "1506:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            },
                                            {
                                              "id": 693,
                                              "name": "reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 667,
                                              "src": "1516:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              },
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "id": 690,
                                              "name": "FixedPoint",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 263,
                                              "src": "1486:10:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                                "typeString": "type(library FixedPoint)"
                                              }
                                            },
                                            "id": 691,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "fraction",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 228,
                                            "src": "1486:19:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_struct$_uq112x112_$82_memory_ptr_$",
                                              "typeString": "function (uint112,uint112) pure returns (struct FixedPoint.uq112x112 memory)"
                                            }
                                          },
                                          "id": 694,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1486:39:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        },
                                        "id": 695,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "_x",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 81,
                                        "src": "1486:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 689,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1481:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 688,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1481:4:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1481:48:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 697,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "1532:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "1481:62:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1461:82:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 700,
                              "nodeType": "ExpressionStatement",
                              "src": "1461:82:5"
                            },
                            {
                              "expression": {
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 701,
                                  "name": "price1Cumulative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "1587:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 706,
                                              "name": "reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 667,
                                              "src": "1632:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            },
                                            {
                                              "id": 707,
                                              "name": "reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 669,
                                              "src": "1642:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              },
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "id": 704,
                                              "name": "FixedPoint",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 263,
                                              "src": "1612:10:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                                "typeString": "type(library FixedPoint)"
                                              }
                                            },
                                            "id": 705,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "fraction",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 228,
                                            "src": "1612:19:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_struct$_uq112x112_$82_memory_ptr_$",
                                              "typeString": "function (uint112,uint112) pure returns (struct FixedPoint.uq112x112 memory)"
                                            }
                                          },
                                          "id": 708,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1612:39:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        },
                                        "id": 709,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "_x",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 81,
                                        "src": "1612:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 703,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1607:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 702,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1607:4:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1607:48:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 711,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "1658:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "1607:62:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1587:82:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 714,
                              "nodeType": "ExpressionStatement",
                              "src": "1587:82:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 718,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentCumulativePrices",
                  "nameLocation": "655:23:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "696:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "688:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:28:5"
                  },
                  "returnParameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "price0Cumulative",
                        "nameLocation": "735:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "730:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "730:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "price1Cumulative",
                        "nameLocation": "758:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "753:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nameLocation": "783:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "776:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "776:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "729:69:5"
                  },
                  "scope": 719,
                  "src": "646:1040:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 720,
              "src": "244:1444:5",
              "usedErrors": []
            }
          ],
          "src": "0:1689:5"
        },
        "id": 5
      },
      "contracts/Market.sol": {
        "ast": {
          "absolutePath": "contracts/Market.sol",
          "exportedSymbols": {
            "FixedPoint": [
              263
            ],
            "IERC20": [
              77
            ],
            "IUniswapV2Factory": [
              326
            ],
            "IUniswapV2Pair": [
              568
            ],
            "Market": [
              2754
            ],
            "MarketFactory": [
              2865
            ],
            "UQ112x112": [
              612
            ],
            "UniswapV2OracleLibrary": [
              719
            ]
          },
          "id": 2755,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 721,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "absolutePath": "contracts/MarketFactory.sol",
              "file": "./MarketFactory.sol",
              "id": 722,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2755,
              "sourceUnit": 2866,
              "src": "97:29:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 723,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2755,
              "sourceUnit": 569,
              "src": "128:66:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
              "file": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
              "id": 724,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2755,
              "sourceUnit": 720,
              "src": "196:78:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "id": 725,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2755,
              "sourceUnit": 264,
              "src": "276:57:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 726,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2755,
              "sourceUnit": 78,
              "src": "335:56:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
              "file": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
              "id": 727,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2755,
              "sourceUnit": 613,
              "src": "393:65:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 728,
                "nodeType": "StructuredDocumentation",
                "src": "464:122:6",
                "text": "@title TWPM Market\n @author UniHedge\n @dev All function calls are currently implemented without side effects"
              },
              "fullyImplemented": true,
              "id": 2754,
              "linearizedBaseContracts": [
                2754
              ],
              "name": "Market",
              "nameLocation": "595:6:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 731,
                  "libraryName": {
                    "id": 729,
                    "name": "UQ112x112",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 612,
                    "src": "615:9:6"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "609:28:6",
                  "typeName": {
                    "id": 730,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "ef78d4fd",
                  "id": 733,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "680:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "668:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7358c57a",
                  "id": 735,
                  "mutability": "mutable",
                  "name": "initTimestamp",
                  "nameLocation": "817:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "805:25:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "527eb4bc",
                  "id": 738,
                  "mutability": "mutable",
                  "name": "feeProtocol",
                  "nameLocation": "875:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "863:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "889:3:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ff5c86b0",
                  "id": 740,
                  "mutability": "mutable",
                  "name": "tReporting",
                  "nameLocation": "954:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "942:22:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c816841b",
                  "id": 743,
                  "mutability": "mutable",
                  "name": "uniswapPair",
                  "nameLocation": "1028:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1006:33:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                    "typeString": "contract IUniswapV2Pair"
                  },
                  "typeName": {
                    "id": 742,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 741,
                      "name": "IUniswapV2Pair",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 568,
                      "src": "1006:14:6"
                    },
                    "referencedDeclaration": 568,
                    "src": "1006:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "499a0fc4",
                  "id": 745,
                  "mutability": "mutable",
                  "name": "dPrice",
                  "nameLocation": "1087:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1075:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "410f0710",
                  "id": 747,
                  "mutability": "mutable",
                  "name": "feeMarket",
                  "nameLocation": "1156:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1144:21:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7e996639",
                  "id": 749,
                  "mutability": "mutable",
                  "name": "taxMarket",
                  "nameLocation": "1210:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1198:21:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c45a0155",
                  "id": 752,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1291:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1270:28:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MarketFactory_$2865",
                    "typeString": "contract MarketFactory"
                  },
                  "typeName": {
                    "id": 751,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 750,
                      "name": "MarketFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "1270:13:6"
                    },
                    "referencedDeclaration": 2865,
                    "src": "1270:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketFactory_$2865",
                      "typeString": "contract MarketFactory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "da68cf8b",
                  "id": 755,
                  "mutability": "mutable",
                  "name": "accountingToken",
                  "nameLocation": "1383:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1369:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$77",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 754,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 753,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 77,
                      "src": "1369:6:6"
                    },
                    "referencedDeclaration": 77,
                    "src": "1369:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "45084775",
                  "id": 757,
                  "mutability": "mutable",
                  "name": "ownerMarket",
                  "nameLocation": "1455:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1440:26:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3d09a82a",
                  "id": 759,
                  "mutability": "mutable",
                  "name": "minTax",
                  "nameLocation": "1525:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1513:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8f9eca82",
                  "id": 762,
                  "mutability": "mutable",
                  "name": "avgPriceSwitch",
                  "nameLocation": "1590:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1578:34:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1607:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "scalar",
                  "nameLocation": "1678:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "1673:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1673:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31653234",
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1687:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "value": "1e24"
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "Market.SFrame",
                  "id": 769,
                  "members": [
                    {
                      "id": 766,
                      "name": "NULL",
                      "nameLocation": "1726:4:6",
                      "nodeType": "EnumValue",
                      "src": "1726:4:6"
                    },
                    {
                      "id": 767,
                      "name": "OPENED",
                      "nameLocation": "1732:6:6",
                      "nodeType": "EnumValue",
                      "src": "1732:6:6"
                    },
                    {
                      "id": 768,
                      "name": "CLOSED",
                      "nameLocation": "1740:6:6",
                      "nodeType": "EnumValue",
                      "src": "1740:6:6"
                    }
                  ],
                  "name": "SFrame",
                  "nameLocation": "1718:6:6",
                  "nodeType": "EnumDefinition",
                  "src": "1713:34:6"
                },
                {
                  "canonicalName": "Market.Frame",
                  "id": 799,
                  "members": [
                    {
                      "constant": false,
                      "id": 771,
                      "mutability": "mutable",
                      "name": "frameKey",
                      "nameLocation": "1782:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1777:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 770,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1777:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "oracleTimestampStart",
                      "nameLocation": "1807:20:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1802:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1802:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 775,
                      "mutability": "mutable",
                      "name": "oracleTimestampEnd",
                      "nameLocation": "1843:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1838:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 774,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1838:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 777,
                      "mutability": "mutable",
                      "name": "rewardFund",
                      "nameLocation": "1877:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1872:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 776,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1872:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 779,
                      "mutability": "mutable",
                      "name": "priceAverage",
                      "nameLocation": "1903:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1898:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 778,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1898:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "oraclePrice0CumulativeStart",
                      "nameLocation": "1931:27:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1926:32:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1926:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "oraclePrice0CumulativeEnd",
                      "nameLocation": "1974:25:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1969:30:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 782,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1969:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 785,
                      "mutability": "mutable",
                      "name": "oraclePrice1CumulativeStart",
                      "nameLocation": "2015:27:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "2010:32:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 784,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2010:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 787,
                      "mutability": "mutable",
                      "name": "oraclePrice1CumulativeEnd",
                      "nameLocation": "2058:25:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "2053:30:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 786,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2053:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "2101:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "2094:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SFrame_$769",
                        "typeString": "enum Market.SFrame"
                      },
                      "typeName": {
                        "id": 789,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 788,
                          "name": "SFrame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 769,
                          "src": "2094:6:6"
                        },
                        "referencedDeclaration": 769,
                        "src": "2094:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SFrame_$769",
                          "typeString": "enum Market.SFrame"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "lotKeys",
                      "nameLocation": "2124:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "2117:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 791,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2117:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 792,
                        "nodeType": "ArrayTypeName",
                        "src": "2117:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "lots",
                      "nameLocation": "2163:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "2142:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Lot)"
                      },
                      "typeName": {
                        "id": 797,
                        "keyType": {
                          "id": 794,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2150:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2142:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Lot)"
                        },
                        "valueType": {
                          "id": 796,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 795,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 846,
                            "src": "2158:3:6"
                          },
                          "referencedDeclaration": 846,
                          "src": "2158:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$846_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Frame",
                  "nameLocation": "1760:5:6",
                  "nodeType": "StructDefinition",
                  "scope": 2754,
                  "src": "1753:422:6",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 817,
                  "name": "FrameUpdate",
                  "nameLocation": "2189:11:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 801,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "2206:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2201:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2201:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 803,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracleTimestampStart",
                        "nameLocation": "2221:20:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2216:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 802,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2216:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracleTimestampEnd",
                        "nameLocation": "2248:18:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2243:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2243:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oraclePrice0CumulativeStart",
                        "nameLocation": "2273:27:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2268:32:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2268:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oraclePrice0CumulativeEnd",
                        "nameLocation": "2307:25:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2302:30:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2302:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 811,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oraclePrice1CumulativeStart",
                        "nameLocation": "2339:27:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2334:32:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2334:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 813,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oraclePrice1CumulativeEnd",
                        "nameLocation": "2373:25:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2368:30:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2368:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 815,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardFund",
                        "nameLocation": "2405:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2400:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2400:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2200:216:6"
                  },
                  "src": "2183:234:6"
                },
                {
                  "constant": false,
                  "functionSelector": "a10340bc",
                  "id": 822,
                  "mutability": "mutable",
                  "name": "frames",
                  "nameLocation": "2455:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "2425:36:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                    "typeString": "mapping(uint256 => struct Market.Frame)"
                  },
                  "typeName": {
                    "id": 821,
                    "keyType": {
                      "id": 818,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2433:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2425:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                      "typeString": "mapping(uint256 => struct Market.Frame)"
                    },
                    "valueType": {
                      "id": 820,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 819,
                        "name": "Frame",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "2441:5:6"
                      },
                      "referencedDeclaration": 799,
                      "src": "2441:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Frame_$799_storage_ptr",
                        "typeString": "struct Market.Frame"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "60f65c60",
                  "id": 827,
                  "mutability": "mutable",
                  "name": "userFrames",
                  "nameLocation": "2502:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "2468:44:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 826,
                    "keyType": {
                      "id": 823,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2476:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2468:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 824,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2487:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 825,
                      "nodeType": "ArrayTypeName",
                      "src": "2487:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "050e8840",
                  "id": 830,
                  "mutability": "mutable",
                  "name": "framesKeys",
                  "nameLocation": "2533:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "2519:24:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 828,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2519:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 829,
                    "nodeType": "ArrayTypeName",
                    "src": "2519:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "Market.SLot",
                  "id": 834,
                  "members": [
                    {
                      "id": 831,
                      "name": "NULL",
                      "nameLocation": "2563:4:6",
                      "nodeType": "EnumValue",
                      "src": "2563:4:6"
                    },
                    {
                      "id": 832,
                      "name": "BOUGHT",
                      "nameLocation": "2569:6:6",
                      "nodeType": "EnumValue",
                      "src": "2569:6:6"
                    },
                    {
                      "id": 833,
                      "name": "SETTLED",
                      "nameLocation": "2577:7:6",
                      "nodeType": "EnumValue",
                      "src": "2577:7:6"
                    }
                  ],
                  "name": "SLot",
                  "nameLocation": "2557:4:6",
                  "nodeType": "EnumDefinition",
                  "src": "2552:33:6"
                },
                {
                  "canonicalName": "Market.Lot",
                  "id": 846,
                  "members": [
                    {
                      "constant": false,
                      "id": 836,
                      "mutability": "mutable",
                      "name": "frameKey",
                      "nameLocation": "2618:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "2613:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 835,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2613:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 838,
                      "mutability": "mutable",
                      "name": "lotKey",
                      "nameLocation": "2642:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "2637:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 837,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2637:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 840,
                      "mutability": "mutable",
                      "name": "lotOwner",
                      "nameLocation": "2667:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "2659:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 839,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2659:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 842,
                      "mutability": "mutable",
                      "name": "acquisitionPrice",
                      "nameLocation": "2691:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "2686:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 841,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2686:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "2723:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "2718:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SLot_$834",
                        "typeString": "enum Market.SLot"
                      },
                      "typeName": {
                        "id": 844,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 843,
                          "name": "SLot",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 834,
                          "src": "2718:4:6"
                        },
                        "referencedDeclaration": 834,
                        "src": "2718:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SLot_$834",
                          "typeString": "enum Market.SLot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Lot",
                  "nameLocation": "2598:3:6",
                  "nodeType": "StructDefinition",
                  "scope": 2754,
                  "src": "2591:145:6",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 853,
                  "name": "LotUpdate",
                  "nameLocation": "2750:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 852,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 848,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "2765:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 853,
                        "src": "2760:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 847,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2760:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 851,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "lotStruct",
                        "nameLocation": "2779:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 853,
                        "src": "2775:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                          "typeString": "struct Market.Lot"
                        },
                        "typeName": {
                          "id": 850,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 849,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 846,
                            "src": "2775:3:6"
                          },
                          "referencedDeclaration": 846,
                          "src": "2775:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$846_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2759:30:6"
                  },
                  "src": "2744:46:6"
                },
                {
                  "body": {
                    "id": 933,
                    "nodeType": "Block",
                    "src": "3013:420:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 881,
                            "name": "accountingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "3024:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 882,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 859,
                            "src": "3042:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3024:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "3024:24:6"
                      },
                      {
                        "expression": {
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 885,
                            "name": "ownerMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "3059:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 888,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3081:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3081:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3073:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 886,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3073:8:6",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3073:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3059:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "3059:33:6"
                      },
                      {
                        "expression": {
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 893,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "3103:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 894,
                            "name": "_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 864,
                            "src": "3112:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3103:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "3103:16:6"
                      },
                      {
                        "expression": {
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 897,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "3130:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 898,
                            "name": "_initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "3146:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3130:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "3130:30:6"
                      },
                      {
                        "expression": {
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 901,
                            "name": "taxMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "3172:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 902,
                            "name": "_taxMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "3184:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3172:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 904,
                        "nodeType": "ExpressionStatement",
                        "src": "3172:22:6"
                      },
                      {
                        "expression": {
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 905,
                            "name": "feeMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "3205:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 906,
                            "name": "_feeMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "3217:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3205:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 908,
                        "nodeType": "ExpressionStatement",
                        "src": "3205:22:6"
                      },
                      {
                        "expression": {
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 909,
                            "name": "uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "3238:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 910,
                            "name": "_uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 862,
                            "src": "3252:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "src": "3238:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 912,
                        "nodeType": "ExpressionStatement",
                        "src": "3238:26:6"
                      },
                      {
                        "expression": {
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 913,
                            "name": "dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "3275:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 914,
                            "name": "_dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "3284:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3275:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 916,
                        "nodeType": "ExpressionStatement",
                        "src": "3275:16:6"
                      },
                      {
                        "expression": {
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 917,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "3302:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketFactory_$2865",
                              "typeString": "contract MarketFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 918,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "3312:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketFactory_$2865",
                              "typeString": "contract MarketFactory"
                            }
                          },
                          "src": "3302:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketFactory_$2865",
                            "typeString": "contract MarketFactory"
                          }
                        },
                        "id": 920,
                        "nodeType": "ExpressionStatement",
                        "src": "3302:18:6"
                      },
                      {
                        "expression": {
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 921,
                            "name": "tReporting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "3331:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 922,
                            "name": "_tReporting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "3344:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3331:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 924,
                        "nodeType": "ExpressionStatement",
                        "src": "3331:24:6"
                      },
                      {
                        "expression": {
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 925,
                            "name": "minTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "3366:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 926,
                            "name": "_minTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "3375:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3366:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 928,
                        "nodeType": "ExpressionStatement",
                        "src": "3366:16:6"
                      },
                      {
                        "expression": {
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 929,
                            "name": "avgPriceSwitch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "3393:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 930,
                            "name": "_avgPriceSwitch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "3410:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3393:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 932,
                        "nodeType": "ExpressionStatement",
                        "src": "3393:32:6"
                      }
                    ]
                  },
                  "id": 934,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "_factory",
                        "nameLocation": "2822:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2808:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketFactory_$2865",
                          "typeString": "contract MarketFactory"
                        },
                        "typeName": {
                          "id": 855,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 854,
                            "name": "MarketFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2865,
                            "src": "2808:13:6"
                          },
                          "referencedDeclaration": 2865,
                          "src": "2808:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketFactory_$2865",
                            "typeString": "contract MarketFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2839:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2832:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 858,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 857,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 77,
                            "src": "2832:6:6"
                          },
                          "referencedDeclaration": 77,
                          "src": "2832:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "_uniswapPair",
                        "nameLocation": "2862:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2847:27:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                          "typeString": "contract IUniswapV2Pair"
                        },
                        "typeName": {
                          "id": 861,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 860,
                            "name": "IUniswapV2Pair",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 568,
                            "src": "2847:14:6"
                          },
                          "referencedDeclaration": 568,
                          "src": "2847:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "_period",
                        "nameLocation": "2881:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2876:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2876:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "_initTimestamp",
                        "nameLocation": "2895:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2890:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2890:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "_taxMarket",
                        "nameLocation": "2916:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2911:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2911:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "_feeMarket",
                        "nameLocation": "2933:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2928:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2928:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "_dPrice",
                        "nameLocation": "2950:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2945:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2945:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "_tReporting",
                        "nameLocation": "2964:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2959:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2959:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "_minTax",
                        "nameLocation": "2982:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2977:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2977:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "_avgPriceSwitch",
                        "nameLocation": "2996:15:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2991:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2991:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2807:205:6"
                  },
                  "returnParameters": {
                    "id": 880,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3013:0:6"
                  },
                  "scope": 2754,
                  "src": "2796:637:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 947,
                    "nodeType": "Block",
                    "src": "3467:94:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 937,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3486:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3486:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 939,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 752,
                                    "src": "3500:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MarketFactory_$2865",
                                      "typeString": "contract MarketFactory"
                                    }
                                  },
                                  "id": 940,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2773,
                                  "src": "3500:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3500:15:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3486:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f542054484520464143544f5259204f574e4552",
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3517:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4",
                                "typeString": "literal_string \"NOT THE FACTORY OWNER\""
                              },
                              "value": "NOT THE FACTORY OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4",
                                "typeString": "literal_string \"NOT THE FACTORY OWNER\""
                              }
                            ],
                            "id": 936,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3478:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3478:63:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 945,
                        "nodeType": "ExpressionStatement",
                        "src": "3478:63:6"
                      },
                      {
                        "id": 946,
                        "nodeType": "PlaceholderStatement",
                        "src": "3552:1:6"
                      }
                    ]
                  },
                  "id": 948,
                  "name": "isFactoryOwner",
                  "nameLocation": "3450:14:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 935,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3464:2:6"
                  },
                  "src": "3441:120:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 987,
                    "nodeType": "Block",
                    "src": "3654:535:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 953,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "3750:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 955,
                                "indexExpression": {
                                  "id": 954,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 950,
                                  "src": "3757:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3750:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 956,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "3750:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3798:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3750:49:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 959,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "3803:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 961,
                                "indexExpression": {
                                  "id": 960,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 950,
                                  "src": "3810:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3803:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 962,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "3803:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3849:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3803:47:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3750:100:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 971,
                        "nodeType": "IfStatement",
                        "src": "3746:218:6",
                        "trueBody": {
                          "id": 970,
                          "nodeType": "Block",
                          "src": "3852:112:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "494e56414c4944204652414d45205052494345",
                                    "id": 967,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3930:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    },
                                    "value": "INVALID FRAME PRICE"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    }
                                  ],
                                  "id": 966,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "3923:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3923:29:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 969,
                              "nodeType": "ExpressionStatement",
                              "src": "3923:29:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 972,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "3978:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 974,
                              "indexExpression": {
                                "id": 973,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 950,
                                "src": "3985:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3978:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 975,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePrice0CumulativeStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 781,
                            "src": "3978:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 976,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "4026:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 978,
                              "indexExpression": {
                                "id": 977,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 950,
                                "src": "4033:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4026:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePrice0CumulativeEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 783,
                            "src": "4026:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3978:90:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 986,
                        "nodeType": "IfStatement",
                        "src": "3974:208:6",
                        "trueBody": {
                          "id": 985,
                          "nodeType": "Block",
                          "src": "4070:112:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "494e56414c4944204652414d45205052494345",
                                    "id": 982,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4148:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    },
                                    "value": "INVALID FRAME PRICE"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    }
                                  ],
                                  "id": 981,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "4141:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4141:29:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 984,
                              "nodeType": "ExpressionStatement",
                              "src": "4141:29:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 988,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasValidPrices",
                  "nameLocation": "3612:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "3632:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 988,
                        "src": "3627:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3627:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3626:15:6"
                  },
                  "returnParameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3654:0:6"
                  },
                  "scope": 2754,
                  "src": "3603:586:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1009,
                    "nodeType": "Block",
                    "src": "4314:147:6",
                    "statements": [
                      {
                        "assignments": [
                          996
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 996,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "4330:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1009,
                            "src": "4325:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 995,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4325:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1001,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 998,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "4343:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 999,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "4353:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 997,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1846,
                            "src": "4336:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4336:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4325:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1003,
                                "name": "tax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "4419:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1004,
                                "name": "minTax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 759,
                                "src": "4426:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4419:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "505249434520495320544f4f204c4f57",
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4434:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                "typeString": "literal_string \"PRICE IS TOO LOW\""
                              },
                              "value": "PRICE IS TOO LOW"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                "typeString": "literal_string \"PRICE IS TOO LOW\""
                              }
                            ],
                            "id": 1002,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4411:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4411:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1008,
                        "nodeType": "ExpressionStatement",
                        "src": "4411:42:6"
                      }
                    ]
                  },
                  "id": 1010,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "minTaxCheck",
                  "nameLocation": "4260:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "4277:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "4272:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4272:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 992,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "4292:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "4287:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4287:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4271:30:6"
                  },
                  "returnParameters": {
                    "id": 994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4314:0:6"
                  },
                  "scope": 2754,
                  "src": "4251:210:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1036,
                    "nodeType": "Block",
                    "src": "4681:143:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1018,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "4696:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1019,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "4709:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4696:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1023,
                        "nodeType": "IfStatement",
                        "src": "4692:52:6",
                        "trueBody": {
                          "expression": {
                            "id": 1021,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "4731:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1017,
                          "id": 1022,
                          "nodeType": "Return",
                          "src": "4724:20:6"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1024,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "4762:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1028,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1025,
                                        "name": "timestamp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1013,
                                        "src": "4776:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "id": 1026,
                                            "name": "initTimestamp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 735,
                                            "src": "4789:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1027,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4788:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4776:27:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1029,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4775:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "id": 1030,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "4808:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1031,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4807:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4775:40:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1033,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4774:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4762:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1017,
                        "id": 1035,
                        "nodeType": "Return",
                        "src": "4755:61:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1011,
                    "nodeType": "StructuredDocumentation",
                    "src": "4469:137:6",
                    "text": "@notice Calculate frames timestamp (beggining of frame)\n @param timestamp In seconds\n @return frame's timestamp (key)"
                  },
                  "functionSelector": "5b3ad63e",
                  "id": 1037,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcFrameTimestamp",
                  "nameLocation": "4621:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1014,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1013,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "4644:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "4639:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1012,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4639:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4638:16:6"
                  },
                  "returnParameters": {
                    "id": 1017,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1016,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "4676:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4675:6:6"
                  },
                  "scope": 2754,
                  "src": "4612:212:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1059,
                    "nodeType": "Block",
                    "src": "5044:93:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1045,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1040,
                            "src": "5059:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5068:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5059:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1050,
                        "nodeType": "IfStatement",
                        "src": "5055:29:6",
                        "trueBody": {
                          "expression": {
                            "id": 1048,
                            "name": "dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "5078:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1044,
                          "id": 1049,
                          "nodeType": "Return",
                          "src": "5071:13:6"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1051,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1040,
                              "src": "5102:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 1052,
                                  "name": "dPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "5111:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1053,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5110:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5102:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 1055,
                                "name": "dPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "5122:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1056,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5121:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5102:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1044,
                        "id": 1058,
                        "nodeType": "Return",
                        "src": "5095:34:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1038,
                    "nodeType": "StructuredDocumentation",
                    "src": "4836:145:6",
                    "text": "@notice Calculate top boundary of a lot\n @param value Arbitary price of market's Uniswap pair\n @return lot key (top boundary)"
                  },
                  "functionSelector": "9592de18",
                  "id": 1060,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcLotKey",
                  "nameLocation": "4996:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1040,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5011:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "5006:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5006:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5005:12:6"
                  },
                  "returnParameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "5039:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5039:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5038:6:6"
                  },
                  "scope": 2754,
                  "src": "4987:150:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1088,
                    "nodeType": "Block",
                    "src": "5428:162:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1068,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "5448:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1070,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5478:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5478:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1069,
                              "name": "clcFrameTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1037,
                              "src": "5460:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 1072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5460:34:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5448:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1076,
                        "nodeType": "IfStatement",
                        "src": "5444:60:6",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 1074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5503:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 1067,
                          "id": 1075,
                          "nodeType": "Return",
                          "src": "5496:8:6"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1084,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1081,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1077,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1063,
                                          "src": "5542:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "expression": {
                                                "id": 1078,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "5554:5:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1079,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "5554:15:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1080,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "5553:17:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5542:28:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1082,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5541:30:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1083,
                                    "name": "period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 733,
                                    "src": "5574:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5541:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1085,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5540:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1086,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5539:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1067,
                        "id": 1087,
                        "nodeType": "Return",
                        "src": "5532:50:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1061,
                    "nodeType": "StructuredDocumentation",
                    "src": "5145:212:6",
                    "text": "@notice Calculate how many frames there are left untill given frame in input\n @param frameKey Timestamp of an arbitary frame in the future\n @return number of frames (whole numbers: n=0,1,2...)"
                  },
                  "id": 1089,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcFramesLeft",
                  "nameLocation": "5372:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "5391:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1089,
                        "src": "5386:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5386:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5385:15:6"
                  },
                  "returnParameters": {
                    "id": 1067,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1089,
                        "src": "5423:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5423:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5422:6:6"
                  },
                  "scope": 2754,
                  "src": "5363:227:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1184,
                    "nodeType": "Block",
                    "src": "5830:657:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1098,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1092,
                              "src": "5863:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1097,
                            "name": "hasValidPrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "5848:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) view"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5848:24:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1100,
                        "nodeType": "ExpressionStatement",
                        "src": "5848:24:6"
                      },
                      {
                        "assignments": [
                          1102
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1102,
                            "mutability": "mutable",
                            "name": "timeDiff",
                            "nameLocation": "5959:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1184,
                            "src": "5954:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1101,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5954:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1112,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1103,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "5970:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1105,
                              "indexExpression": {
                                "id": 1104,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1092,
                                "src": "5977:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5970:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 775,
                            "src": "5970:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1107,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "6008:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1109,
                              "indexExpression": {
                                "id": 1108,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1092,
                                "src": "6015:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6008:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 773,
                            "src": "6008:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5970:75:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5954:91:6"
                      },
                      {
                        "condition": {
                          "id": 1113,
                          "name": "avgPriceSwitch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "6060:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1140,
                              "name": "avgPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1095,
                              "src": "6247:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1159,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1155,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 1147,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "6293:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 1149,
                                                      "indexExpression": {
                                                        "id": 1148,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1092,
                                                        "src": "6300:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "6293:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 1150,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice1CumulativeEnd",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 787,
                                                    "src": "6293:42:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 1151,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "6338:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 1153,
                                                      "indexExpression": {
                                                        "id": 1152,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1092,
                                                        "src": "6345:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "6338:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 1154,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice1CumulativeStart",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 785,
                                                    "src": "6338:44:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "6293:89:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 1156,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "6292:91:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "id": 1157,
                                                  "name": "timeDiff",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1102,
                                                  "src": "6387:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 1158,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "6386:10:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "6292:104:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 1146,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6284:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint224_$",
                                            "typeString": "type(uint224)"
                                          },
                                          "typeName": {
                                            "id": 1145,
                                            "name": "uint224",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6284:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1160,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6284:113:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1143,
                                        "name": "FixedPoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "6263:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                          "typeString": "type(library FixedPoint)"
                                        }
                                      },
                                      "id": 1144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "uq112x112",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 82,
                                      "src": "6263:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                                        "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                      }
                                    },
                                    "id": 1161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6263:135:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                      "typeString": "struct FixedPoint.uq112x112 memory"
                                    }
                                  },
                                  "id": 1162,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_x",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 81,
                                  "src": "6263:138:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                ],
                                "id": 1142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6258:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1141,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6258:4:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6258:144:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6247:155:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1165,
                          "nodeType": "ExpressionStatement",
                          "src": "6247:155:6"
                        },
                        "id": 1166,
                        "nodeType": "IfStatement",
                        "src": "6056:346:6",
                        "trueBody": {
                          "expression": {
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1114,
                              "name": "avgPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1095,
                              "src": "6076:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1133,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1129,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 1121,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "6122:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 1123,
                                                      "indexExpression": {
                                                        "id": 1122,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1092,
                                                        "src": "6129:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "6122:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 1124,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice0CumulativeEnd",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 783,
                                                    "src": "6122:42:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 1125,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "6167:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 1127,
                                                      "indexExpression": {
                                                        "id": 1126,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1092,
                                                        "src": "6174:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "6167:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 1128,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice0CumulativeStart",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 781,
                                                    "src": "6167:44:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "6122:89:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 1130,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "6121:91:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "id": 1131,
                                                  "name": "timeDiff",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1102,
                                                  "src": "6216:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 1132,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "6215:10:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "6121:104:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 1120,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6113:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint224_$",
                                            "typeString": "type(uint224)"
                                          },
                                          "typeName": {
                                            "id": 1119,
                                            "name": "uint224",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6113:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1134,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6113:113:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1117,
                                        "name": "FixedPoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "6092:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                          "typeString": "type(library FixedPoint)"
                                        }
                                      },
                                      "id": 1118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "uq112x112",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 82,
                                      "src": "6092:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                                        "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                      }
                                    },
                                    "id": 1135,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6092:135:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                      "typeString": "struct FixedPoint.uq112x112 memory"
                                    }
                                  },
                                  "id": 1136,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_x",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 81,
                                  "src": "6092:138:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                ],
                                "id": 1116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6087:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1115,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6087:4:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6087:144:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6076:155:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1139,
                          "nodeType": "ExpressionStatement",
                          "src": "6076:155:6"
                        }
                      },
                      {
                        "expression": {
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1167,
                            "name": "avgPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "6413:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1170,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1168,
                                      "name": "avgPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1095,
                                      "src": "6425:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">>",
                                    "rightExpression": {
                                      "hexValue": "313132",
                                      "id": 1169,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6437:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_112_by_1",
                                        "typeString": "int_const 112"
                                      },
                                      "value": "112"
                                    },
                                    "src": "6425:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1171,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6424:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1172,
                                "name": "scalar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "6444:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6424:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1174,
                                      "name": "avgPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1095,
                                      "src": "6454:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<<",
                                    "rightExpression": {
                                      "hexValue": "313132",
                                      "id": 1175,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6466:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_112_by_1",
                                        "typeString": "int_const 112"
                                      },
                                      "value": "112"
                                    },
                                    "src": "6454:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1177,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6453:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "31653439",
                                    "id": 1178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6474:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000_by_1",
                                      "typeString": "int_const 1000...(42 digits omitted)...0000"
                                    },
                                    "value": "1e49"
                                  }
                                ],
                                "id": 1179,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6473:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(42 digits omitted)...0000"
                                }
                              },
                              "src": "6453:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6424:55:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6413:66:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1183,
                        "nodeType": "ExpressionStatement",
                        "src": "6413:66:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1090,
                    "nodeType": "StructuredDocumentation",
                    "src": "5598:156:6",
                    "text": "@notice Calculate average price of a frame\n @param frameKey Timestamp of an arbitary frame \n @return avgPrice Time weighted aveage price"
                  },
                  "functionSelector": "41a8b6f8",
                  "id": 1185,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcPrice",
                  "nameLocation": "5769:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "5783:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "5778:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5778:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5777:15:6"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "avgPrice",
                        "nameLocation": "5820:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "5815:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5815:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5814:15:6"
                  },
                  "scope": 2754,
                  "src": "5760:727:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "6947:462:6",
                    "statements": [
                      {
                        "assignments": [
                          1198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1198,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "6967:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1238,
                            "src": "6962:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1197,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6962:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1200,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1188,
                              "src": "6996:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1199,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "6978:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6978:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6962:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1204,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1198,
                                "src": "7147:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1206,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "7177:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "7177:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1205,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1037,
                                  "src": "7159:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7159:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7147:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54484953204c4f5420495320494e20412050415354204652414d45",
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7195:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                                "typeString": "literal_string \"THIS LOT IS IN A PAST FRAME\""
                              },
                              "value": "THIS LOT IS IN A PAST FRAME"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                                "typeString": "literal_string \"THIS LOT IS IN A PAST FRAME\""
                              }
                            ],
                            "id": 1203,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7139:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7139:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1212,
                        "nodeType": "ExpressionStatement",
                        "src": "7139:86:6"
                      },
                      {
                        "assignments": [
                          1214
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1214,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "7249:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1238,
                            "src": "7244:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1213,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7244:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1218,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1216,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "7268:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1215,
                            "name": "clcLotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "7258:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7258:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7244:34:6"
                      },
                      {
                        "assignments": [
                          1220
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1220,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "7294:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1238,
                            "src": "7289:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1219,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7289:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1225,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1222,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1198,
                              "src": "7307:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1223,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "7317:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1221,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1846,
                            "src": "7300:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7300:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7289:37:6"
                      },
                      {
                        "expression": {
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1226,
                            "name": "cmpltAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "7337:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1227,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "7349:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1229,
                                    "indexExpression": {
                                      "id": 1228,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1198,
                                      "src": "7356:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7349:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1230,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 798,
                                  "src": "7349:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 1232,
                                "indexExpression": {
                                  "id": 1231,
                                  "name": "lotKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1214,
                                  "src": "7371:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7349:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$846_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 1233,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 842,
                              "src": "7349:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1234,
                              "name": "tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "7398:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7349:52:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7337:64:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1237,
                        "nodeType": "ExpressionStatement",
                        "src": "7337:64:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1186,
                    "nodeType": "StructuredDocumentation",
                    "src": "6495:332:6",
                    "text": "@notice Calculate amount required to approve to buy a lot\n @param timestamp Timestamp that determins which frame it is\n @param pairPrice Value is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax\n @return cmpltAmnt complete price of a lot"
                  },
                  "functionSelector": "a4d246ff",
                  "id": 1239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcAmountToApprove",
                  "nameLocation": "6842:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "6866:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "6861:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6861:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1190,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "6882:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "6877:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1189,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6877:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "6898:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "6893:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6893:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6860:47:6"
                  },
                  "returnParameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "cmpltAmnt",
                        "nameLocation": "6936:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "6931:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6931:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6930:16:6"
                  },
                  "scope": 2754,
                  "src": "6833:576:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1293,
                    "nodeType": "Block",
                    "src": "7951:386:6",
                    "statements": [
                      {
                        "assignments": [
                          1252
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1252,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "7970:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1293,
                            "src": "7965:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1251,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7965:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1256,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1254,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1242,
                              "src": "7999:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1253,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "7981:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7981:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7965:44:6"
                      },
                      {
                        "assignments": [
                          1258
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1258,
                            "mutability": "mutable",
                            "name": "tax1",
                            "nameLocation": "8127:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1293,
                            "src": "8122:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1257,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8122:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1271,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1260,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1252,
                              "src": "8141:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1261,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "8151:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1263,
                                    "indexExpression": {
                                      "id": 1262,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1252,
                                      "src": "8158:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8151:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1264,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 798,
                                  "src": "8151:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 1268,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1266,
                                      "name": "pairPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1244,
                                      "src": "8183:9:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1265,
                                    "name": "clcLotKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1060,
                                    "src": "8173:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8173:20:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8151:43:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$846_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 842,
                              "src": "8151:60:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1259,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1846,
                            "src": "8134:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8134:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8122:90:6"
                      },
                      {
                        "assignments": [
                          1273
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1273,
                            "mutability": "mutable",
                            "name": "tax2",
                            "nameLocation": "8228:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1293,
                            "src": "8223:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1272,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8223:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1278,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1275,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1252,
                              "src": "8242:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1276,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1246,
                              "src": "8252:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1274,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1846,
                            "src": "8235:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8235:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8223:38:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1279,
                            "name": "tax1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1258,
                            "src": "8275:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1280,
                            "name": "tax2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "8283:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8275:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 1290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1286,
                              "name": "amnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "8313:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1287,
                                "name": "tax2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1273,
                                "src": "8320:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1288,
                                "name": "tax1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1258,
                                "src": "8325:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8320:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8313:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1291,
                          "nodeType": "ExpressionStatement",
                          "src": "8313:16:6"
                        },
                        "id": 1292,
                        "nodeType": "IfStatement",
                        "src": "8272:57:6",
                        "trueBody": {
                          "expression": {
                            "id": 1284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1282,
                              "name": "amnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "8289:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8296:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8289:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1285,
                          "nodeType": "ExpressionStatement",
                          "src": "8289:8:6"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1240,
                    "nodeType": "StructuredDocumentation",
                    "src": "7417:410:6",
                    "text": "@notice Calculate amount required to change lot's price.\n @dev Calculate difference in tax values with old and new acquisition price\n @param timestamp Timestamp that determins which frame it is\n @param pairPrice Value is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax\n @return amnt complete price of a lot"
                  },
                  "functionSelector": "3656d5ee",
                  "id": 1294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcAmountToApproveForUpdate",
                  "nameLocation": "7842:27:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1242,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "7875:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1294,
                        "src": "7870:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1241,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7870:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1244,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "7891:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1294,
                        "src": "7886:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1243,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7886:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1246,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "7907:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1294,
                        "src": "7902:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1245,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7902:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7869:47:6"
                  },
                  "returnParameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1249,
                        "mutability": "mutable",
                        "name": "amnt",
                        "nameLocation": "7945:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1294,
                        "src": "7940:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7940:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7939:11:6"
                  },
                  "scope": 2754,
                  "src": "7833:504:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1349,
                    "nodeType": "Block",
                    "src": "8835:283:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1305,
                            "name": "openFrames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1303,
                            "src": "8846:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1309,
                                "name": "numOfFrames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1299,
                                "src": "8870:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "8859:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 1306,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8863:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1307,
                                "nodeType": "ArrayTypeName",
                                "src": "8863:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8859:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "8846:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "8846:36:6"
                      },
                      {
                        "body": {
                          "id": 1347,
                          "nodeType": "Block",
                          "src": "8932:179:6",
                          "statements": [
                            {
                              "assignments": [
                                1324
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1324,
                                  "mutability": "mutable",
                                  "name": "frameKey",
                                  "nameLocation": "8952:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1347,
                                  "src": "8947:13:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1323,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8947:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1331,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1325,
                                  "name": "startFrame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1297,
                                  "src": "8963:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1328,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1326,
                                        "name": "period",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 733,
                                        "src": "8975:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1327,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1314,
                                        "src": "8982:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8975:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1329,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8974:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8963:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8947:37:6"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                },
                                "id": 1338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1332,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "9002:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1334,
                                    "indexExpression": {
                                      "id": 1333,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1324,
                                      "src": "9009:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9002:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1335,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 790,
                                  "src": "9002:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1336,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "9028:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "NULL",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 766,
                                  "src": "9028:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "9002:37:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1346,
                              "nodeType": "IfStatement",
                              "src": "8999:101:6",
                              "trueBody": {
                                "id": 1345,
                                "nodeType": "Block",
                                "src": "9041:59:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1343,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1339,
                                          "name": "openFrames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1303,
                                          "src": "9060:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1341,
                                        "indexExpression": {
                                          "id": 1340,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1314,
                                          "src": "9071:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "9060:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1342,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1324,
                                        "src": "9076:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9060:24:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1344,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9060:24:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1317,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1314,
                            "src": "8909:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1318,
                            "name": "numOfFrames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1299,
                            "src": "8914:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8909:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1348,
                        "initializationExpression": {
                          "assignments": [
                            1314
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1314,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8902:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1348,
                              "src": "8897:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1313,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8897:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1316,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8906:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8897:10:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8927:3:6",
                            "subExpression": {
                              "id": 1320,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1314,
                              "src": "8927:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1322,
                          "nodeType": "ExpressionStatement",
                          "src": "8927:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "8893:218:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1295,
                    "nodeType": "StructuredDocumentation",
                    "src": "8345:375:6",
                    "text": "@notice Get created and still open frames\n @dev You can't get (current) frame's index in the framesKeys array,\n @dev so for-loop through the whole array is needed\n @dev other option would be with additional parameter: startIndex\n @param numOfFrames Timestamp that determins which frame it is\n @return openFrames array of frame keys"
                  },
                  "functionSelector": "14aa5a99",
                  "id": 1350,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOpenFrameKeys",
                  "nameLocation": "8735:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1297,
                        "mutability": "mutable",
                        "name": "startFrame",
                        "nameLocation": "8757:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "8752:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1296,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8752:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1299,
                        "mutability": "mutable",
                        "name": "numOfFrames",
                        "nameLocation": "8774:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "8769:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1298,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8769:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8751:35:6"
                  },
                  "returnParameters": {
                    "id": 1304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1303,
                        "mutability": "mutable",
                        "name": "openFrames",
                        "nameLocation": "8824:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "8810:24:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1301,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8810:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1302,
                          "nodeType": "ArrayTypeName",
                          "src": "8810:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8809:26:6"
                  },
                  "scope": 2754,
                  "src": "8726:392:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1563,
                    "nodeType": "Block",
                    "src": "9609:1388:6",
                    "statements": [
                      {
                        "assignments": [
                          1361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1361,
                            "mutability": "mutable",
                            "name": "currentFrame",
                            "nameLocation": "9625:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1563,
                            "src": "9620:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1360,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9620:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1366,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1363,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9658:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9658:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1362,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "9640:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9640:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9620:54:6"
                      },
                      {
                        "expression": {
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1367,
                            "name": "userLots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "9685:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Market.Lot memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "32303030",
                                "id": 1372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9706:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000_by_1",
                                  "typeString": "int_const 2000"
                                },
                                "value": "2000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2000_by_1",
                                  "typeString": "int_const 2000"
                                }
                              ],
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "9696:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct Market.Lot memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 1369,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1368,
                                    "name": "Lot",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 846,
                                    "src": "9700:3:6"
                                  },
                                  "referencedDeclaration": 846,
                                  "src": "9700:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$846_storage_ptr",
                                    "typeString": "struct Market.Lot"
                                  }
                                },
                                "id": 1370,
                                "nodeType": "ArrayTypeName",
                                "src": "9700:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Lot_$846_storage_$dyn_storage_ptr",
                                  "typeString": "struct Market.Lot[]"
                                }
                              }
                            },
                            "id": 1373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9696:15:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Market.Lot memory[] memory"
                            }
                          },
                          "src": "9685:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Market.Lot memory[] memory"
                          }
                        },
                        "id": 1375,
                        "nodeType": "ExpressionStatement",
                        "src": "9685:26:6"
                      },
                      {
                        "assignments": [
                          1378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1378,
                            "mutability": "mutable",
                            "name": "lot",
                            "nameLocation": "9733:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1563,
                            "src": "9722:14:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                              "typeString": "struct Market.Lot"
                            },
                            "typeName": {
                              "id": 1377,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1376,
                                "name": "Lot",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 846,
                                "src": "9722:3:6"
                              },
                              "referencedDeclaration": 846,
                              "src": "9722:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage_ptr",
                                "typeString": "struct Market.Lot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1379,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9722:14:6"
                      },
                      {
                        "assignments": [
                          1381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1381,
                            "mutability": "mutable",
                            "name": "counter",
                            "nameLocation": "9752:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1563,
                            "src": "9747:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1380,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9747:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1383,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9762:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9747:16:6"
                      },
                      {
                        "assignments": [
                          1385
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1385,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "9779:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1563,
                            "src": "9774:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1384,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9774:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1386,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9774:13:6"
                      },
                      {
                        "body": {
                          "id": 1481,
                          "nodeType": "Block",
                          "src": "9831:596:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1397,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1388,
                                  "src": "9850:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "3530",
                                  "id": 1398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9855:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  },
                                  "value": "50"
                                },
                                "src": "9850:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "expression": {
                                  "id": 1419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1412,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1385,
                                    "src": "9920:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1417,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1413,
                                          "name": "currentFrame",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1361,
                                          "src": "9932:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1416,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1414,
                                            "name": "period",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 733,
                                            "src": "9947:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 1415,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1388,
                                            "src": "9954:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9947:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9932:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1418,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9931:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9920:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1420,
                                "nodeType": "ExpressionStatement",
                                "src": "9920:36:6"
                              },
                              "id": 1421,
                              "nodeType": "IfStatement",
                              "src": "9846:110:6",
                              "trueBody": {
                                "expression": {
                                  "id": 1410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1400,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1385,
                                    "src": "9859:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1408,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1401,
                                          "name": "currentFrame",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1361,
                                          "src": "9871:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1407,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1402,
                                            "name": "period",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 733,
                                            "src": "9886:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 1405,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 1403,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1388,
                                                  "src": "9894:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "hexValue": "3530",
                                                  "id": 1404,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "9896:2:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_50_by_1",
                                                    "typeString": "int_const 50"
                                                  },
                                                  "value": "50"
                                                },
                                                "src": "9894:4:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 1406,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "9893:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9886:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9871:28:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1409,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9870:30:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9859:41:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1411,
                                "nodeType": "ExpressionStatement",
                                "src": "9859:41:6"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                },
                                "id": 1428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1422,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "9977:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1424,
                                    "indexExpression": {
                                      "id": 1423,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1385,
                                      "src": "9984:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9977:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1425,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 790,
                                  "src": "9977:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1426,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "10003:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "OPENED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 767,
                                  "src": "10003:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "9977:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1480,
                              "nodeType": "IfStatement",
                              "src": "9973:443:6",
                              "trueBody": {
                                "id": 1479,
                                "nodeType": "Block",
                                "src": "10018:398:6",
                                "statements": [
                                  {
                                    "body": {
                                      "id": 1477,
                                      "nodeType": "Block",
                                      "src": "10092:309:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1455,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1443,
                                              "name": "lot",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1378,
                                              "src": "10115:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                "typeString": "struct Market.Lot memory"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 1444,
                                                    "name": "frames",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 822,
                                                    "src": "10121:6:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                    }
                                                  },
                                                  "id": 1446,
                                                  "indexExpression": {
                                                    "id": 1445,
                                                    "name": "frameKey",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1385,
                                                    "src": "10128:8:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "10121:16:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                    "typeString": "struct Market.Frame storage ref"
                                                  }
                                                },
                                                "id": 1447,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "lots",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 798,
                                                "src": "10121:21:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                                }
                                              },
                                              "id": 1454,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 1448,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 822,
                                                      "src": "10143:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 1450,
                                                    "indexExpression": {
                                                      "id": 1449,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1385,
                                                      "src": "10150:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "10143:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 1451,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "lotKeys",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 793,
                                                  "src": "10143:24:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                  }
                                                },
                                                "id": 1453,
                                                "indexExpression": {
                                                  "id": 1452,
                                                  "name": "j",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1430,
                                                  "src": "10168:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10143:27:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10121:50:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                                "typeString": "struct Market.Lot storage ref"
                                              }
                                            },
                                            "src": "10115:56:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                              "typeString": "struct Market.Lot memory"
                                            }
                                          },
                                          "id": 1456,
                                          "nodeType": "ExpressionStatement",
                                          "src": "10115:56:6"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 1460,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 1457,
                                                "name": "lot",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1378,
                                                "src": "10197:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                  "typeString": "struct Market.Lot memory"
                                                }
                                              },
                                              "id": 1458,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lotOwner",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 840,
                                              "src": "10197:12:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "id": 1459,
                                              "name": "user",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1353,
                                              "src": "10213:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "10197:20:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1476,
                                          "nodeType": "IfStatement",
                                          "src": "10194:187:6",
                                          "trueBody": {
                                            "id": 1475,
                                            "nodeType": "Block",
                                            "src": "10219:162:6",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 1465,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "baseExpression": {
                                                      "id": 1461,
                                                      "name": "userLots",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1358,
                                                      "src": "10246:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct Market.Lot memory[] memory"
                                                      }
                                                    },
                                                    "id": 1463,
                                                    "indexExpression": {
                                                      "id": 1462,
                                                      "name": "counter",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1381,
                                                      "src": "10255:7:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "10246:17:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "id": 1464,
                                                    "name": "lot",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1378,
                                                    "src": "10265:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "src": "10246:22:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                    "typeString": "struct Market.Lot memory"
                                                  }
                                                },
                                                "id": 1466,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10246:22:6"
                                              },
                                              {
                                                "expression": {
                                                  "id": 1468,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "UnaryOperation",
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "src": "10295:10:6",
                                                  "subExpression": {
                                                    "id": 1467,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1381,
                                                    "src": "10295:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1469,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10295:10:6"
                                              },
                                              {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1472,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1470,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1381,
                                                    "src": "10335:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": ">=",
                                                  "rightExpression": {
                                                    "hexValue": "32303030",
                                                    "id": 1471,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10346:4:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2000_by_1",
                                                      "typeString": "int_const 2000"
                                                    },
                                                    "value": "2000"
                                                  },
                                                  "src": "10335:15:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 1474,
                                                "nodeType": "IfStatement",
                                                "src": "10332:25:6",
                                                "trueBody": {
                                                  "id": 1473,
                                                  "nodeType": "Break",
                                                  "src": "10352:5:6"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1439,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1433,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1430,
                                        "src": "10052:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1434,
                                              "name": "frames",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 822,
                                              "src": "10054:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                              }
                                            },
                                            "id": 1436,
                                            "indexExpression": {
                                              "id": 1435,
                                              "name": "frameKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1385,
                                              "src": "10061:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10054:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Frame_$799_storage",
                                              "typeString": "struct Market.Frame storage ref"
                                            }
                                          },
                                          "id": 1437,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lotKeys",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 793,
                                          "src": "10054:24:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 1438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "10054:31:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10052:33:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1478,
                                    "initializationExpression": {
                                      "assignments": [
                                        1430
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 1430,
                                          "mutability": "mutable",
                                          "name": "j",
                                          "nameLocation": "10047:1:6",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 1478,
                                          "src": "10042:6:6",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 1429,
                                            "name": "uint",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10042:4:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 1432,
                                      "initialValue": {
                                        "hexValue": "30",
                                        "id": 1431,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10049:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "10042:8:6"
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "id": 1441,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "10087:3:6",
                                        "subExpression": {
                                          "id": 1440,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1430,
                                          "src": "10087:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1442,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10087:3:6"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "10037:364:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1391,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "9816:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9821:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "9816:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1482,
                        "initializationExpression": {
                          "assignments": [
                            1388
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1388,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9809:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1482,
                              "src": "9804:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1387,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9804:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1390,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 1389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9813:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9804:10:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9826:3:6",
                            "subExpression": {
                              "id": 1394,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1388,
                              "src": "9826:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1396,
                          "nodeType": "ExpressionStatement",
                          "src": "9826:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "9800:627:6"
                      },
                      {
                        "body": {
                          "id": 1561,
                          "nodeType": "Block",
                          "src": "10469:521:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1493,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1385,
                                  "src": "10484:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1498,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1494,
                                        "name": "currentFrame",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1361,
                                        "src": "10496:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1497,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1495,
                                          "name": "period",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 733,
                                          "src": "10511:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 1496,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1484,
                                          "src": "10518:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10511:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10496:23:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1499,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10495:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10484:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1501,
                              "nodeType": "ExpressionStatement",
                              "src": "10484:36:6"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                },
                                "id": 1508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1502,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "10539:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1504,
                                    "indexExpression": {
                                      "id": 1503,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1385,
                                      "src": "10546:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10539:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1505,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 790,
                                  "src": "10539:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1506,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "10565:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "CLOSED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "10565:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "10539:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1560,
                              "nodeType": "IfStatement",
                              "src": "10535:444:6",
                              "trueBody": {
                                "id": 1559,
                                "nodeType": "Block",
                                "src": "10580:399:6",
                                "statements": [
                                  {
                                    "body": {
                                      "id": 1557,
                                      "nodeType": "Block",
                                      "src": "10654:310:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1535,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1523,
                                              "name": "lot",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1378,
                                              "src": "10677:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                "typeString": "struct Market.Lot memory"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 1524,
                                                    "name": "frames",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 822,
                                                    "src": "10683:6:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                    }
                                                  },
                                                  "id": 1526,
                                                  "indexExpression": {
                                                    "id": 1525,
                                                    "name": "frameKey",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1385,
                                                    "src": "10690:8:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "10683:16:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                    "typeString": "struct Market.Frame storage ref"
                                                  }
                                                },
                                                "id": 1527,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "lots",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 798,
                                                "src": "10683:21:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                                }
                                              },
                                              "id": 1534,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 1528,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 822,
                                                      "src": "10705:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 1530,
                                                    "indexExpression": {
                                                      "id": 1529,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1385,
                                                      "src": "10712:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "10705:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 1531,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "lotKeys",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 793,
                                                  "src": "10705:24:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                  }
                                                },
                                                "id": 1533,
                                                "indexExpression": {
                                                  "id": 1532,
                                                  "name": "j",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1510,
                                                  "src": "10730:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10705:27:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10683:50:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                                "typeString": "struct Market.Lot storage ref"
                                              }
                                            },
                                            "src": "10677:56:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                              "typeString": "struct Market.Lot memory"
                                            }
                                          },
                                          "id": 1536,
                                          "nodeType": "ExpressionStatement",
                                          "src": "10677:56:6"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 1540,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 1537,
                                                "name": "lot",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1378,
                                                "src": "10759:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                  "typeString": "struct Market.Lot memory"
                                                }
                                              },
                                              "id": 1538,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lotOwner",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 840,
                                              "src": "10759:12:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "id": 1539,
                                              "name": "user",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1353,
                                              "src": "10775:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "10759:20:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1556,
                                          "nodeType": "IfStatement",
                                          "src": "10756:188:6",
                                          "trueBody": {
                                            "id": 1555,
                                            "nodeType": "Block",
                                            "src": "10781:163:6",
                                            "statements": [
                                              {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1543,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1541,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1381,
                                                    "src": "10811:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": ">=",
                                                  "rightExpression": {
                                                    "hexValue": "32303030",
                                                    "id": 1542,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10822:4:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2000_by_1",
                                                      "typeString": "int_const 2000"
                                                    },
                                                    "value": "2000"
                                                  },
                                                  "src": "10811:15:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 1545,
                                                "nodeType": "IfStatement",
                                                "src": "10808:25:6",
                                                "trueBody": {
                                                  "id": 1544,
                                                  "nodeType": "Break",
                                                  "src": "10828:5:6"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "id": 1550,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "baseExpression": {
                                                      "id": 1546,
                                                      "name": "userLots",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1358,
                                                      "src": "10860:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct Market.Lot memory[] memory"
                                                      }
                                                    },
                                                    "id": 1548,
                                                    "indexExpression": {
                                                      "id": 1547,
                                                      "name": "counter",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1381,
                                                      "src": "10869:7:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "10860:17:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "id": 1549,
                                                    "name": "lot",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1378,
                                                    "src": "10879:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "src": "10860:22:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                                                    "typeString": "struct Market.Lot memory"
                                                  }
                                                },
                                                "id": 1551,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10860:22:6"
                                              },
                                              {
                                                "expression": {
                                                  "id": 1553,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "UnaryOperation",
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "src": "10909:10:6",
                                                  "subExpression": {
                                                    "id": 1552,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1381,
                                                    "src": "10909:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1554,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10909:10:6"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1519,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1513,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1510,
                                        "src": "10614:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1514,
                                              "name": "frames",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 822,
                                              "src": "10616:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                              }
                                            },
                                            "id": 1516,
                                            "indexExpression": {
                                              "id": 1515,
                                              "name": "frameKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1385,
                                              "src": "10623:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10616:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Frame_$799_storage",
                                              "typeString": "struct Market.Frame storage ref"
                                            }
                                          },
                                          "id": 1517,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lotKeys",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 793,
                                          "src": "10616:24:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 1518,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "10616:31:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10614:33:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1558,
                                    "initializationExpression": {
                                      "assignments": [
                                        1510
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 1510,
                                          "mutability": "mutable",
                                          "name": "j",
                                          "nameLocation": "10609:1:6",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 1558,
                                          "src": "10604:6:6",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 1509,
                                            "name": "uint",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10604:4:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 1512,
                                      "initialValue": {
                                        "hexValue": "30",
                                        "id": 1511,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10611:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "10604:8:6"
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "id": 1521,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "10649:3:6",
                                        "subExpression": {
                                          "id": 1520,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1510,
                                          "src": "10649:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1522,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10649:3:6"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "10599:365:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1487,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "10455:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3439",
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10460:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_49_by_1",
                              "typeString": "int_const 49"
                            },
                            "value": "49"
                          },
                          "src": "10455:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1562,
                        "initializationExpression": {
                          "assignments": [
                            1484
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1484,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "10448:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1562,
                              "src": "10443:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1483,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10443:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1486,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10452:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10443:10:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10464:3:6",
                            "subExpression": {
                              "id": 1490,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "10464:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1492,
                          "nodeType": "ExpressionStatement",
                          "src": "10464:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "10439:551:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1351,
                    "nodeType": "StructuredDocumentation",
                    "src": "9126:397:6",
                    "text": "@notice Get users lots in the nex 50 frames and previous 50 frames\n @dev First version, it works, but need code optimisation probably :P\n @param user User's address\n @return userLots Returns array of users lots (whole structs)\n @dev Array's size is 100 no mather how many lots this user actually has. \n @dev So the results have to be filtered before use"
                  },
                  "functionSelector": "659d0ca0",
                  "id": 1564,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserLots",
                  "nameLocation": "9538:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1353,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "9558:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1564,
                        "src": "9550:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9550:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9549:14:6"
                  },
                  "returnParameters": {
                    "id": 1359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1358,
                        "mutability": "mutable",
                        "name": "userLots",
                        "nameLocation": "9600:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1564,
                        "src": "9587:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Lot_$846_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Market.Lot[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1356,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1355,
                              "name": "Lot",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 846,
                              "src": "9587:3:6"
                            },
                            "referencedDeclaration": 846,
                            "src": "9587:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lot_$846_storage_ptr",
                              "typeString": "struct Market.Lot"
                            }
                          },
                          "id": 1357,
                          "nodeType": "ArrayTypeName",
                          "src": "9587:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Lot_$846_storage_$dyn_storage_ptr",
                            "typeString": "struct Market.Lot[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9586:23:6"
                  },
                  "scope": 2754,
                  "src": "9529:1468:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1577,
                    "nodeType": "Block",
                    "src": "11407:49:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1572,
                              "name": "userFrames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 827,
                              "src": "11425:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                "typeString": "mapping(address => uint256[] storage ref)"
                              }
                            },
                            "id": 1574,
                            "indexExpression": {
                              "id": 1573,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "11436:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11425:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11425:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1571,
                        "id": 1576,
                        "nodeType": "Return",
                        "src": "11418:30:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1565,
                    "nodeType": "StructuredDocumentation",
                    "src": "11192:139:6",
                    "text": "@notice Get number of frame's that the address has bought lots in\n @param user User's address\n @return number of frames"
                  },
                  "functionSelector": "0ef19273",
                  "id": 1578,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumOfUserFrames",
                  "nameLocation": "11346:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1567,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "11373:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1578,
                        "src": "11365:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11365:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11364:14:6"
                  },
                  "returnParameters": {
                    "id": 1571,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1570,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1578,
                        "src": "11402:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1569,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11402:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11401:6:6"
                  },
                  "scope": 2754,
                  "src": "11337:119:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1591,
                    "nodeType": "Block",
                    "src": "11668:42:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1587,
                            "name": "userFrames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "11686:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 1589,
                          "indexExpression": {
                            "id": 1588,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1581,
                            "src": "11697:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11686:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1586,
                        "id": 1590,
                        "nodeType": "Return",
                        "src": "11679:23:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1579,
                    "nodeType": "StructuredDocumentation",
                    "src": "11464:123:6",
                    "text": "@notice Get frame's that the address has bought lots in\n @param user User's address\n @return frame keys"
                  },
                  "functionSelector": "9495833c",
                  "id": 1592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserFrames",
                  "nameLocation": "11602:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1581,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "11624:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1592,
                        "src": "11616:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1580,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11616:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11615:14:6"
                  },
                  "returnParameters": {
                    "id": 1586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1585,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1592,
                        "src": "11652:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1583,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11652:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1584,
                          "nodeType": "ArrayTypeName",
                          "src": "11652:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11651:15:6"
                  },
                  "scope": 2754,
                  "src": "11593:117:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1610,
                    "nodeType": "Block",
                    "src": "11933:72:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1603,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "11968:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1605,
                              "indexExpression": {
                                "id": 1604,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1595,
                                "src": "11975:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11968:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1606,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lots",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 798,
                            "src": "11968:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                              "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                            }
                          },
                          "id": 1608,
                          "indexExpression": {
                            "id": 1607,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1597,
                            "src": "11990:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11968:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$846_storage",
                            "typeString": "struct Market.Lot storage ref"
                          }
                        },
                        "functionReturnParameters": 1602,
                        "id": 1609,
                        "nodeType": "Return",
                        "src": "11961:36:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1593,
                    "nodeType": "StructuredDocumentation",
                    "src": "11718:131:6",
                    "text": "@notice Get lot struct\n @param frameKey Frame's timestamp\n @param lotKey lot's key \n @return lot struct"
                  },
                  "functionSelector": "6f1aefc3",
                  "id": 1611,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLot",
                  "nameLocation": "11864:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1595,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "11876:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "11871:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1594,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11871:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1597,
                        "mutability": "mutable",
                        "name": "lotKey",
                        "nameLocation": "11891:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "11886:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1596,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11886:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11870:28:6"
                  },
                  "returnParameters": {
                    "id": 1602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1601,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "11922:10:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lot_$846_memory_ptr",
                          "typeString": "struct Market.Lot"
                        },
                        "typeName": {
                          "id": 1600,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1599,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 846,
                            "src": "11922:3:6"
                          },
                          "referencedDeclaration": 846,
                          "src": "11922:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$846_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11921:12:6"
                  },
                  "scope": 2754,
                  "src": "11855:150:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1628,
                    "nodeType": "Block",
                    "src": "12253:74:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1621,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "12288:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1623,
                              "indexExpression": {
                                "id": 1622,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1614,
                                "src": "12295:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12288:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1624,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lotKeys",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 793,
                            "src": "12288:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1626,
                          "indexExpression": {
                            "id": 1625,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1616,
                            "src": "12313:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12288:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1620,
                        "id": 1627,
                        "nodeType": "Return",
                        "src": "12281:38:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1612,
                    "nodeType": "StructuredDocumentation",
                    "src": "12013:162:6",
                    "text": "@notice Get lotKey from index in lotKeys array\n @param frameKey Frame's timestamp\n @param index frameKeys array index \n @return lotKey"
                  },
                  "functionSelector": "3e16bc20",
                  "id": 1629,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLotKey",
                  "nameLocation": "12190:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1617,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1614,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "12205:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "12200:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1613,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12200:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1616,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "12220:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "12215:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1615,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12215:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12199:27:6"
                  },
                  "returnParameters": {
                    "id": 1620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1619,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "12248:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12248:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12247:6:6"
                  },
                  "scope": 2754,
                  "src": "12181:146:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1643,
                    "nodeType": "Block",
                    "src": "12523:74:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1637,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "12558:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1639,
                              "indexExpression": {
                                "id": 1638,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1632,
                                "src": "12565:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12558:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lotKeys",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 793,
                            "src": "12558:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12558:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1636,
                        "id": 1642,
                        "nodeType": "Return",
                        "src": "12551:38:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1630,
                    "nodeType": "StructuredDocumentation",
                    "src": "12335:117:6",
                    "text": "@notice Get no. of created lots in a frame \n @param frameKey Frame's timestamp\n @return lot count"
                  },
                  "functionSelector": "830ab119",
                  "id": 1644,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLotsCount",
                  "nameLocation": "12467:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1632,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "12485:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1644,
                        "src": "12480:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1631,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12480:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12479:15:6"
                  },
                  "returnParameters": {
                    "id": 1636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1635,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1644,
                        "src": "12518:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1634,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12518:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12517:6:6"
                  },
                  "scope": 2754,
                  "src": "12458:139:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1657,
                    "nodeType": "Block",
                    "src": "12990:79:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1652,
                              "name": "frames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "13033:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                              }
                            },
                            "id": 1654,
                            "indexExpression": {
                              "id": 1653,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1647,
                              "src": "13040:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13033:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Frame_$799_storage",
                              "typeString": "struct Market.Frame storage ref"
                            }
                          },
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardFund",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 777,
                          "src": "13033:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1651,
                        "id": 1656,
                        "nodeType": "Return",
                        "src": "13026:34:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1645,
                    "nodeType": "StructuredDocumentation",
                    "src": "12605:310:6",
                    "text": "@notice Get frame's award amount (accumulation of different lot taxes)\n @notice Remaining tax of a lot owner get's returned after a sale (change of ownership). So the award amount isn't for sure untill the frame get's closed.\n @param frameKey Frame's timestamp\n @return award amount"
                  },
                  "functionSelector": "c84993af",
                  "id": 1658,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRewardAmount",
                  "nameLocation": "12930:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1648,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1647,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "12951:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1658,
                        "src": "12946:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1646,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12946:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12945:15:6"
                  },
                  "returnParameters": {
                    "id": 1651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1650,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1658,
                        "src": "12984:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1649,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12984:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12983:6:6"
                  },
                  "scope": 2754,
                  "src": "12921:148:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1667,
                    "nodeType": "Block",
                    "src": "13206:43:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1664,
                            "name": "framesKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "13224:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13224:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1663,
                        "id": 1666,
                        "nodeType": "Return",
                        "src": "13217:24:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1659,
                    "nodeType": "StructuredDocumentation",
                    "src": "13077:63:6",
                    "text": "@notice Get number of frames\n @return number frames"
                  },
                  "functionSelector": "89da88a3",
                  "id": 1668,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumberOfFrameKeys",
                  "nameLocation": "13155:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1660,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13175:2:6"
                  },
                  "returnParameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1662,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1668,
                        "src": "13201:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1661,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13201:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13200:6:6"
                  },
                  "scope": 2754,
                  "src": "13146:103:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1725,
                    "nodeType": "Block",
                    "src": "13488:472:6",
                    "statements": [
                      {
                        "assignments": [
                          1677
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1677,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "13549:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1725,
                            "src": "13544:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1676,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13544:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1681,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1679,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "13578:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1678,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "13560:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13560:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13544:44:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SFrame_$769",
                            "typeString": "enum Market.SFrame"
                          },
                          "id": 1688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1682,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "13636:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1684,
                              "indexExpression": {
                                "id": 1683,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "13643:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13636:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1685,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 790,
                            "src": "13636:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1686,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "13662:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 1687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NULL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 766,
                            "src": "13662:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "13636:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1691,
                        "nodeType": "IfStatement",
                        "src": "13632:58:6",
                        "trueBody": {
                          "expression": {
                            "id": 1689,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1677,
                            "src": "13682:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1675,
                          "id": 1690,
                          "nodeType": "Return",
                          "src": "13675:15:6"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1693,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "13709:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1695,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "13739:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "13739:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1694,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1037,
                                  "src": "13721:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13721:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13709:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d4520494e2050415354",
                              "id": 1699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13757:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                                "typeString": "literal_string \"FRAME IN PAST\""
                              },
                              "value": "FRAME IN PAST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                                "typeString": "literal_string \"FRAME IN PAST\""
                              }
                            ],
                            "id": 1692,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13701:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13701:72:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1701,
                        "nodeType": "ExpressionStatement",
                        "src": "13701:72:6"
                      },
                      {
                        "expression": {
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1702,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "13805:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1704,
                              "indexExpression": {
                                "id": 1703,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "13812:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13805:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1705,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "frameKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 771,
                            "src": "13805:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1706,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1677,
                            "src": "13833:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13805:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1708,
                        "nodeType": "ExpressionStatement",
                        "src": "13805:36:6"
                      },
                      {
                        "expression": {
                          "id": 1715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1709,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "13852:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1711,
                              "indexExpression": {
                                "id": 1710,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "13859:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13852:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1712,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 790,
                            "src": "13852:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1713,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "13877:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 1714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "OPENED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 767,
                            "src": "13877:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "13852:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SFrame_$769",
                            "typeString": "enum Market.SFrame"
                          }
                        },
                        "id": 1716,
                        "nodeType": "ExpressionStatement",
                        "src": "13852:38:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1720,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1677,
                              "src": "13917:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1717,
                              "name": "framesKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 830,
                              "src": "13901:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "13901:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13901:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1722,
                        "nodeType": "ExpressionStatement",
                        "src": "13901:25:6"
                      },
                      {
                        "expression": {
                          "id": 1723,
                          "name": "frameKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "13944:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1675,
                        "id": 1724,
                        "nodeType": "Return",
                        "src": "13937:15:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1669,
                    "nodeType": "StructuredDocumentation",
                    "src": "13257:160:6",
                    "text": "@notice Create a frame\n @param timestamp In second.\n @return frameTimestamp Frame's key (timestamp that indicated the beggining of a frame)."
                  },
                  "id": 1726,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrCreateFrame",
                  "nameLocation": "13432:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1671,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "13454:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1726,
                        "src": "13449:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1670,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13449:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13448:16:6"
                  },
                  "returnParameters": {
                    "id": 1675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1674,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1726,
                        "src": "13483:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13483:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13482:6:6"
                  },
                  "scope": 2754,
                  "src": "13423:537:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1785,
                    "nodeType": "Block",
                    "src": "14202:319:6",
                    "statements": [
                      {
                        "assignments": [
                          1737
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1737,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "14218:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1785,
                            "src": "14213:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1736,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14213:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1741,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1739,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "14237:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1738,
                            "name": "clcLotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "14227:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14227:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14213:34:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SLot_$834",
                            "typeString": "enum Market.SLot"
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1742,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "14262:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1744,
                                  "indexExpression": {
                                    "id": 1743,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1729,
                                    "src": "14269:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14262:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1745,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "14262:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1747,
                              "indexExpression": {
                                "id": 1746,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1737,
                                "src": "14284:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14262:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1748,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 845,
                            "src": "14262:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$834",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1749,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "14301:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$834_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NULL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 831,
                            "src": "14301:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$834",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "14262:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1754,
                        "nodeType": "IfStatement",
                        "src": "14258:67:6",
                        "trueBody": {
                          "expression": {
                            "id": 1752,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1737,
                            "src": "14319:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1735,
                          "id": 1753,
                          "nodeType": "Return",
                          "src": "14312:13:6"
                        }
                      },
                      {
                        "expression": {
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1755,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "14336:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1757,
                                  "indexExpression": {
                                    "id": 1756,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1729,
                                    "src": "14343:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14336:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1758,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "14336:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1760,
                              "indexExpression": {
                                "id": 1759,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1737,
                                "src": "14358:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14336:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "frameKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 836,
                            "src": "14336:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1762,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1729,
                            "src": "14377:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14336:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1764,
                        "nodeType": "ExpressionStatement",
                        "src": "14336:49:6"
                      },
                      {
                        "expression": {
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1765,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "14396:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1767,
                                  "indexExpression": {
                                    "id": 1766,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1729,
                                    "src": "14403:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14396:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1768,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "14396:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1770,
                              "indexExpression": {
                                "id": 1769,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1737,
                                "src": "14418:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14396:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1771,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lotKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 838,
                            "src": "14396:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1772,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1737,
                            "src": "14435:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14396:45:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1774,
                        "nodeType": "ExpressionStatement",
                        "src": "14396:45:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1780,
                              "name": "lotKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1737,
                              "src": "14482:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1775,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "14452:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 1777,
                                "indexExpression": {
                                  "id": 1776,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1729,
                                  "src": "14459:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14452:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 1778,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lotKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 793,
                              "src": "14452:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "14452:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14452:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1782,
                        "nodeType": "ExpressionStatement",
                        "src": "14452:37:6"
                      },
                      {
                        "expression": {
                          "id": 1783,
                          "name": "lotKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1737,
                          "src": "14507:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1735,
                        "id": 1784,
                        "nodeType": "Return",
                        "src": "14500:13:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1727,
                    "nodeType": "StructuredDocumentation",
                    "src": "13968:151:6",
                    "text": "@notice Create a lot\n @param frameKey Frame's timestamp\n @param pairPrice Price is the trading pair's price\n @return lotKey"
                  },
                  "id": 1786,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrCreateLot",
                  "nameLocation": "14134:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1732,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1729,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "14154:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1786,
                        "src": "14149:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1728,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14149:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1731,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "14169:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1786,
                        "src": "14164:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1730,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14164:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14148:31:6"
                  },
                  "returnParameters": {
                    "id": 1735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1734,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1786,
                        "src": "14197:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1733,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14197:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14196:6:6"
                  },
                  "scope": 2754,
                  "src": "14125:396:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1845,
                    "nodeType": "Block",
                    "src": "14616:314:6",
                    "statements": [
                      {
                        "assignments": [
                          1796
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1796,
                            "mutability": "mutable",
                            "name": "dFrame",
                            "nameLocation": "14645:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1845,
                            "src": "14640:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1795,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14640:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1809,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1798,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "14673:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1799,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "14673:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1797,
                                    "name": "clcFrameTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1037,
                                    "src": "14655:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14655:34:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "id": 1801,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "14693:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1802,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14692:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14655:45:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1804,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14654:47:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "expression": {
                                  "id": 1805,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14705:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14705:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1807,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14704:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14654:67:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14640:81:6"
                      },
                      {
                        "assignments": [
                          1811
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1811,
                            "mutability": "mutable",
                            "name": "dFrameP",
                            "nameLocation": "14738:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1845,
                            "src": "14733:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1810,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14733:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1817,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1812,
                              "name": "scalar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "14748:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1813,
                              "name": "dFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1796,
                              "src": "14757:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14748:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1815,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "14766:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14748:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14733:39:6"
                      },
                      {
                        "expression": {
                          "id": 1824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1818,
                            "name": "tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1793,
                            "src": "14783:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1819,
                                "name": "acquisitionPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1790,
                                "src": "14789:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1820,
                                "name": "taxMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "14808:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14789:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030303030",
                              "id": 1822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14820:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "100000"
                            },
                            "src": "14789:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14783:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1825,
                        "nodeType": "ExpressionStatement",
                        "src": "14783:43:6"
                      },
                      {
                        "expression": {
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1826,
                            "name": "tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1793,
                            "src": "14837:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1827,
                                    "name": "tax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1793,
                                    "src": "14844:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1829,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1788,
                                            "src": "14863:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 1828,
                                          "name": "clcFramesLeft",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1089,
                                          "src": "14849:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256) view returns (uint256)"
                                          }
                                        },
                                        "id": 1830,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "14849:23:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1831,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "14848:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14844:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1835,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1833,
                                          "name": "tax",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1793,
                                          "src": "14877:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 1834,
                                          "name": "dFrameP",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1811,
                                          "src": "14883:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "14877:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 1836,
                                        "name": "scalar",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 765,
                                        "src": "14893:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14877:22:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1838,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14876:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14844:56:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1840,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14843:58:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14837:64:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1842,
                        "nodeType": "ExpressionStatement",
                        "src": "14837:64:6"
                      },
                      {
                        "expression": {
                          "id": 1843,
                          "name": "tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1793,
                          "src": "14919:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1794,
                        "id": 1844,
                        "nodeType": "Return",
                        "src": "14912:10:6"
                      }
                    ]
                  },
                  "id": 1846,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcTax",
                  "nameLocation": "14538:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1791,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1788,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "14550:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1846,
                        "src": "14545:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1787,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14545:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1790,
                        "mutability": "mutable",
                        "name": "acquisitionPrice",
                        "nameLocation": "14565:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1846,
                        "src": "14560:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1789,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14560:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14544:38:6"
                  },
                  "returnParameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1793,
                        "mutability": "mutable",
                        "name": "tax",
                        "nameLocation": "14611:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1846,
                        "src": "14606:8:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1792,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14606:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14605:10:6"
                  },
                  "scope": 2754,
                  "src": "14529:401:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2108,
                    "nodeType": "Block",
                    "src": "15298:2369:6",
                    "statements": [
                      {
                        "assignments": [
                          1857
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1857,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "15356:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2108,
                            "src": "15351:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1856,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15351:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1861,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1859,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1849,
                              "src": "15385:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1858,
                            "name": "getOrCreateFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1726,
                            "src": "15368:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 1860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15368:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15351:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1863,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "15426:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1864,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1853,
                              "src": "15436:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1862,
                            "name": "minTaxCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "15414:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) view"
                            }
                          },
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15414:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1866,
                        "nodeType": "ExpressionStatement",
                        "src": "15414:31:6"
                      },
                      {
                        "assignments": [
                          1868
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1868,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "15479:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2108,
                            "src": "15474:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1867,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15474:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1873,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1870,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "15503:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1871,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1851,
                              "src": "15513:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1869,
                            "name": "getOrCreateLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1786,
                            "src": "15488:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15488:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15474:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1875,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "15542:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1877,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "15572:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1878,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "15572:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1876,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1037,
                                  "src": "15554:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15554:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15542:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c4f5420494e2050415354",
                              "id": 1881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15590:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                                "typeString": "literal_string \"LOT IN PAST\""
                              },
                              "value": "LOT IN PAST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                                "typeString": "literal_string \"LOT IN PAST\""
                              }
                            ],
                            "id": 1874,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15534:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15534:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1883,
                        "nodeType": "ExpressionStatement",
                        "src": "15534:70:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1885,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15623:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15623:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1887,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 822,
                                        "src": "15637:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1889,
                                      "indexExpression": {
                                        "id": 1888,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1857,
                                        "src": "15644:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15637:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1890,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 798,
                                    "src": "15637:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 1892,
                                  "indexExpression": {
                                    "id": 1891,
                                    "name": "lotKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1868,
                                    "src": "15659:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15637:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$846_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 1893,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 840,
                                "src": "15637:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15623:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "414c5245414459204f574e4552",
                              "id": 1895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15677:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                                "typeString": "literal_string \"ALREADY OWNER\""
                              },
                              "value": "ALREADY OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                                "typeString": "literal_string \"ALREADY OWNER\""
                              }
                            ],
                            "id": 1884,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15615:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15615:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1897,
                        "nodeType": "ExpressionStatement",
                        "src": "15615:78:6"
                      },
                      {
                        "assignments": [
                          1899
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1899,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "15711:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2108,
                            "src": "15706:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1898,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15706:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1904,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1901,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "15724:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1902,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1853,
                              "src": "15734:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1900,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1846,
                            "src": "15717:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15717:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15706:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1908,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "15871:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "15871:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1912,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "15891:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Market_$2754",
                                          "typeString": "contract Market"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Market_$2754",
                                          "typeString": "contract Market"
                                        }
                                      ],
                                      "id": 1911,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15883:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1910,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15883:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1913,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15883:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1906,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "15845:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "15845:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15845:52:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1915,
                                              "name": "frames",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 822,
                                              "src": "15902:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                              }
                                            },
                                            "id": 1917,
                                            "indexExpression": {
                                              "id": 1916,
                                              "name": "frameKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1857,
                                              "src": "15909:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15902:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Frame_$799_storage",
                                              "typeString": "struct Market.Frame storage ref"
                                            }
                                          },
                                          "id": 1918,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lots",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 798,
                                          "src": "15902:21:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                          }
                                        },
                                        "id": 1920,
                                        "indexExpression": {
                                          "id": 1919,
                                          "name": "lotKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1868,
                                          "src": "15924:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15902:29:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Lot_$846_storage",
                                          "typeString": "struct Market.Lot storage ref"
                                        }
                                      },
                                      "id": 1921,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "acquisitionPrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 842,
                                      "src": "15902:46:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 1922,
                                      "name": "tax",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1899,
                                      "src": "15951:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15902:52:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1924,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15901:54:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15845:110:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "415050524f56454420414d4f554e5420544f4f20534d414c4c",
                              "id": 1926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15957:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                              },
                              "value": "APPROVED AMOUNT TOO SMALL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                              }
                            ],
                            "id": 1905,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15837:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15837:148:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1928,
                        "nodeType": "ExpressionStatement",
                        "src": "15837:148:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1932,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16079:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16079:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1936,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16099:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2754",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2754",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 1935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16091:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1934,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16091:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16091:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1938,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 822,
                                            "src": "16107:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1940,
                                          "indexExpression": {
                                            "id": 1939,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1857,
                                            "src": "16114:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16107:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$799_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1941,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 798,
                                        "src": "16107:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1943,
                                      "indexExpression": {
                                        "id": 1942,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1868,
                                        "src": "16129:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16107:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$846_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1944,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "acquisitionPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 842,
                                    "src": "16107:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1945,
                                    "name": "tax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1899,
                                    "src": "16156:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16107:52:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1947,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16106:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1929,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "16050:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "16050:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16050:111:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1949,
                        "nodeType": "ExpressionStatement",
                        "src": "16050:111:6"
                      },
                      {
                        "expression": {
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1950,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "16172:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1952,
                              "indexExpression": {
                                "id": 1951,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "16179:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16172:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1953,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardFund",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 777,
                            "src": "16172:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1954,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "16203:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1956,
                                    "indexExpression": {
                                      "id": 1955,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1857,
                                      "src": "16210:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16203:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1957,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "16203:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1958,
                                  "name": "tax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1899,
                                  "src": "16233:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16203:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1960,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16202:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16172:65:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1962,
                        "nodeType": "ExpressionStatement",
                        "src": "16172:65:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SLot_$834",
                            "typeString": "enum Market.SLot"
                          },
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1963,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "16309:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1965,
                                  "indexExpression": {
                                    "id": 1964,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1857,
                                    "src": "16316:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16309:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1966,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "16309:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1968,
                              "indexExpression": {
                                "id": 1967,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1868,
                                "src": "16331:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16309:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1969,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 845,
                            "src": "16309:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$834",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1970,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "16348:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$834_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 1971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BOUGHT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 832,
                            "src": "16348:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$834",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "16309:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2032,
                          "nodeType": "Block",
                          "src": "16770:76:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 2030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2021,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "16785:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2023,
                                        "indexExpression": {
                                          "id": 2022,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1857,
                                          "src": "16792:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16785:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2024,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lots",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 798,
                                      "src": "16785:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                      }
                                    },
                                    "id": 2026,
                                    "indexExpression": {
                                      "id": 2025,
                                      "name": "lotKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1868,
                                      "src": "16807:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16785:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Lot_$846_storage",
                                      "typeString": "struct Market.Lot storage ref"
                                    }
                                  },
                                  "id": 2027,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 845,
                                  "src": "16785:35:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SLot_$834",
                                    "typeString": "enum Market.SLot"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2028,
                                    "name": "SLot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 834,
                                    "src": "16823:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SLot_$834_$",
                                      "typeString": "type(enum Market.SLot)"
                                    }
                                  },
                                  "id": 2029,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "BOUGHT",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 832,
                                  "src": "16823:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SLot_$834",
                                    "typeString": "enum Market.SLot"
                                  }
                                },
                                "src": "16785:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$834",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "id": 2031,
                              "nodeType": "ExpressionStatement",
                              "src": "16785:49:6"
                            }
                          ]
                        },
                        "id": 2033,
                        "nodeType": "IfStatement",
                        "src": "16305:541:6",
                        "trueBody": {
                          "id": 2020,
                          "nodeType": "Block",
                          "src": "16361:394:6",
                          "statements": [
                            {
                              "assignments": [
                                1974
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1974,
                                  "mutability": "mutable",
                                  "name": "taxRetrn",
                                  "nameLocation": "16381:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2020,
                                  "src": "16376:13:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1973,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16376:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1985,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1976,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1857,
                                    "src": "16399:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1977,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 822,
                                            "src": "16409:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1979,
                                          "indexExpression": {
                                            "id": 1978,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1857,
                                            "src": "16416:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16409:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$799_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1980,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 798,
                                        "src": "16409:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1982,
                                      "indexExpression": {
                                        "id": 1981,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1868,
                                        "src": "16431:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16409:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$846_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1983,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "acquisitionPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 842,
                                    "src": "16409:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1975,
                                  "name": "clcTax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1846,
                                  "src": "16392:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16392:64:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16376:80:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1989,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 822,
                                            "src": "16526:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1991,
                                          "indexExpression": {
                                            "id": 1990,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1857,
                                            "src": "16533:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16526:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$799_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1992,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 798,
                                        "src": "16526:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1994,
                                      "indexExpression": {
                                        "id": 1993,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1868,
                                        "src": "16548:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16526:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$846_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1995,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lotOwner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 840,
                                    "src": "16526:38:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2004,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1996,
                                          "name": "taxRetrn",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1974,
                                          "src": "16567:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1997,
                                                  "name": "frames",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 822,
                                                  "src": "16578:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                  }
                                                },
                                                "id": 1999,
                                                "indexExpression": {
                                                  "id": 1998,
                                                  "name": "frameKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1857,
                                                  "src": "16585:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "16578:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                  "typeString": "struct Market.Frame storage ref"
                                                }
                                              },
                                              "id": 2000,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lots",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 798,
                                              "src": "16578:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                              }
                                            },
                                            "id": 2002,
                                            "indexExpression": {
                                              "id": 2001,
                                              "name": "lotKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1868,
                                              "src": "16600:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "16578:29:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Lot_$846_storage",
                                              "typeString": "struct Market.Lot storage ref"
                                            }
                                          },
                                          "id": 2003,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "acquisitionPrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 842,
                                          "src": "16578:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "16567:57:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2005,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "16566:59:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1986,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "16501:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26,
                                  "src": "16501:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16501:125:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2007,
                              "nodeType": "ExpressionStatement",
                              "src": "16501:125:6"
                            },
                            {
                              "expression": {
                                "id": 2018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2008,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "16675:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2010,
                                    "indexExpression": {
                                      "id": 2009,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1857,
                                      "src": "16682:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16675:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2011,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "16675:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2017,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2012,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 822,
                                        "src": "16705:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2014,
                                      "indexExpression": {
                                        "id": 2013,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1857,
                                        "src": "16712:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16705:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2015,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 777,
                                    "src": "16705:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2016,
                                    "name": "taxRetrn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1974,
                                    "src": "16735:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16705:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16675:68:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2019,
                              "nodeType": "ExpressionStatement",
                              "src": "16675:68:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2034,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "16887:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2036,
                                  "indexExpression": {
                                    "id": 2035,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1857,
                                    "src": "16894:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16887:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2037,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "16887:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2039,
                              "indexExpression": {
                                "id": 2038,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1868,
                                "src": "16909:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16887:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lotOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 840,
                            "src": "16887:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2041,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16928:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16928:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16887:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2044,
                        "nodeType": "ExpressionStatement",
                        "src": "16887:51:6"
                      },
                      {
                        "expression": {
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2045,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "16949:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2047,
                                  "indexExpression": {
                                    "id": 2046,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1857,
                                    "src": "16956:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16949:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2048,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "16949:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2050,
                              "indexExpression": {
                                "id": 2049,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1868,
                                "src": "16971:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16949:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2051,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "acquisitionPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 842,
                            "src": "16949:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2052,
                            "name": "acqPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "16998:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16949:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2054,
                        "nodeType": "ExpressionStatement",
                        "src": "16949:57:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2060,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "17045:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2055,
                                "name": "userFrames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 827,
                                "src": "17017:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2058,
                              "indexExpression": {
                                "expression": {
                                  "id": 2056,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17028:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "17028:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17017:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "17017:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17017:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2062,
                        "nodeType": "ExpressionStatement",
                        "src": "17017:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2063,
                            "name": "updateFramePrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "17067:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17067:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2065,
                        "nodeType": "ExpressionStatement",
                        "src": "17067:19:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2067,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "17116:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2068,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "17153:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2070,
                                "indexExpression": {
                                  "id": 2069,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "17160:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17153:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2071,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 773,
                              "src": "17153:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2072,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "17218:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2074,
                                "indexExpression": {
                                  "id": 2073,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "17225:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17218:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2075,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 775,
                              "src": "17218:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2076,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "17281:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2078,
                                "indexExpression": {
                                  "id": 2077,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "17288:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17281:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2079,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "17281:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2080,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "17353:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2082,
                                "indexExpression": {
                                  "id": 2081,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "17360:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17353:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2083,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "17353:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2084,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "17423:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2086,
                                "indexExpression": {
                                  "id": 2085,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "17430:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17423:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2087,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice1CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 785,
                              "src": "17423:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2088,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "17495:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2090,
                                "indexExpression": {
                                  "id": 2089,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "17502:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17495:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2091,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice1CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 787,
                              "src": "17495:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2092,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "17565:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2094,
                                "indexExpression": {
                                  "id": 2093,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "17572:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17565:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2095,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "17565:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2066,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "17104:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17104:489:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2097,
                        "nodeType": "EmitStatement",
                        "src": "17099:494:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2099,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "17619:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2100,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "17629:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2102,
                                  "indexExpression": {
                                    "id": 2101,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1857,
                                    "src": "17636:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17629:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2103,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "17629:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2105,
                              "indexExpression": {
                                "id": 2104,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1868,
                                "src": "17651:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17629:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            ],
                            "id": 2098,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "17609:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Lot_$846_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct Market.Lot memory)"
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17609:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2107,
                        "nodeType": "EmitStatement",
                        "src": "17604:55:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1847,
                    "nodeType": "StructuredDocumentation",
                    "src": "14938:282:6",
                    "text": "@notice Calculate amout required to approve to buy a lot\n @param timestamp Frame's timestamp get's calculated from this value\n @param pairPrice Is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax"
                  },
                  "functionSelector": "3c80d8ea",
                  "id": 2109,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "buyLot",
                  "nameLocation": "15235:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1849,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "15247:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "15242:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1848,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15242:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1851,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "15263:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "15258:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1850,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15258:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1853,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "15279:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "15274:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1852,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15274:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15241:47:6"
                  },
                  "returnParameters": {
                    "id": 1855,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15298:0:6"
                  },
                  "scope": 2754,
                  "src": "15226:2441:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2287,
                    "nodeType": "Block",
                    "src": "18093:1276:6",
                    "statements": [
                      {
                        "assignments": [
                          2120
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2120,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "18109:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2287,
                            "src": "18104:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2119,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18104:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2124,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2122,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "18137:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2121,
                            "name": "getOrCreateFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1726,
                            "src": "18120:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18120:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18104:43:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2126,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "18171:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2127,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2116,
                              "src": "18180:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2125,
                            "name": "minTaxCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "18159:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) view"
                            }
                          },
                          "id": 2128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18159:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2129,
                        "nodeType": "ExpressionStatement",
                        "src": "18159:30:6"
                      },
                      {
                        "assignments": [
                          2131
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2131,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "18205:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2287,
                            "src": "18200:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2130,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18200:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2136,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2133,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "18229:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2134,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2114,
                              "src": "18239:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2132,
                            "name": "getOrCreateLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1786,
                            "src": "18214:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18214:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18200:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2138,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 822,
                                        "src": "18269:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2140,
                                      "indexExpression": {
                                        "id": 2139,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2120,
                                        "src": "18276:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18269:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2141,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 798,
                                    "src": "18269:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 2143,
                                  "indexExpression": {
                                    "id": 2142,
                                    "name": "lotKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2131,
                                    "src": "18291:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18269:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$846_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 2144,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 840,
                                "src": "18269:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2145,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18311:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "18311:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "18269:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f54204c4f54204f574e4552",
                              "id": 2148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18323:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                                "typeString": "literal_string \"NOT LOT OWNER\""
                              },
                              "value": "NOT LOT OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                                "typeString": "literal_string \"NOT LOT OWNER\""
                              }
                            ],
                            "id": 2137,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18261:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18261:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2150,
                        "nodeType": "ExpressionStatement",
                        "src": "18261:78:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2152,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2120,
                                "src": "18358:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2154,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "18388:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2155,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "18388:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2153,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1037,
                                  "src": "18370:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 2156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18370:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18358:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c4f5420494e2050415354204652414d45",
                              "id": 2158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18406:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                                "typeString": "literal_string \"LOT IN PAST FRAME\""
                              },
                              "value": "LOT IN PAST FRAME"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                                "typeString": "literal_string \"LOT IN PAST FRAME\""
                              }
                            ],
                            "id": 2151,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18350:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18350:76:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2160,
                        "nodeType": "ExpressionStatement",
                        "src": "18350:76:6"
                      },
                      {
                        "assignments": [
                          2162
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2162,
                            "mutability": "mutable",
                            "name": "taxNew",
                            "nameLocation": "18444:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2287,
                            "src": "18439:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2161,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18439:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2167,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2164,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "18460:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2165,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2116,
                              "src": "18470:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2163,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1846,
                            "src": "18453:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18453:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18439:40:6"
                      },
                      {
                        "assignments": [
                          2169
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2169,
                            "mutability": "mutable",
                            "name": "taxOld",
                            "nameLocation": "18495:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2287,
                            "src": "18490:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2168,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18490:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2180,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2171,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "18511:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2172,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "18521:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2174,
                                    "indexExpression": {
                                      "id": 2173,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2120,
                                      "src": "18528:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18521:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2175,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 798,
                                  "src": "18521:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 2177,
                                "indexExpression": {
                                  "id": 2176,
                                  "name": "lotKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2131,
                                  "src": "18543:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18521:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$846_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 2178,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 842,
                              "src": "18521:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2170,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1846,
                            "src": "18504:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18504:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18490:78:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2181,
                            "name": "taxNew",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2162,
                            "src": "18585:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2182,
                            "name": "taxOld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2169,
                            "src": "18594:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18585:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2233,
                              "name": "taxNew",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2162,
                              "src": "19007:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 2234,
                              "name": "taxOld",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2169,
                              "src": "19016:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19007:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2262,
                          "nodeType": "IfStatement",
                          "src": "19003:193:6",
                          "trueBody": {
                            "id": 2261,
                            "nodeType": "Block",
                            "src": "19024:172:6",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2239,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "19064:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2240,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "19064:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2243,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2241,
                                        "name": "taxOld",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2169,
                                        "src": "19076:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 2242,
                                        "name": "taxNew",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2162,
                                        "src": "19085:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19076:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2236,
                                      "name": "accountingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 755,
                                      "src": "19039:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$77",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "19039:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 2244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19039:53:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2245,
                                "nodeType": "ExpressionStatement",
                                "src": "19039:53:6"
                              },
                              {
                                "expression": {
                                  "id": 2259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2246,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 822,
                                        "src": "19107:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2248,
                                      "indexExpression": {
                                        "id": 2247,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2120,
                                        "src": "19114:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19107:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2249,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 777,
                                    "src": "19107:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2250,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "19137:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2252,
                                        "indexExpression": {
                                          "id": 2251,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2120,
                                          "src": "19144:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19137:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2253,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rewardFund",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 777,
                                      "src": "19137:27:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2256,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2254,
                                            "name": "taxOld",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2169,
                                            "src": "19168:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2255,
                                            "name": "taxNew",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2162,
                                            "src": "19177:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "19168:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2257,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "19167:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "19137:47:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "19107:77:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2260,
                                "nodeType": "ExpressionStatement",
                                "src": "19107:77:6"
                              }
                            ]
                          }
                        },
                        "id": 2263,
                        "nodeType": "IfStatement",
                        "src": "18581:615:6",
                        "trueBody": {
                          "id": 2232,
                          "nodeType": "Block",
                          "src": "18602:386:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2187,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "18651:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2188,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "18651:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 2191,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "18671:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Market_$2754",
                                                "typeString": "contract Market"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Market_$2754",
                                                "typeString": "contract Market"
                                              }
                                            ],
                                            "id": 2190,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "18663:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2189,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "18663:7:6",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2192,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18663:13:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2185,
                                          "name": "accountingToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "18625:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$77",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2186,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 36,
                                        "src": "18625:25:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 2193,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18625:52:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2196,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2194,
                                            "name": "taxNew",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2162,
                                            "src": "18682:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2195,
                                            "name": "taxOld",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2169,
                                            "src": "18691:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "18682:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2197,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "18681:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "18625:73:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "415050524f56454420414d4f554e5420544f4f20534d414c4c",
                                    "id": 2199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18700:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                      "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                                    },
                                    "value": "APPROVED AMOUNT TOO SMALL"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                      "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                                    }
                                  ],
                                  "id": 2184,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18617:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18617:111:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2201,
                              "nodeType": "ExpressionStatement",
                              "src": "18617:111:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2205,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "18840:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "18840:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2209,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "18860:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Market_$2754",
                                          "typeString": "contract Market"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Market_$2754",
                                          "typeString": "contract Market"
                                        }
                                      ],
                                      "id": 2208,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "18852:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2207,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "18852:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18852:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2211,
                                          "name": "taxNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2162,
                                          "src": "18868:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 2212,
                                          "name": "taxOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2169,
                                          "src": "18877:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18868:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2214,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18867:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2202,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "18811:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "18811:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18811:74:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2216,
                              "nodeType": "ExpressionStatement",
                              "src": "18811:74:6"
                            },
                            {
                              "expression": {
                                "id": 2230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2217,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "18900:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2219,
                                    "indexExpression": {
                                      "id": 2218,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2120,
                                      "src": "18907:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18900:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2220,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "18900:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2221,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 822,
                                        "src": "18930:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2223,
                                      "indexExpression": {
                                        "id": 2222,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2120,
                                        "src": "18937:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18930:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2224,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 777,
                                    "src": "18930:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2227,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2225,
                                          "name": "taxNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2162,
                                          "src": "18961:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 2226,
                                          "name": "taxOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2169,
                                          "src": "18969:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18961:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2228,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18960:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18930:46:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18900:76:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2231,
                              "nodeType": "ExpressionStatement",
                              "src": "18900:76:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2264,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "19206:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2266,
                                  "indexExpression": {
                                    "id": 2265,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2120,
                                    "src": "19213:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19206:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "19206:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2269,
                              "indexExpression": {
                                "id": 2268,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2131,
                                "src": "19228:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19206:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "acquisitionPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 842,
                            "src": "19206:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2271,
                            "name": "acqPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2116,
                            "src": "19255:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19206:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2273,
                        "nodeType": "ExpressionStatement",
                        "src": "19206:57:6"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2274,
                            "name": "updateFramePrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "19276:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19276:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2276,
                        "nodeType": "ExpressionStatement",
                        "src": "19276:19:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2278,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "19321:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2279,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "19331:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2281,
                                  "indexExpression": {
                                    "id": 2280,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2120,
                                    "src": "19338:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19331:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2282,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "19331:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2284,
                              "indexExpression": {
                                "id": 2283,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2131,
                                "src": "19353:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19331:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            ],
                            "id": 2277,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "19311:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Lot_$846_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct Market.Lot memory)"
                            }
                          },
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19311:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2286,
                        "nodeType": "EmitStatement",
                        "src": "19306:55:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2110,
                    "nodeType": "StructuredDocumentation",
                    "src": "17675:332:6",
                    "text": "@notice Owner can update lot's price. Has to pay additional tax, or leftover tax gets' returned to him if the new price is lower\n @param timestamp Frame's timestamp get's calculated from this value\n @param pairPrice Is trading pair's price (to get correct lot key) \n @param acqPrice New acquisition price"
                  },
                  "functionSelector": "bb15d2dd",
                  "id": 2288,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateLotPrice",
                  "nameLocation": "18022:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2112,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "18042:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "18037:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2111,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18037:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2114,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "18058:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "18053:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2113,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18053:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2116,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "18074:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "18069:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2115,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18069:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18036:47:6"
                  },
                  "returnParameters": {
                    "id": 2118,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18093:0:6"
                  },
                  "scope": 2754,
                  "src": "18013:1356:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2431,
                    "nodeType": "Block",
                    "src": "19472:1505:6",
                    "statements": [
                      {
                        "assignments": [
                          2293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2293,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "19488:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2431,
                            "src": "19483:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2292,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "19483:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2298,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2295,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "19517:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "19517:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2294,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "19499:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 2297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19499:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19483:50:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2299,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "19600:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19600:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2301,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2293,
                                        "src": "19620:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "id": 2302,
                                            "name": "period",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 733,
                                            "src": "19632:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2303,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "19631:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19620:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2305,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "19619:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "id": 2306,
                                      "name": "tReporting",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 740,
                                      "src": "19644:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2307,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "19643:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19619:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2309,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19618:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19600:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2362,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "20181:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "20181:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2367,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2364,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "20202:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "id": 2365,
                                              "name": "period",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 733,
                                              "src": "20214:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2366,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "20213:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "20202:19:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2368,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "20201:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "id": 2369,
                                        "name": "tReporting",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 740,
                                        "src": "20226:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2370,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "20225:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "20201:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2372,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "20200:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20181:57:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2397,
                          "nodeType": "IfStatement",
                          "src": "20177:286:6",
                          "trueBody": {
                            "id": 2396,
                            "nodeType": "Block",
                            "src": "20240:223:6",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "components": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2374,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 822,
                                            "src": "20256:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 2376,
                                          "indexExpression": {
                                            "id": 2375,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2293,
                                            "src": "20263:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "20256:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$799_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 2377,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "oraclePrice0CumulativeEnd",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 783,
                                        "src": "20256:42:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2378,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 822,
                                            "src": "20300:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 2380,
                                          "indexExpression": {
                                            "id": 2379,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2293,
                                            "src": "20307:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "20300:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$799_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 2381,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "oraclePrice1CumulativeEnd",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 787,
                                        "src": "20300:42:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2382,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 822,
                                            "src": "20344:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 2384,
                                          "indexExpression": {
                                            "id": 2383,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2293,
                                            "src": "20351:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "20344:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$799_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 2385,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "oracleTimestampEnd",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 775,
                                        "src": "20344:35:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2386,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "TupleExpression",
                                    "src": "20255:125:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                      "typeString": "tuple(uint256,uint256,uint256)"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 2391,
                                            "name": "uniswapPair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 743,
                                            "src": "20438:11:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                              "typeString": "contract IUniswapV2Pair"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                              "typeString": "contract IUniswapV2Pair"
                                            }
                                          ],
                                          "id": 2390,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "20430:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 2389,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "20430:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2392,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "20430:20:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2387,
                                        "name": "UniswapV2OracleLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 719,
                                        "src": "20383:22:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                          "typeString": "type(library UniswapV2OracleLibrary)"
                                        }
                                      },
                                      "id": 2388,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "currentCumulativePrices",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 718,
                                      "src": "20383:46:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                        "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                      }
                                    },
                                    "id": 2393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20383:68:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                      "typeString": "tuple(uint256,uint256,uint32)"
                                    }
                                  },
                                  "src": "20255:196:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2395,
                                "nodeType": "ExpressionStatement",
                                "src": "20255:196:6"
                              }
                            ]
                          }
                        },
                        "id": 2398,
                        "nodeType": "IfStatement",
                        "src": "19596:867:6",
                        "trueBody": {
                          "id": 2361,
                          "nodeType": "Block",
                          "src": "19658:504:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 2331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2311,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "19674:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2313,
                                        "indexExpression": {
                                          "id": 2312,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "19681:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19674:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2314,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "oraclePrice0CumulativeStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 781,
                                      "src": "19674:44:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2315,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "19720:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2317,
                                        "indexExpression": {
                                          "id": 2316,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "19727:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19720:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2318,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "oraclePrice1CumulativeStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 785,
                                      "src": "19720:44:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2319,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "19766:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2321,
                                        "indexExpression": {
                                          "id": 2320,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "19773:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19766:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2322,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "oracleTimestampStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 773,
                                      "src": "19766:37:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2323,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "19673:131:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2328,
                                          "name": "uniswapPair",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 743,
                                          "src": "19862:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                            "typeString": "contract IUniswapV2Pair"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                            "typeString": "contract IUniswapV2Pair"
                                          }
                                        ],
                                        "id": 2327,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "19854:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2326,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "19854:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2329,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19854:20:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2324,
                                      "name": "UniswapV2OracleLibrary",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 719,
                                      "src": "19807:22:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                        "typeString": "type(library UniswapV2OracleLibrary)"
                                      }
                                    },
                                    "id": 2325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "currentCumulativePrices",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 718,
                                    "src": "19807:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                      "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                    }
                                  },
                                  "id": 2330,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19807:68:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                    "typeString": "tuple(uint256,uint256,uint32)"
                                  }
                                },
                                "src": "19673:202:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2332,
                              "nodeType": "ExpressionStatement",
                              "src": "19673:202:6"
                            },
                            {
                              "expression": {
                                "id": 2359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2333,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "19891:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2335,
                                        "indexExpression": {
                                          "id": 2334,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "19898:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19891:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2336,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "oraclePrice0CumulativeEnd",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 783,
                                      "src": "19891:42:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2337,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "19935:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2339,
                                        "indexExpression": {
                                          "id": 2338,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "19942:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19935:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2340,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "oraclePrice1CumulativeEnd",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 787,
                                      "src": "19935:42:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2341,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "19979:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2343,
                                        "indexExpression": {
                                          "id": 2342,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "19986:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19979:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2344,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "oracleTimestampEnd",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 775,
                                      "src": "19979:35:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2345,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "19890:125:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2346,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "20019:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2348,
                                        "indexExpression": {
                                          "id": 2347,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "20026:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "20019:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2349,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "oraclePrice0CumulativeStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 781,
                                      "src": "20019:44:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2350,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "20065:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2352,
                                        "indexExpression": {
                                          "id": 2351,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "20072:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "20065:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2353,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "oraclePrice1CumulativeStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 785,
                                      "src": "20065:44:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2354,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "20111:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2356,
                                        "indexExpression": {
                                          "id": 2355,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2293,
                                          "src": "20118:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "20111:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2357,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "oracleTimestampStart",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 773,
                                      "src": "20111:37:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2358,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "20018:131:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256,uint256)"
                                  }
                                },
                                "src": "19890:259:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2360,
                              "nodeType": "ExpressionStatement",
                              "src": "19890:259:6"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2400,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2293,
                              "src": "20492:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2401,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "20529:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2403,
                                "indexExpression": {
                                  "id": 2402,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2293,
                                  "src": "20536:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20529:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2404,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 773,
                              "src": "20529:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2405,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "20594:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2407,
                                "indexExpression": {
                                  "id": 2406,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2293,
                                  "src": "20601:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20594:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2408,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 775,
                              "src": "20594:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2409,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "20657:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2411,
                                "indexExpression": {
                                  "id": 2410,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2293,
                                  "src": "20664:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20657:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2412,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "20657:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2413,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "20729:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2415,
                                "indexExpression": {
                                  "id": 2414,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2293,
                                  "src": "20736:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20729:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2416,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "20729:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2417,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "20799:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2419,
                                "indexExpression": {
                                  "id": 2418,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2293,
                                  "src": "20806:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20799:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2420,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice1CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 785,
                              "src": "20799:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2421,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "20871:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2423,
                                "indexExpression": {
                                  "id": 2422,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2293,
                                  "src": "20878:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20871:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2424,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice1CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 787,
                              "src": "20871:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2425,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "20941:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2427,
                                "indexExpression": {
                                  "id": 2426,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2293,
                                  "src": "20948:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20941:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2428,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "20941:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2399,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "20480:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20480:489:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2430,
                        "nodeType": "EmitStatement",
                        "src": "20475:494:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2289,
                    "nodeType": "StructuredDocumentation",
                    "src": "19377:53:6",
                    "text": "@notice Update trading pair's prices in the frame"
                  },
                  "functionSelector": "96b2c6f3",
                  "id": 2432,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFramePrices",
                  "nameLocation": "19445:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19462:2:6"
                  },
                  "returnParameters": {
                    "id": 2291,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19472:0:6"
                  },
                  "scope": 2754,
                  "src": "19436:1541:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2645,
                    "nodeType": "Block",
                    "src": "21099:1907:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2439,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2435,
                              "src": "21125:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2438,
                            "name": "hasValidPrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "21110:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) view"
                            }
                          },
                          "id": 2440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21110:24:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2441,
                        "nodeType": "ExpressionStatement",
                        "src": "21110:24:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2443,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2435,
                                      "src": "21155:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2444,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "21166:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "21155:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2446,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "21154:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2447,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "21177:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "21177:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21154:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d4520454e442054494d45204e4f542052454143484544",
                              "id": 2450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21194:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                "typeString": "literal_string \"FRAME END TIME NOT REACHED\""
                              },
                              "value": "FRAME END TIME NOT REACHED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                "typeString": "literal_string \"FRAME END TIME NOT REACHED\""
                              }
                            ],
                            "id": 2442,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21145:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21145:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2452,
                        "nodeType": "ExpressionStatement",
                        "src": "21145:78:6"
                      },
                      {
                        "expression": {
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2453,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "21234:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2455,
                              "indexExpression": {
                                "id": 2454,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2435,
                                "src": "21241:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21234:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 790,
                            "src": "21234:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2457,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "21259:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 2458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CLOSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 768,
                            "src": "21259:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "21234:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SFrame_$769",
                            "typeString": "enum Market.SFrame"
                          }
                        },
                        "id": 2460,
                        "nodeType": "ExpressionStatement",
                        "src": "21234:38:6"
                      },
                      {
                        "assignments": [
                          2462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2462,
                            "mutability": "mutable",
                            "name": "timeDiff",
                            "nameLocation": "21368:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2645,
                            "src": "21363:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2461,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21363:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2472,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2463,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "21379:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2465,
                              "indexExpression": {
                                "id": 2464,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2435,
                                "src": "21386:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21379:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2466,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 775,
                            "src": "21379:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2467,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "21417:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2469,
                              "indexExpression": {
                                "id": 2468,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2435,
                                "src": "21424:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21417:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2470,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 773,
                            "src": "21417:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21379:75:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21363:91:6"
                      },
                      {
                        "condition": {
                          "id": 2473,
                          "name": "avgPriceSwitch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "21469:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 2530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2503,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "21677:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2505,
                                "indexExpression": {
                                  "id": 2504,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "21684:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21677:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2506,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "priceAverage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 779,
                              "src": "21677:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2525,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2521,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 2513,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "21744:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 2515,
                                                      "indexExpression": {
                                                        "id": 2514,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2435,
                                                        "src": "21751:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "21744:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 2516,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice1CumulativeEnd",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 787,
                                                    "src": "21744:42:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 2517,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "21789:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 2519,
                                                      "indexExpression": {
                                                        "id": 2518,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2435,
                                                        "src": "21796:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "21789:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 2520,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice1CumulativeStart",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 785,
                                                    "src": "21789:44:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "21744:89:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2522,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "21743:91:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "id": 2523,
                                                  "name": "timeDiff",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2462,
                                                  "src": "21838:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2524,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "21837:10:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "21743:104:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 2512,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "21735:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint224_$",
                                            "typeString": "type(uint224)"
                                          },
                                          "typeName": {
                                            "id": 2511,
                                            "name": "uint224",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "21735:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2526,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21735:113:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2509,
                                        "name": "FixedPoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "21714:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                          "typeString": "type(library FixedPoint)"
                                        }
                                      },
                                      "id": 2510,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "uq112x112",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 82,
                                      "src": "21714:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                                        "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                      }
                                    },
                                    "id": 2527,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21714:135:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                      "typeString": "struct FixedPoint.uq112x112 memory"
                                    }
                                  },
                                  "id": 2528,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_x",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 81,
                                  "src": "21714:138:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                ],
                                "id": 2508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21709:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 2507,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21709:4:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21709:144:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21677:176:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2531,
                          "nodeType": "ExpressionStatement",
                          "src": "21677:176:6"
                        },
                        "id": 2532,
                        "nodeType": "IfStatement",
                        "src": "21465:388:6",
                        "trueBody": {
                          "expression": {
                            "id": 2501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2474,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "21485:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2476,
                                "indexExpression": {
                                  "id": 2475,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "21492:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21485:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2477,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "priceAverage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 779,
                              "src": "21485:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2496,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2492,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 2484,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "21552:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 2486,
                                                      "indexExpression": {
                                                        "id": 2485,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2435,
                                                        "src": "21559:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "21552:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 2487,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice0CumulativeEnd",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 783,
                                                    "src": "21552:42:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 2488,
                                                        "name": "frames",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 822,
                                                        "src": "21597:6:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                        }
                                                      },
                                                      "id": 2490,
                                                      "indexExpression": {
                                                        "id": 2489,
                                                        "name": "frameKey",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2435,
                                                        "src": "21604:8:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "21597:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                                        "typeString": "struct Market.Frame storage ref"
                                                      }
                                                    },
                                                    "id": 2491,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "oraclePrice0CumulativeStart",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 781,
                                                    "src": "21597:44:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "21552:89:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2493,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "21551:91:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "id": 2494,
                                                  "name": "timeDiff",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2462,
                                                  "src": "21646:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2495,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "21645:10:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "21551:104:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 2483,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "21543:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint224_$",
                                            "typeString": "type(uint224)"
                                          },
                                          "typeName": {
                                            "id": 2482,
                                            "name": "uint224",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "21543:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2497,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21543:113:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2480,
                                        "name": "FixedPoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "21522:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                          "typeString": "type(library FixedPoint)"
                                        }
                                      },
                                      "id": 2481,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "uq112x112",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 82,
                                      "src": "21522:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                                        "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                      }
                                    },
                                    "id": 2498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21522:135:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                      "typeString": "struct FixedPoint.uq112x112 memory"
                                    }
                                  },
                                  "id": 2499,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_x",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 81,
                                  "src": "21522:138:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                ],
                                "id": 2479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21517:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 2478,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21517:4:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21517:144:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21485:176:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2502,
                          "nodeType": "ExpressionStatement",
                          "src": "21485:176:6"
                        }
                      },
                      {
                        "expression": {
                          "id": 2557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2533,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "21864:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2535,
                              "indexExpression": {
                                "id": 2534,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2435,
                                "src": "21871:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21864:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2536,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "priceAverage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 779,
                            "src": "21864:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2537,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "21897:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2539,
                                        "indexExpression": {
                                          "id": 2538,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2435,
                                          "src": "21904:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "21897:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2540,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "priceAverage",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 779,
                                      "src": "21897:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">>",
                                    "rightExpression": {
                                      "hexValue": "313132",
                                      "id": 2541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21930:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_112_by_1",
                                        "typeString": "int_const 112"
                                      },
                                      "value": "112"
                                    },
                                    "src": "21897:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2543,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "21896:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2544,
                                "name": "scalar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "21937:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21896:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2551,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2546,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 822,
                                          "src": "21947:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2548,
                                        "indexExpression": {
                                          "id": 2547,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2435,
                                          "src": "21954:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "21947:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$799_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2549,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "priceAverage",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 779,
                                      "src": "21947:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<<",
                                    "rightExpression": {
                                      "hexValue": "313132",
                                      "id": 2550,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21980:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_112_by_1",
                                        "typeString": "int_const 112"
                                      },
                                      "value": "112"
                                    },
                                    "src": "21947:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2552,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "21946:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "31653439",
                                    "id": 2553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21988:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000_by_1",
                                      "typeString": "int_const 1000...(42 digits omitted)...0000"
                                    },
                                    "value": "1e49"
                                  }
                                ],
                                "id": 2554,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "21987:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(42 digits omitted)...0000"
                                }
                              },
                              "src": "21946:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21896:97:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21864:129:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2558,
                        "nodeType": "ExpressionStatement",
                        "src": "21864:129:6"
                      },
                      {
                        "assignments": [
                          2560
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2560,
                            "mutability": "mutable",
                            "name": "marketOwnerFees",
                            "nameLocation": "22060:15:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2645,
                            "src": "22055:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2559,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22055:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2570,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2561,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22078:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2563,
                                "indexExpression": {
                                  "id": 2562,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22085:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22078:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2564,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "22078:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 2565,
                                  "name": "feeMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 747,
                                  "src": "22109:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2566,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22108:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22078:41:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 2568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22122:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "22078:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22055:73:6"
                      },
                      {
                        "assignments": [
                          2572
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2572,
                            "mutability": "mutable",
                            "name": "protocolOwnerFees",
                            "nameLocation": "22144:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2645,
                            "src": "22139:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2571,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22139:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2582,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2573,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22164:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2575,
                                "indexExpression": {
                                  "id": 2574,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22171:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22164:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2576,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "22164:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 2577,
                                  "name": "feeProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 738,
                                  "src": "22195:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2578,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22194:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22164:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 2580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22210:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "22164:52:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22139:77:6"
                      },
                      {
                        "expression": {
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2583,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "22227:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2585,
                              "indexExpression": {
                                "id": 2584,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2435,
                                "src": "22234:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22227:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$799_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2586,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardFund",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 777,
                            "src": "22227:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2587,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "22257:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2589,
                                  "indexExpression": {
                                    "id": 2588,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2435,
                                    "src": "22264:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22257:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2590,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewardFund",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 777,
                                "src": "22257:27:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2591,
                                "name": "marketOwnerFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2560,
                                "src": "22287:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22257:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2593,
                              "name": "protocolOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2572,
                              "src": "22305:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22257:65:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22227:95:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2596,
                        "nodeType": "ExpressionStatement",
                        "src": "22227:95:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2600,
                              "name": "ownerMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "22393:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2601,
                              "name": "marketOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2560,
                              "src": "22406:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2597,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "22368:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "22368:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22368:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2603,
                        "nodeType": "ExpressionStatement",
                        "src": "22368:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2607,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 752,
                                  "src": "22458:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketFactory_$2865",
                                    "typeString": "contract MarketFactory"
                                  }
                                },
                                "id": 2608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2773,
                                "src": "22458:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22458:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2610,
                              "name": "protocolOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2572,
                              "src": "22475:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2604,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "22433:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "22433:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22433:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2612,
                        "nodeType": "ExpressionStatement",
                        "src": "22433:60:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2614,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2435,
                              "src": "22521:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2615,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22558:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2617,
                                "indexExpression": {
                                  "id": 2616,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22565:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22558:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2618,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 773,
                              "src": "22558:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2619,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22623:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2621,
                                "indexExpression": {
                                  "id": 2620,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22630:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22623:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2622,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 775,
                              "src": "22623:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2623,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22686:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2625,
                                "indexExpression": {
                                  "id": 2624,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22693:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22686:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2626,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "22686:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2627,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22758:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2629,
                                "indexExpression": {
                                  "id": 2628,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22765:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22758:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2630,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "22758:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2631,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22828:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2633,
                                "indexExpression": {
                                  "id": 2632,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22835:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22828:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2634,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice1CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 785,
                              "src": "22828:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2635,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22900:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2637,
                                "indexExpression": {
                                  "id": 2636,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22907:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22900:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2638,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice1CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 787,
                              "src": "22900:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2639,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "22970:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2641,
                                "indexExpression": {
                                  "id": 2640,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2435,
                                  "src": "22977:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22970:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2642,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "22970:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2613,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "22509:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22509:489:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2644,
                        "nodeType": "EmitStatement",
                        "src": "22504:494:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2433,
                    "nodeType": "StructuredDocumentation",
                    "src": "20985:66:6",
                    "text": "@notice Close frame\n @param frameKey Frame's timestamp"
                  },
                  "id": 2646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "closeFrame",
                  "nameLocation": "21066:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2435,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "21082:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2646,
                        "src": "21077:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2434,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "21077:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21076:15:6"
                  },
                  "returnParameters": {
                    "id": 2437,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21099:0:6"
                  },
                  "scope": 2754,
                  "src": "21057:1949:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2737,
                    "nodeType": "Block",
                    "src": "23210:827:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SFrame_$769",
                                "typeString": "enum Market.SFrame"
                              },
                              "id": 2659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2653,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "23267:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2655,
                                  "indexExpression": {
                                    "id": 2654,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2649,
                                    "src": "23274:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23267:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2656,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "state",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 790,
                                "src": "23267:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2657,
                                  "name": "SFrame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 769,
                                  "src": "23293:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                    "typeString": "type(enum Market.SFrame)"
                                  }
                                },
                                "id": 2658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "CLOSED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 768,
                                "src": "23293:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "src": "23267:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d45204e4f5420434c4f534544",
                              "id": 2660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23308:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                "typeString": "literal_string \"FRAME NOT CLOSED\""
                              },
                              "value": "FRAME NOT CLOSED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                "typeString": "literal_string \"FRAME NOT CLOSED\""
                              }
                            ],
                            "id": 2652,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23259:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23259:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2662,
                        "nodeType": "ExpressionStatement",
                        "src": "23259:68:6"
                      },
                      {
                        "assignments": [
                          2664
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2664,
                            "mutability": "mutable",
                            "name": "lotKeyWin",
                            "nameLocation": "23388:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2737,
                            "src": "23383:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2663,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "23383:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2672,
                        "initialValue": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2666,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "23411:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2668,
                                    "indexExpression": {
                                      "id": 2667,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2649,
                                      "src": "23418:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23411:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2669,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "priceAverage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 779,
                                  "src": "23411:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2665,
                                "name": "clcLotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1060,
                                "src": "23401:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 2670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23401:40:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2671,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "23400:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23383:59:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SLot_$834",
                                "typeString": "enum Market.SLot"
                              },
                              "id": 2683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2674,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 822,
                                        "src": "23508:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2676,
                                      "indexExpression": {
                                        "id": 2675,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2649,
                                        "src": "23515:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23508:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2677,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 798,
                                    "src": "23508:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 2679,
                                  "indexExpression": {
                                    "id": 2678,
                                    "name": "lotKeyWin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2664,
                                    "src": "23530:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23508:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$846_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 2680,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "state",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 845,
                                "src": "23508:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$834",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2681,
                                  "name": "SLot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 834,
                                  "src": "23550:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SLot_$834_$",
                                    "typeString": "type(enum Market.SLot)"
                                  }
                                },
                                "id": 2682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "SETTLED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 833,
                                "src": "23550:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$834",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "src": "23508:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c4f5420414c524541445920534554544c4544",
                              "id": 2684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23564:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                "typeString": "literal_string \"LOT ALREADY SETTLED\""
                              },
                              "value": "LOT ALREADY SETTLED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                "typeString": "literal_string \"LOT ALREADY SETTLED\""
                              }
                            ],
                            "id": 2673,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23500:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23500:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2686,
                        "nodeType": "ExpressionStatement",
                        "src": "23500:86:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2688,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 822,
                                        "src": "23648:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2690,
                                      "indexExpression": {
                                        "id": 2689,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2649,
                                        "src": "23655:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23648:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$799_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2691,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 798,
                                    "src": "23648:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 2693,
                                  "indexExpression": {
                                    "id": 2692,
                                    "name": "lotKeyWin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2664,
                                    "src": "23670:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23648:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$846_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 2694,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 840,
                                "src": "23648:41:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 2695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23693:42:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x0000000000000000000000000000000000000000"
                              },
                              "src": "23648:87:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f204f574e4552",
                              "id": 2697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23737:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0",
                                "typeString": "literal_string \"NO OWNER\""
                              },
                              "value": "NO OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_40bb02b2afaa93e004fcecb1808720a06735e26ea3138dd398c60713eaafe3f0",
                                "typeString": "literal_string \"NO OWNER\""
                              }
                            ],
                            "id": 2687,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23640:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23640:108:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2699,
                        "nodeType": "ExpressionStatement",
                        "src": "23640:108:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2703,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 822,
                                      "src": "23784:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2705,
                                    "indexExpression": {
                                      "id": 2704,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2649,
                                      "src": "23791:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23784:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$799_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2706,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 798,
                                  "src": "23784:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 2708,
                                "indexExpression": {
                                  "id": 2707,
                                  "name": "lotKeyWin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2664,
                                  "src": "23806:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23784:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$846_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 2709,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lotOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 840,
                              "src": "23784:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2710,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "23827:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2712,
                                "indexExpression": {
                                  "id": 2711,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2649,
                                  "src": "23834:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23827:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$799_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2713,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "23827:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2700,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "23759:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "23759:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23759:96:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2715,
                        "nodeType": "ExpressionStatement",
                        "src": "23759:96:6"
                      },
                      {
                        "expression": {
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2716,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "23905:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2718,
                                  "indexExpression": {
                                    "id": 2717,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2649,
                                    "src": "23912:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23905:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2719,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "23905:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2721,
                              "indexExpression": {
                                "id": 2720,
                                "name": "lotKeyWin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2664,
                                "src": "23927:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23905:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2722,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 845,
                            "src": "23905:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$834",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2723,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "23946:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$834_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 2724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SETTLED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 833,
                            "src": "23946:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$834",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "23905:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SLot_$834",
                            "typeString": "enum Market.SLot"
                          }
                        },
                        "id": 2726,
                        "nodeType": "ExpressionStatement",
                        "src": "23905:53:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2728,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "23986:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2729,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "23996:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$799_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2731,
                                  "indexExpression": {
                                    "id": 2730,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2649,
                                    "src": "24003:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23996:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$799_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2732,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 798,
                                "src": "23996:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$846_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2734,
                              "indexExpression": {
                                "id": 2733,
                                "name": "lotKeyWin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2664,
                                "src": "24018:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23996:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Lot_$846_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            ],
                            "id": 2727,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "23976:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Lot_$846_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct Market.Lot memory)"
                            }
                          },
                          "id": 2735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23976:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2736,
                        "nodeType": "EmitStatement",
                        "src": "23971:58:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2647,
                    "nodeType": "StructuredDocumentation",
                    "src": "23014:149:6",
                    "text": "@notice Settle lot for a owner. Owner's share of the reward amount get's transfered to owner's account\n @param frameKey Frame's timestamp"
                  },
                  "id": 2738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleLot",
                  "nameLocation": "23178:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2649,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "23193:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2738,
                        "src": "23188:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2648,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "23188:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23187:15:6"
                  },
                  "returnParameters": {
                    "id": 2651,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23210:0:6"
                  },
                  "scope": 2754,
                  "src": "23169:868:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2752,
                    "nodeType": "Block",
                    "src": "24202:69:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2745,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2741,
                              "src": "24224:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2744,
                            "name": "closeFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "24213:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24213:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2747,
                        "nodeType": "ExpressionStatement",
                        "src": "24213:20:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2749,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2741,
                              "src": "24254:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2748,
                            "name": "settleLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2738,
                            "src": "24244:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24244:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2751,
                        "nodeType": "ExpressionStatement",
                        "src": "24244:19:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2739,
                    "nodeType": "StructuredDocumentation",
                    "src": "24045:107:6",
                    "text": "@notice User can claim the reward if he owns the winning lot\n @param frameKey Frame's timestamp"
                  },
                  "functionSelector": "ae169a50",
                  "id": 2753,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReward",
                  "nameLocation": "24167:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2741,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "24184:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2753,
                        "src": "24179:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2740,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24179:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24178:15:6"
                  },
                  "returnParameters": {
                    "id": 2743,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24202:0:6"
                  },
                  "scope": 2754,
                  "src": "24158:113:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2755,
              "src": "586:23985:6",
              "usedErrors": []
            }
          ],
          "src": "33:24538:6"
        },
        "id": 6
      },
      "contracts/MarketFactory.sol": {
        "ast": {
          "absolutePath": "contracts/MarketFactory.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ],
            "IUniswapV2Factory": [
              326
            ],
            "IUniswapV2Pair": [
              568
            ],
            "Market": [
              2754
            ],
            "MarketFactory": [
              2865
            ]
          },
          "id": 2866,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2756,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:7"
            },
            {
              "absolutePath": "contracts/Market.sol",
              "file": "./Market.sol",
              "id": 2757,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2866,
              "sourceUnit": 2755,
              "src": "60:22:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
              "id": 2758,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2866,
              "sourceUnit": 327,
              "src": "84:69:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 2759,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2866,
              "sourceUnit": 569,
              "src": "155:66:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2760,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2866,
              "sourceUnit": 78,
              "src": "223:56:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                2754
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2865,
              "linearizedBaseContracts": [
                2865
              ],
              "name": "MarketFactory",
              "nameLocation": "292:13:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "8bdb2afa",
                  "id": 2763,
                  "mutability": "mutable",
                  "name": "uniswapFactory",
                  "nameLocation": "340:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "315:39:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                    "typeString": "contract IUniswapV2Factory"
                  },
                  "typeName": {
                    "id": 2762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2761,
                      "name": "IUniswapV2Factory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 326,
                      "src": "315:17:7"
                    },
                    "referencedDeclaration": 326,
                    "src": "315:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                      "typeString": "contract IUniswapV2Factory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8e8f294b",
                  "id": 2768,
                  "mutability": "mutable",
                  "name": "markets",
                  "nameLocation": "395:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "361:41:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2754_$",
                    "typeString": "mapping(address => contract Market)"
                  },
                  "typeName": {
                    "id": 2767,
                    "keyType": {
                      "id": 2764,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "369:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "361:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2754_$",
                      "typeString": "mapping(address => contract Market)"
                    },
                    "valueType": {
                      "id": 2766,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2765,
                        "name": "Market",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2754,
                        "src": "380:6:7"
                      },
                      "referencedDeclaration": 2754,
                      "src": "380:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Market_$2754",
                        "typeString": "contract Market"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "46a81c00",
                  "id": 2771,
                  "mutability": "mutable",
                  "name": "marketsKeys",
                  "nameLocation": "426:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "409:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2769,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "409:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2770,
                    "nodeType": "ArrayTypeName",
                    "src": "409:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 2773,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "459:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "444:20:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2789,
                    "nodeType": "Block",
                    "src": "510:99:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2778,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2773,
                            "src": "521:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2779,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "529:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "529:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "521:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2782,
                        "nodeType": "ExpressionStatement",
                        "src": "521:18:7"
                      },
                      {
                        "expression": {
                          "id": 2787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2783,
                            "name": "uniswapFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2763,
                            "src": "550:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                              "typeString": "contract IUniswapV2Factory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2785,
                                "name": "_uniswapFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2775,
                                "src": "585:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2784,
                              "name": "IUniswapV2Factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 326,
                              "src": "567:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$326_$",
                                "typeString": "type(contract IUniswapV2Factory)"
                              }
                            },
                            "id": 2786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "567:34:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                              "typeString": "contract IUniswapV2Factory"
                            }
                          },
                          "src": "550:51:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 2788,
                        "nodeType": "ExpressionStatement",
                        "src": "550:51:7"
                      }
                    ]
                  },
                  "id": 2790,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2776,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2775,
                        "mutability": "mutable",
                        "name": "_uniswapFactory",
                        "nameLocation": "493:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2790,
                        "src": "485:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2774,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "485:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "484:25:7"
                  },
                  "returnParameters": {
                    "id": 2777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "510:0:7"
                  },
                  "scope": 2865,
                  "src": "473:136:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2854,
                    "nodeType": "Block",
                    "src": "814:270:7",
                    "statements": [
                      {
                        "assignments": [
                          2815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2815,
                            "mutability": "mutable",
                            "name": "market",
                            "nameLocation": "832:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2854,
                            "src": "825:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2754",
                              "typeString": "contract Market"
                            },
                            "typeName": {
                              "id": 2814,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2813,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2754,
                                "src": "825:6:7"
                              },
                              "referencedDeclaration": 2754,
                              "src": "825:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$2754",
                                "typeString": "contract Market"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2835,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2819,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "852:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MarketFactory_$2865",
                                "typeString": "contract MarketFactory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2821,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2792,
                                  "src": "865:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2820,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "858:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "858:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2824,
                                  "name": "_uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2794,
                                  "src": "889:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2823,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 568,
                                "src": "874:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 2825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "874:28:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            {
                              "id": 2826,
                              "name": "_period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2796,
                              "src": "904:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 2827,
                              "name": "_initTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2798,
                              "src": "913:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 2828,
                              "name": "_tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2800,
                              "src": "929:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2829,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2802,
                              "src": "935:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2830,
                              "name": "_dPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2804,
                              "src": "941:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2831,
                              "name": "_tReporting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2806,
                              "src": "950:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 2832,
                              "name": "_minTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2808,
                              "src": "963:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2833,
                              "name": "_avgPriceSwitch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2810,
                              "src": "972:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MarketFactory_$2865",
                                "typeString": "contract MarketFactory"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                "typeString": "contract IUniswapV2Pair"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "841:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_MarketFactory_$2865_$_t_contract$_IERC20_$77_$_t_contract$_IUniswapV2Pair_$568_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_contract$_Market_$2754_$",
                              "typeString": "function (contract MarketFactory,contract IERC20,contract IUniswapV2Pair,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) returns (contract Market)"
                            },
                            "typeName": {
                              "id": 2817,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2816,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2754,
                                "src": "845:6:7"
                              },
                              "referencedDeclaration": 2754,
                              "src": "845:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$2754",
                                "typeString": "contract Market"
                              }
                            }
                          },
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "841:147:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$2754",
                            "typeString": "contract Market"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "825:163:7"
                      },
                      {
                        "expression": {
                          "id": 2843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2836,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2768,
                              "src": "999:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2754_$",
                                "typeString": "mapping(address => contract Market)"
                              }
                            },
                            "id": 2841,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 2839,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2815,
                                  "src": "1015:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2754",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2754",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 2838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1007:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2837,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1007:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1007:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "999:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2754",
                              "typeString": "contract Market"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2842,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2815,
                            "src": "1026:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2754",
                              "typeString": "contract Market"
                            }
                          },
                          "src": "999:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$2754",
                            "typeString": "contract Market"
                          }
                        },
                        "id": 2844,
                        "nodeType": "ExpressionStatement",
                        "src": "999:33:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2850,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2815,
                                  "src": "1068:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2754",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2754",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 2849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1060:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2848,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1060:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1060:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2845,
                              "name": "marketsKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2771,
                              "src": "1043:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1043:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1043:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2853,
                        "nodeType": "ExpressionStatement",
                        "src": "1043:33:7"
                      }
                    ]
                  },
                  "functionSelector": "13afc618",
                  "id": 2855,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addMarket",
                  "nameLocation": "626:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2792,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "644:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "636:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2791,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2794,
                        "mutability": "mutable",
                        "name": "_uniswapPair",
                        "nameLocation": "660:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "652:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2793,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2796,
                        "mutability": "mutable",
                        "name": "_period",
                        "nameLocation": "681:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "674:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 2795,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2798,
                        "mutability": "mutable",
                        "name": "_initTimestamp",
                        "nameLocation": "697:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "690:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 2797,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "690:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2800,
                        "mutability": "mutable",
                        "name": "_tax",
                        "nameLocation": "718:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "713:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2799,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "713:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2802,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "729:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "724:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "724:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2804,
                        "mutability": "mutable",
                        "name": "_dPrice",
                        "nameLocation": "740:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "735:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2803,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "735:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2806,
                        "mutability": "mutable",
                        "name": "_tReporting",
                        "nameLocation": "756:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "749:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 2805,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "749:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2808,
                        "mutability": "mutable",
                        "name": "_minTax",
                        "nameLocation": "774:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "769:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2807,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2810,
                        "mutability": "mutable",
                        "name": "_avgPriceSwitch",
                        "nameLocation": "788:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "783:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2809,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "783:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:169:7"
                  },
                  "returnParameters": {
                    "id": 2812,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "814:0:7"
                  },
                  "scope": 2865,
                  "src": "617:467:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2863,
                    "nodeType": "Block",
                    "src": "1145:44:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2860,
                            "name": "marketsKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2771,
                            "src": "1163:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1163:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2859,
                        "id": 2862,
                        "nodeType": "Return",
                        "src": "1156:25:7"
                      }
                    ]
                  },
                  "functionSelector": "27fa35c3",
                  "id": 2864,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMarketsCount",
                  "nameLocation": "1101:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2856,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1116:2:7"
                  },
                  "returnParameters": {
                    "id": 2859,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2858,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2864,
                        "src": "1140:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2857,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1139:6:7"
                  },
                  "scope": 2865,
                  "src": "1092:97:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2866,
              "src": "283:909:7",
              "usedErrors": []
            }
          ],
          "src": "33:1161:7"
        },
        "id": 7
      }
    }
  }
}
