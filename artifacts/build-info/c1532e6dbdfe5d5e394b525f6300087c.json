{
  "id": "c1532e6dbdfe5d5e394b525f6300087c",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Market.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n//pragma experimental ABIEncoderV2;\r\n\r\nimport \"./MarketFactory.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol\";\r\nimport \"@uniswap/lib/contracts/libraries/FixedPoint.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol\";\r\n\r\n\r\n/// @title TWPM Market\r\n/// @author UniHedge\r\n/// @dev All function calls are currently implemented without side effects\r\ncontract Market {\r\n    using UQ112x112 for uint224;\r\n    //Length of a frame\r\n    uint public period; //64b -- Data packing into storage slots (1 slot = 32 bytes) --> 4*64b = 32 bytes\r\n    //Contract creation time\r\n    uint public initTimestamp; //64b\r\n    //Protocol fee\r\n    uint public feeProtocol = 100; //64b\r\n    //Reporting time for pair price\r\n    uint public tReporting; //64b\r\n    //Token pair on Uniswap\r\n    IUniswapV2Pair public uniswapPair; //256b\r\n    //Range of a lot\r\n    uint public dPrice; //256b\r\n    //Fee that gets to market owner\r\n    uint public feeMarket; //256b\r\n    //Tax on lots\r\n    uint public taxMarket; //256b\r\n    //Contract for creating markets\r\n    MarketFactory public factory; //256b\r\n    //ERC20 token used for buyng lots in this contract \r\n    IERC20 public accountingToken; //256b\r\n    //Owner of this market\r\n    address public ownerMarket; //256b\r\n    //Minimal lot tax per frame\r\n    uint public minTax; //256b\r\n    //Scalar number used for calculating precentages\r\n    uint scalar = 1e24; //256b\r\n    bool avgPriceSwitch = false;\r\n\r\n    enum SFrame {NULL, OPENED, CLOSED}\r\n    struct Frame {\r\n        uint frameKey; \r\n        uint oracleTimestampStart;\r\n        uint oracleTimestampEnd;\r\n        uint rewardFund;\r\n        uint priceAverage;\r\n        uint oraclePriceCumulativeStart;\r\n        uint oraclePriceCumulativeEnd;\r\n        SFrame state;\r\n        uint[] lotKeys;\r\n        mapping(uint => Lot) lots;\r\n    }\r\n\r\n    //TODO: add oraclePrice1CumulativeStart and end\r\n    event FrameUpdate(uint frameKey, uint oracleTimestampStart, uint oracleTimestampEnd, uint oraclePrice0CumulativeStart, uint oraclePrice0CumulativeEnd, uint rewardFund);\r\n\r\n    mapping(uint => Frame) public frames;\r\n    mapping(address => uint[]) public userFrames;\r\n    uint[] public framesKeys;\r\n\r\n    enum SLot {NULL, BOUGHT, SETTLED}\r\n    struct Lot {\r\n        uint frameKey;\r\n        uint lotKey;\r\n        address lotOwner;\r\n        uint acquisitionPrice;\r\n        SLot state;\r\n    }\r\n\r\n    event LotUpdate(uint frameKey, Lot lotStruct);\r\n    constructor(MarketFactory _factory, IERC20 _token, IUniswapV2Pair _uniswapPair, uint _period, uint _initTimestamp, uint _taxMarket, uint _feeMarket, uint _dPrice, uint _tReporting, uint _minTax, bool _avgPriceSwitch) {\r\n        accountingToken = _token;\r\n        ownerMarket = payable(msg.sender);\r\n        period = _period;\r\n        initTimestamp = _initTimestamp; \r\n        taxMarket = _taxMarket;\r\n        feeMarket = _feeMarket;\r\n        uniswapPair = _uniswapPair;\r\n        dPrice = _dPrice;\r\n        factory = _factory;\r\n        tReporting = _tReporting;\r\n        minTax = _minTax;\r\n        avgPriceSwitch = _avgPriceSwitch;\r\n    }\r\n\r\n    modifier minTaxCheck(uint acqPrice) {\r\n        uint tax = acqPrice * (taxMarket) / (100000);\r\n        require(tax >= minTax, \"PRICE IS TOO LOW\");\r\n        _;\r\n    }\r\n\r\n    modifier isFactoryOwner() {\r\n        require(msg.sender == factory.owner(), \"NOT THE FACTORY OWNER\");\r\n        _;\r\n    }\r\n\r\n    modifier hasValidPrices(uint frameKey) {\r\n        //require(frames[frameKey].state == SFrame.OPENED, \"FRAME NOT OPENED\");\r\n        if (frames[frameKey].oraclePriceCumulativeStart <= 0 || frames[frameKey].oraclePriceCumulativeEnd <= 0) {\r\n            //frames[framekey].state = SFrame.INVALID;\r\n            revert(\"INVALID FRAME PRICE\");\r\n        }\r\n        if (frames[frameKey].oraclePriceCumulativeStart == frames[frameKey].oraclePriceCumulativeEnd) {\r\n            //frames[framekey].state = SFrame.INVALID;\r\n            revert(\"INVALID FRAME PRICE\");\r\n        }\r\n        _;\r\n    }\r\n\r\n    /// @notice Calculate frames timestamp (beggining of frame)\r\n    /// @param timestamp In seconds\r\n    /// @return frame's timestamp (key)\r\n    function clcFrameTimestamp(uint timestamp) public view returns (uint){\r\n        if (timestamp <= initTimestamp) return initTimestamp;\r\n        return timestamp - ((timestamp - (initTimestamp)) % (period));\r\n    }\r\n    \r\n    /// @notice Calculate top boundary of a lot\r\n    /// @param value Arbitary price of market's Uniswap pair\r\n    /// @return lot key (top boundary)\r\n    function clcLotKey(uint value) public view returns (uint){\r\n        if (value <= 0) return dPrice;\r\n        return value / (dPrice) * (dPrice);\r\n    }\r\n\r\n    /// @notice Calculate how many frames there are left untill given frame in input\r\n    /// @param frameKey Timestamp of an arbitary frame in the future\r\n    /// @return number of frames (whole numbers: n=0,1,2...)\r\n    function clcFramesLeft(uint frameKey) internal view returns (uint){     \r\n        if (frameKey == clcFrameTimestamp(block.timestamp)) return 0;                 \r\n        return (((frameKey - (block.timestamp)) / period));\r\n    }\r\n\r\n    /// @notice Calculate average price of a frame\r\n    /// @param frameKey Timestamp of an arbitary frame \r\n    /// @return avgPrice Time weighted aveage price\r\n    function clcPrice(uint frameKey) public hasValidPrices(frameKey) view returns(uint avgPrice) {       \r\n        //Calculate time-weighted average price -- UQ112x112 encoded\r\n        uint timeDiff = frames[frameKey].oracleTimestampEnd - frames[frameKey].oracleTimestampStart;\r\n         avgPrice = uint(FixedPoint.uq112x112(uint224((frames[frameKey].oraclePriceCumulativeEnd - frames[frameKey].oraclePriceCumulativeStart) / (timeDiff)))._x);\r\n    }\r\n\r\n    /// @notice Calculate amount required to approve to buy a lot\r\n    /// @param timestamp Timestamp that determins which frame it is\r\n    /// @param pairPrice Value is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    /// @return cmpltAmnt complete price of a lot\r\n    function clcAmountToApprove(uint timestamp, uint pairPrice, uint acqPrice) public view returns (uint cmpltAmnt) {    \r\n        uint frameKey = clcFrameTimestamp(timestamp); \r\n        //Check if the lot is in a current or future frame, otherwise the calculation results in an overflow/underflow.\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"THIS LOT IS IN A PAST FRAME\");        \r\n        uint lotKey = clcLotKey(pairPrice);\r\n        uint tax = clcTax(frameKey, acqPrice);\r\n        cmpltAmnt = frames[frameKey].lots[lotKey].acquisitionPrice + tax;\r\n        return cmpltAmnt;\r\n    }\r\n\r\n    /// @notice Calculate amount required to change lot's price.\r\n    /// @dev Calculate difference in tax values with old and new acquisition price\r\n    /// @param timestamp Timestamp that determins which frame it is\r\n    /// @param pairPrice Value is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    /// @return amnt complete price of a lot\r\n    function clcAmountToApproveForUpdate(uint timestamp, uint pairPrice, uint acqPrice) public view returns (uint amnt) {   \r\n        uint frameKey = clcFrameTimestamp(timestamp);\r\n        //require(frameKey >= clcFrameTimestamp(block.timestamp), \"THIS LOT IS IN A PAST FRAME\");   \r\n        uint lotKey = clcLotKey(pairPrice);\r\n        uint tax1 = clcTax(frameKey, frames[frameKey].lots[lotKey].acquisitionPrice);\r\n        uint tax2 = clcTax(frameKey, acqPrice);\r\n        if(tax1 >= tax2) amnt = 0;\r\n        else amnt = tax2-tax1;\r\n        return amnt;\r\n    }\r\n\r\n    /// @notice Get created and still open frames\r\n    /// @dev You can't get (current) frame's index in the framesKeys array,\r\n    /// @dev so for-loop through the whole array is needed\r\n    /// @dev other option would be with additional parameter: startIndex\r\n    /// @param numOfFrames Timestamp that determins which frame it is\r\n    /// @return uint[] array of frame keys\r\n    function getOpenFrameKeys(uint startFrame, uint numOfFrames) public view returns (uint[] memory){\r\n        uint[] memory openFrames = new uint[](numOfFrames);\r\n        for(uint i = 0; i <= numOfFrames; i++) {\r\n            uint frameKey = startFrame+(period*i);\r\n            if(frames[frameKey].state != SFrame.NULL) {\r\n                openFrames[i] = frameKey;\r\n            }\r\n        }\r\n        return openFrames;\r\n    }\r\n\r\n    /// @notice Get users lots in the nex 50 frames and previous 50 frames\r\n    /// @dev First version, it works, but need code optimisation probably :P\r\n    /// @param user User's address\r\n    /// @return userLots Returns array of users lots (whole structs)\r\n    /// @dev Array's size is 100 no mather how many lots this user actually has. \r\n    /// @dev So the results have to be filtered before use\r\n    function getUserLots(address user) public view returns (Lot[] memory userLots){\r\n        uint currentFrame = clcFrameTimestamp(block.timestamp);\r\n        userLots = new Lot[](2000);\r\n        Lot memory lot;\r\n        uint counter = 0;\r\n        uint frameKey;\r\n\r\n        for(uint i = 1; i <= 100; i++) {\r\n\r\n            if (i >= 50) frameKey = (currentFrame + period*(i-50));\r\n            else frameKey = (currentFrame - period*i);\r\n\r\n            if (frames[frameKey].state == SFrame.OPENED) {\r\n                for (uint j=0; j<frames[frameKey].lotKeys.length; j++) {\r\n                    lot = frames[frameKey].lots[frames[frameKey].lotKeys[j]];\r\n                    if(lot.lotOwner == user) {\r\n                        userLots[counter]= lot;\r\n                        counter ++;\r\n                        if(counter == 2000) return userLots;\r\n                    } \r\n                }\r\n            }\r\n        }\r\n\r\n        for(uint i = 1; i <= 49; i++) {\r\n            frameKey = (currentFrame - period*i);\r\n            if (frames[frameKey].state == SFrame.CLOSED) {\r\n                for (uint j=0; j<frames[frameKey].lotKeys.length; j++) {\r\n                    lot = frames[frameKey].lots[frames[frameKey].lotKeys[j]];\r\n                    if(lot.lotOwner == user) {\r\n                        userLots[counter]= lot;\r\n                        counter ++;\r\n                        if(counter >= 2000) return userLots;\r\n                    } \r\n                }\r\n            }\r\n        }\r\n        return userLots;\r\n    }\r\n\r\n    /// @notice Get number of frame's that the address has bought lots in\r\n    /// @param user User's address\r\n    /// @return number of frames\r\n    function getNumOfUserFrames(address user) public view returns (uint){\r\n        return userFrames[user].length;\r\n    }\r\n\r\n    /// @notice Get frame's that the address has bought lots in\r\n    /// @param user User's address\r\n    /// @return frame keys\r\n    function getUserFrames(address user) public view returns(uint[] memory)  {\r\n        return userFrames[user];\r\n    }\r\n\r\n    /// @notice Get lot struct\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param lotKey lot's key \r\n    /// @return lot struct\r\n    function getLot(uint frameKey, uint lotKey) public view returns (Lot memory){                 \r\n        return frames[frameKey].lots[lotKey];\r\n    }\r\n\r\n    // /// @notice Get no. of created lots in a frame \r\n    // /// @param frameKey Frame's timestamp\r\n    // /// @return lot count\r\n    // function getLotsCount(uint frameKey) public view returns (uint){                 \r\n    //     return frames[frameKey].lotKeys.length;\r\n    // }\r\n\r\n    /// @notice Get lotKey from index in lotKeys array\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param index frameKeys array index \r\n    /// @return lotKey\r\n    function getLotKey(uint frameKey, uint index) public view returns (uint){                 \r\n        return frames[frameKey].lotKeys[index];\r\n    }\r\n\r\n    /// @notice Get frame's award amount (accumulation of different lot taxes)\r\n    /// @notice Remaining tax of a lot owner get's returned after a sale (change of ownership). So the award amount isn't for sure untill the frame get's closed.\r\n    /// @param frameKey Frame's timestamp\r\n    /// @return award amount\r\n    function getRewardAmount(uint frameKey) public view returns (uint) {                         \r\n        return frames[frameKey].rewardFund; \r\n    }\r\n\r\n    /// @notice Get number of frames\r\n    /// @return number frames\r\n    function getNumberOfFrameKeys() public view returns (uint){\r\n        return framesKeys.length;\r\n    }\r\n\r\n    /// @notice Create a frame\r\n    /// @param timestamp In second.\r\n    /// @return frameTimestamp Frame's key (timestamp that indicated the beggining of a frame).\r\n    function getOrCreateFrame(uint timestamp) internal returns (uint){\r\n        //Get frame's timestamp - frame key\r\n        uint frameKey = clcFrameTimestamp(timestamp);\r\n        //Check if frame exists\r\n        if (frames[frameKey].state != SFrame.NULL) return frameKey;\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"FRAME IN PAST\");\r\n        //Add frame\r\n        frames[frameKey].frameKey = frameKey;\r\n        frames[frameKey].state = SFrame.OPENED;\r\n        framesKeys.push(frameKey);\r\n        return frameKey;\r\n    }\r\n\r\n    /// @notice Create a lot\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param pairPrice Price is the trading pair's price\r\n    /// @return lotKey\r\n    function getOrCreateLot(uint frameKey, uint pairPrice) internal returns(uint){\r\n        uint lotKey = clcLotKey(pairPrice);\r\n        if (frames[frameKey].lots[lotKey].state != SLot.NULL) return lotKey;\r\n        frames[frameKey].lots[lotKey].frameKey = frameKey;\r\n        frames[frameKey].lots[lotKey].lotKey = lotKey;\r\n        frames[frameKey].lotKeys.push(lotKey);\r\n        return lotKey;\r\n    }\r\n\r\n    function clcTax(uint frameKey, uint acquisitionPrice) internal view returns (uint tax) {             \r\n        uint dFrame = (clcFrameTimestamp(block.timestamp) + (period)) - (block.timestamp); \r\n        uint dFrameP = scalar * dFrame / (period);\r\n        //Calculate tax from the proposed acquisition price \r\n        uint numOfFramesLeft = clcFramesLeft(frameKey);\r\n        tax = acquisitionPrice * taxMarket / 100000 * numOfFramesLeft;\r\n        uint dtax = acquisitionPrice * taxMarket / 100000;\r\n        dtax = dtax * dFrameP / scalar;\r\n        tax = tax + dtax;\r\n        return tax;\r\n    }\r\n\r\n    /// @notice Calculate amout required to approve to buy a lot\r\n    /// @param timestamp Frame's timestamp get's calculated from this value\r\n    /// @param pairPrice Is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    function buyLot(uint timestamp, uint pairPrice, uint acqPrice) public minTaxCheck(acqPrice) {\r\n        //Get frameKey and lotKey values\r\n        uint frameKey =  getOrCreateFrame(timestamp);                          \r\n        uint lotKey = getOrCreateLot(frameKey, pairPrice);\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"LOT IN PAST\");\r\n        require(msg.sender != frames[frameKey].lots[lotKey].lotOwner, \"ALREADY OWNER\");\r\n\r\n        uint tax = clcTax(frameKey, acqPrice);\r\n\r\n        //Approved amount has to be at leat equal to price of the Lot(with tax)\r\n        require(accountingToken.allowance(msg.sender, address(this)) >= (frames[frameKey].lots[lotKey].acquisitionPrice + tax), \"APPROVED AMOUNT TOO SMALL\");\r\n        //Transfer tax amount to the market contract\r\n        accountingToken.transferFrom(msg.sender, address(this), (frames[frameKey].lots[lotKey].acquisitionPrice + tax));\r\n        frames[frameKey].rewardFund = (frames[frameKey].rewardFund + tax);\r\n\r\n        //Pay the current owner + return leftover tax\r\n        if (frames[frameKey].lots[lotKey].state == SLot.BOUGHT) {\r\n            uint taxRetrn = clcTax(frameKey, frames[frameKey].lots[lotKey].acquisitionPrice);\r\n            //transfer funds\r\n            accountingToken.transfer(frames[frameKey].lots[lotKey].lotOwner, (taxRetrn + frames[frameKey].lots[lotKey].acquisitionPrice));\r\n            //update reward fund\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund - taxRetrn;\r\n        }\r\n        else {\r\n            frames[frameKey].lots[lotKey].state = SLot.BOUGHT;\r\n        }\r\n       //Update lotKey values\r\n        frames[frameKey].lots[lotKey].lotOwner = msg.sender;\r\n        frames[frameKey].lots[lotKey].acquisitionPrice = acqPrice;\r\n        userFrames[msg.sender].push(frameKey);\r\n\r\n        updateFramePrices();\r\n\r\n        emit FrameUpdate(frameKey, \r\n                         frames[frameKey].oracleTimestampStart,\r\n                         frames[frameKey].oracleTimestampEnd,\r\n                         frames[frameKey].oraclePriceCumulativeStart,\r\n                         frames[frameKey].oraclePriceCumulativeEnd,\r\n                         frames[frameKey].rewardFund);\r\n        emit LotUpdate(frameKey, frames[frameKey].lots[lotKey]);\r\n    }\r\n\r\n    /// @notice Owner can update lot's price. Has to pay additional tax, or leftover tax gets' returned to him if the new price is lower\r\n    /// @param timestamp Frame's timestamp get's calculated from this value\r\n    /// @param pairPrice Is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New acquisition price\r\n    function updateLotPrice(uint timestamp, uint pairPrice, uint acqPrice) public minTaxCheck(acqPrice) {\r\n        uint frameKey = getOrCreateFrame(timestamp); \r\n        uint lotKey = getOrCreateLot(frameKey, pairPrice); \r\n        require(frames[frameKey].lots[lotKey].lotOwner == msg.sender, \"NOT LOT OWNER\");\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"LOT IN PAST FRAME\");\r\n\r\n        uint taxNew = clcTax(frameKey, acqPrice);\r\n        uint taxOld = clcTax(frameKey, frames[frameKey].lots[lotKey].acquisitionPrice);\r\n\r\n        if (taxNew > taxOld) {\r\n            require(accountingToken.allowance(msg.sender, address(this)) >= (taxNew - taxOld), \"APPROVED AMOUNT TOO SMALL\");\r\n            //Transfer complete tax amount to the frame rewardFund\r\n            accountingToken.transferFrom(msg.sender, address(this), (taxNew - taxOld));\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund + (taxNew- taxOld);\r\n        }\r\n        else if (taxNew < taxOld) {\r\n            accountingToken.transfer(msg.sender, taxOld - taxNew);\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund - (taxOld - taxNew);\r\n        }\r\n        frames[frameKey].lots[lotKey].acquisitionPrice = acqPrice;\r\n\r\n        updateFramePrices();\r\n        emit LotUpdate(frameKey, frames[frameKey].lots[lotKey]);\r\n    }\r\n\r\n    /// @notice Update trading pair's prices in the frame\r\n    function updateFramePrices() public {\r\n        uint frameKey = clcFrameTimestamp(block.timestamp);\r\n        uint tmp;\r\n        //Correct price if outside settle interval\r\n        if (block.timestamp < ((frameKey + (period)) - (tReporting))) {\r\n            if(avgPriceSwitch) {\r\n                (frames[frameKey].oraclePriceCumulativeStart, tmp, frames[frameKey].oracleTimestampStart) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n                (frames[frameKey].oraclePriceCumulativeEnd, tmp, frames[frameKey].oracleTimestampEnd) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n            }\r\n            else {\r\n                (tmp, frames[frameKey].oraclePriceCumulativeStart, frames[frameKey].oracleTimestampStart) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n                (tmp, frames[frameKey].oraclePriceCumulativeEnd, frames[frameKey].oracleTimestampEnd) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n            }\r\n                    }\r\n        else if (block.timestamp >= ((frameKey + (period)) - (tReporting))) {\r\n            if(avgPriceSwitch) {\r\n                (frames[frameKey].oraclePriceCumulativeEnd, tmp, frames[frameKey].oracleTimestampEnd) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n            }\r\n            else {\r\n                (tmp, frames[frameKey].oraclePriceCumulativeEnd, frames[frameKey].oracleTimestampEnd) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n            }    \r\n        }\r\n\r\n        emit FrameUpdate(frameKey, \r\n                         frames[frameKey].oracleTimestampStart,\r\n                         frames[frameKey].oracleTimestampEnd,\r\n                         frames[frameKey].oraclePriceCumulativeStart,\r\n                         frames[frameKey].oraclePriceCumulativeEnd,\r\n                         frames[frameKey].rewardFund);\r\n    }\r\n\r\n    /// @notice Close frame\r\n    /// @param frameKey Frame's timestamp\r\n    function closeFrame(uint frameKey) internal hasValidPrices(frameKey) {\r\n        require( (frameKey + period) <= block.timestamp, \"FRAME END TIME NOT REACHED\");\r\n        frames[frameKey].state = SFrame.CLOSED;\r\n        \r\n        //Calculate time-weighted average price -- UQ112x112 encoded\r\n        uint timeDiff = frames[frameKey].oracleTimestampEnd - frames[frameKey].oracleTimestampStart;\r\n        frames[frameKey].priceAverage = uint(FixedPoint.uq112x112(uint224((frames[frameKey].oraclePriceCumulativeEnd - frames[frameKey].oraclePriceCumulativeStart) / (timeDiff)))._x);\r\n       \r\n        \r\n        //Subtract fees from the reward amount \r\n        uint marketOwnerFees = frames[frameKey].rewardFund * (feeMarket) / 100000;\r\n        uint protocolOwnerFees = frames[frameKey].rewardFund * (feeProtocol) / 100000;\r\n        frames[frameKey].rewardFund = frames[frameKey].rewardFund - marketOwnerFees - protocolOwnerFees;\r\n        //Transfer fees to owners\r\n        accountingToken.transfer(ownerMarket, marketOwnerFees);\r\n        accountingToken.transfer(factory.owner(), protocolOwnerFees);\r\n        emit FrameUpdate(frameKey, \r\n                         frames[frameKey].oracleTimestampStart,\r\n                         frames[frameKey].oracleTimestampEnd,\r\n                         frames[frameKey].oraclePriceCumulativeStart,\r\n                         frames[frameKey].oraclePriceCumulativeEnd,\r\n                         frames[frameKey].rewardFund);\r\n    }\r\n\r\n    /// @notice Settle lot for a owner. Owner's share of the reward amount get's transfered to owner's account\r\n    /// @param frameKey Frame's timestamp\r\n    function settleLot(uint frameKey) internal {  \r\n        //Check if frame is closed\r\n        require(frames[frameKey].state == SFrame.CLOSED, \"FRAME NOT CLOSED\");    \r\n        //Calcualte the winning lot key\r\n        uint lotKeyWin = (clcLotKey(uint256(frames[frameKey].priceAverage)));\r\n        //Check if the lot is already settled\r\n        require(frames[frameKey].lots[lotKeyWin].state != SLot.SETTLED, \"LOT ALREADY SETTLED\");\r\n        //Transfer winnings to last owner\r\n        require(frames[frameKey].lots[lotKeyWin].lotOwner != 0x0000000000000000000000000000000000000000, \"NO OWNERS\");\r\n        accountingToken.transfer(frames[frameKey].lots[lotKeyWin].lotOwner, frames[frameKey].rewardFund);\r\n        //State is changed to settled\r\n        frames[frameKey].lots[lotKeyWin].state = SLot.SETTLED;\r\n\r\n        emit LotUpdate(frameKey, frames[frameKey].lots[lotKeyWin]);\r\n    }\r\n\r\n    /// @notice User can claim the reward if he owns the winning lot\r\n    /// @param frameKey Frame's timestamp\r\n    function claimReward(uint frameKey) public {\r\n        closeFrame(frameKey);\r\n        settleLot(frameKey);\r\n    }\r\n\r\n    /// @notice Withdraw any amount out of the contract. Only to be used in extreme cases!\r\n    /// @param amount Amount you want to withdraw\r\n    function emptyFunds(uint amount) public isFactoryOwner {  \r\n        accountingToken.transfer(factory.owner(), amount);\r\n    }\r\n\r\n\r\n}"
      },
      "contracts/MarketFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Market.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract MarketFactory {\r\n\r\n    IUniswapV2Factory public uniswapFactory;\r\n    mapping(address => Market) public markets;\r\n    address[] public marketsKeys;\r\n    address public owner;\r\n\r\n    constructor(address _uniswapFactory) {\r\n        owner = msg.sender;\r\n        uniswapFactory = IUniswapV2Factory(_uniswapFactory);\r\n    }\r\n\r\n    function addMarket(address _token, address _uniswapPair, uint64 _period, uint64 _initTimestamp, uint _tax, uint _fee, uint _dPrice, uint64 _tReporting, uint _minTax, bool _avgPriceSwitch) external {\r\n        Market market = new Market(this, IERC20(_token), IUniswapV2Pair(_uniswapPair), _period, _initTimestamp, _tax, _fee, _dPrice, _tReporting, _minTax, _avgPriceSwitch);\r\n        markets[address(market)] = market;\r\n        marketsKeys.push(address(market));\r\n    }\r\n\r\n    function getMarketsCount() public view returns (uint){\r\n        return marketsKeys.length;\r\n    }\r\n}\r\n"
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "content": "pragma solidity >=0.5.0;\n\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';\nimport '@uniswap/lib/contracts/libraries/FixedPoint.sol';\n\n// library with helper methods for oracles that are concerned with computing average prices\nlibrary UniswapV2OracleLibrary {\n    using FixedPoint for *;\n\n    // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1]\n    function currentBlockTimestamp() internal view returns (uint32) {\n        return uint32(block.timestamp % 2 ** 32);\n    }\n\n    // produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\n    function currentCumulativePrices(\n        address pair\n    ) internal view returns (uint price0Cumulative, uint price1Cumulative, uint32 blockTimestamp) {\n        blockTimestamp = currentBlockTimestamp();\n        price0Cumulative = IUniswapV2Pair(pair).price0CumulativeLast();\n        price1Cumulative = IUniswapV2Pair(pair).price1CumulativeLast();\n\n        // if time has elapsed since the last update on the pair, mock the accumulated price values\n        (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast) = IUniswapV2Pair(pair).getReserves();\n        if (blockTimestampLast != blockTimestamp) {\n            // subtraction overflow is desired\n            uint32 timeElapsed = blockTimestamp - blockTimestampLast;\n            // addition overflow is desired\n            // counterfactual\n            price0Cumulative += uint(FixedPoint.fraction(reserve1, reserve0)._x) * timeElapsed;\n            // counterfactual\n            price1Cumulative += uint(FixedPoint.fraction(reserve0, reserve1)._x) * timeElapsed;\n        }\n    }\n}\n"
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "content": "pragma solidity >=0.4.0;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\nlibrary FixedPoint {\n    // range: [0, 2**112 - 1]\n    // resolution: 1 / 2**112\n    struct uq112x112 {\n        uint224 _x;\n    }\n\n    // range: [0, 2**144 - 1]\n    // resolution: 1 / 2**112\n    struct uq144x112 {\n        uint _x;\n    }\n\n    uint8 private constant RESOLUTION = 112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 x) internal pure returns (uq112x112 memory) {\n        return uq112x112(uint224(x) << RESOLUTION);\n    }\n\n    // encodes a uint144 as a UQ144x112\n    function encode144(uint144 x) internal pure returns (uq144x112 memory) {\n        return uq144x112(uint256(x) << RESOLUTION);\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function div(uq112x112 memory self, uint112 x) internal pure returns (uq112x112 memory) {\n        require(x != 0, 'FixedPoint: DIV_BY_ZERO');\n        return uq112x112(self._x / uint224(x));\n    }\n\n    // multiply a UQ112x112 by a uint, returning a UQ144x112\n    // reverts on overflow\n    function mul(uq112x112 memory self, uint y) internal pure returns (uq144x112 memory) {\n        uint z;\n        require(y == 0 || (z = uint(self._x) * y) / y == uint(self._x), \"FixedPoint: MULTIPLICATION_OVERFLOW\");\n        return uq144x112(z);\n    }\n\n    // returns a UQ112x112 which represents the ratio of the numerator to the denominator\n    // equivalent to encode(numerator).div(denominator)\n    function fraction(uint112 numerator, uint112 denominator) internal pure returns (uq112x112 memory) {\n        require(denominator > 0, \"FixedPoint: DIV_BY_ZERO\");\n        return uq112x112((uint224(numerator) << RESOLUTION) / denominator);\n    }\n\n    // decode a UQ112x112 into a uint112 by truncating after the radix point\n    function decode(uq112x112 memory self) internal pure returns (uint112) {\n        return uint112(self._x >> RESOLUTION);\n    }\n\n    // decode a UQ144x112 into a uint144 by truncating after the radix point\n    function decode144(uq144x112 memory self) internal pure returns (uint144) {\n        return uint144(self._x >> RESOLUTION);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol": {
        "content": "pragma solidity ^0.8.0;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2**112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}"
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "FixedPoint": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e873339bbd8da86ef54f60da7d626e4180b35e9ad52726a9793ae56f1c263b464736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP8 CALLER CODECOPY 0xBB 0xD8 0xDA DUP7 0xEF SLOAD 0xF6 0xD 0xA7 0xD6 0x26 0xE4 XOR SIGNEXTEND CALLDATALOAD 0xE9 0xAD MSTORE PUSH19 0x6A9793AE56F1C263B464736F6C634300080400 CALLER ",
              "sourceMap": "129:2052:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e873339bbd8da86ef54f60da7d626e4180b35e9ad52726a9793ae56f1c263b464736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP8 CALLER CODECOPY 0xBB 0xD8 0xDA DUP7 0xEF SLOAD 0xF6 0xD 0xA7 0xD6 0x26 0xE4 XOR SIGNEXTEND CALLDATALOAD 0xE9 0xAD MSTORE PUSH19 0x6A9793AE56F1C263B464736F6C634300080400 CALLER ",
              "sourceMap": "129:2052:1:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "IUniswapV2Factory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "PairCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          }
        }
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "IUniswapV2Pair": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "skim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "skim(address)": "bc25cf77",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol": {
        "UQ112x112": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4d3045c8ec6f48e8969bb5d73cd88f8227d33813ac8e4f040779f9a1b9ef0e64736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x4D ADDRESS GASLIMIT 0xC8 0xEC PUSH16 0x48E8969BB5D73CD88F8227D33813AC8E 0x4F DIV SMOD PUSH26 0xF9A1B9EF0E64736F6C6343000804003300000000000000000000 ",
              "sourceMap": "182:394:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4d3045c8ec6f48e8969bb5d73cd88f8227d33813ac8e4f040779f9a1b9ef0e64736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x4D ADDRESS GASLIMIT 0xC8 0xEC PUSH16 0x48E8969BB5D73CD88F8227D33813AC8E 0x4F DIV SMOD PUSH26 0xF9A1B9EF0E64736F6C6343000804003300000000000000000000 ",
              "sourceMap": "182:394:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "UniswapV2OracleLibrary": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1c39aa391a50161e3cae883f538c862acb7d473385b498002c791cf6011664964736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC3 SWAP11 LOG3 SWAP2 0xA5 ADD PUSH2 0xE3CA 0xE8 DUP4 CREATE2 CODESIZE 0xC8 PUSH3 0xACB7D4 PUSH20 0x385B498002C791CF6011664964736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "244:1444:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1c39aa391a50161e3cae883f538c862acb7d473385b498002c791cf6011664964736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC3 SWAP11 LOG3 SWAP2 0xA5 ADD PUSH2 0xE3CA 0xE8 DUP4 CREATE2 CODESIZE 0xC8 PUSH3 0xACB7D4 PUSH20 0x385B498002C791CF6011664964736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "244:1444:5:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/Market.sol": {
        "Market": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract MarketFactory",
                  "name": "_factory",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "contract IUniswapV2Pair",
                  "name": "_uniswapPair",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_period",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_initTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_taxMarket",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_feeMarket",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_dPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_tReporting",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minTax",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_avgPriceSwitch",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oracleTimestampStart",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oracleTimestampEnd",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeStart",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeEnd",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardFund",
                  "type": "uint256"
                }
              ],
              "name": "FrameUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "frameKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lotKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "lotOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "acquisitionPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Market.SLot",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Market.Lot",
                  "name": "lotStruct",
                  "type": "tuple"
                }
              ],
              "name": "LotUpdate",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "accountingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "buyLot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "clcAmountToApprove",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "cmpltAmnt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "clcAmountToApproveForUpdate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amnt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "clcFrameTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "clcLotKey",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "clcPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "avgPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "emptyFunds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "contract MarketFactory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeMarket",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeProtocol",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "frames",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oracleTimestampStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oracleTimestampEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardFund",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceAverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePriceCumulativeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePriceCumulativeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Market.SFrame",
                  "name": "state",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "framesKeys",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lotKey",
                  "type": "uint256"
                }
              ],
              "name": "getLot",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "frameKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lotKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "lotOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "acquisitionPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Market.SLot",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct Market.Lot",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getLotKey",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getNumOfUserFrames",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNumberOfFrameKeys",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "startFrame",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numOfFrames",
                  "type": "uint256"
                }
              ],
              "name": "getOpenFrameKeys",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "getRewardAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getUserFrames",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getUserLots",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "frameKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lotKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "lotOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "acquisitionPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Market.SLot",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct Market.Lot[]",
                  "name": "userLots",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minTax",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ownerMarket",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "period",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tReporting",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "taxMarket",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "uniswapPair",
              "outputs": [
                {
                  "internalType": "contract IUniswapV2Pair",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "updateFramePrices",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "updateLotPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "userFrames",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4349:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "67:77:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "77:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "92:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "86:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "86:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "77:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "132:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "108:30:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "45:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "53:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "61:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "226:93:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "236:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "251:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "236:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "307:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IERC20_$77",
                                  "nodeType": "YulIdentifier",
                                  "src": "267:39:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "267:46:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "267:46:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "204:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "212:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "220:5:8",
                            "type": ""
                          }
                        ],
                        "src": "150:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "410:102:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "420:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "435:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "429:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "429:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "420:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "500:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IUniswapV2Pair_$568",
                                  "nodeType": "YulIdentifier",
                                  "src": "451:48:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "451:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "451:55:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "388:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "396:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "404:5:8",
                            "type": ""
                          }
                        ],
                        "src": "325:187:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "603:102:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "613:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "628:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "622:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "622:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "613:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "693:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_MarketFactory_$2816",
                                  "nodeType": "YulIdentifier",
                                  "src": "644:48:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "644:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "644:55:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_MarketFactory_$2816_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "581:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "589:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "597:5:8",
                            "type": ""
                          }
                        ],
                        "src": "518:187:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "774:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "784:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "799:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "793:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "793:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "784:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "842:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "815:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "815:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "752:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "760:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "768:5:8",
                            "type": ""
                          }
                        ],
                        "src": "711:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1162:1660:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1209:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1218:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1221:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1211:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1211:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1211:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1183:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1192:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1179:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1179:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1204:3:8",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1175:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1175:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1172:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1235:150:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1250:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1264:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1254:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1279:96:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1347:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1358:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1343:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1343:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1367:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_MarketFactory_$2816_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1289:53:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1289:86:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1279:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1395:142:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1410:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1424:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1414:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1440:87:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1499:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1510:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1495:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1495:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1519:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1450:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1450:77:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1440:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1547:151:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1562:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1576:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1566:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1592:96:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1660:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1671:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1656:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1656:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1680:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1602:53:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1602:86:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1592:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1708:129:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1723:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1737:2:8",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1727:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1753:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1799:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1810:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1795:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1795:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1819:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1763:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1763:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1753:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1847:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1862:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1876:3:8",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1866:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1893:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1939:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1950:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1935:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1935:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1959:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1903:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1903:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1893:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1987:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2002:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2016:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2006:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2033:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2079:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2090:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2075:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2075:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2099:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2043:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2043:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "2033:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2127:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2142:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2156:3:8",
                                    "type": "",
                                    "value": "192"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2146:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2173:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2219:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2230:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2215:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2215:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2239:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2183:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2183:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value6",
                                      "nodeType": "YulIdentifier",
                                      "src": "2173:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2267:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2282:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2296:3:8",
                                    "type": "",
                                    "value": "224"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2286:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2313:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2359:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2370:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2355:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2355:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2379:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2323:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2323:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2313:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2407:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2422:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2436:3:8",
                                    "type": "",
                                    "value": "256"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2426:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2453:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2499:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2510:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2495:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2495:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2519:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2463:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2463:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2453:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2547:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2562:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2576:3:8",
                                    "type": "",
                                    "value": "288"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2566:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2593:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2639:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2650:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2635:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2635:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2659:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2603:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2603:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value9",
                                      "nodeType": "YulIdentifier",
                                      "src": "2593:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2687:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2702:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2716:3:8",
                                    "type": "",
                                    "value": "320"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2706:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2733:72:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2777:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2788:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2773:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2773:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2797:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2744:28:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2744:61:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value10",
                                      "nodeType": "YulIdentifier",
                                      "src": "2733:7:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_MarketFactory_$2816t_contract$_IERC20_$77t_contract$_IUniswapV2Pair_$568t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1051:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1062:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1074:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1082:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1090:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1098:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1106:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1114:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "1122:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "1130:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "1138:6:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "1146:6:8",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "1154:7:8",
                            "type": ""
                          }
                        ],
                        "src": "860:1962:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2873:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2883:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2912:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "2894:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2894:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2883:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2855:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2865:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2828:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2972:48:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2982:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3007:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3000:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3000:13:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2993:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2993:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2982:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2954:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2964:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2930:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3084:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3094:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3123:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3105:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3105:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3094:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3066:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3076:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3026:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3208:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3218:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3247:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3229:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3229:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3218:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IUniswapV2Pair_$568",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3190:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3200:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3141:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3332:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3342:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3371:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3353:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3353:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3342:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_MarketFactory_$2816",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3314:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3324:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3265:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3434:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3444:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3459:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3466:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3455:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3455:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3444:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3416:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3426:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3389:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3566:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3576:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3587:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3576:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3548:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3558:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3521:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3644:76:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3698:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3707:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3710:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3700:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3700:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3700:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3667:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3689:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "3674:14:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3674:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3664:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3664:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3657:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3657:40:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3654:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3637:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3604:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3782:92:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3852:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3861:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3864:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3854:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3854:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3854:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3805:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3843:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IERC20_$77",
                                          "nodeType": "YulIdentifier",
                                          "src": "3812:30:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3812:37:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3802:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3802:48:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3795:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3795:56:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3792:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3775:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3726:148:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3945:101:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4024:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4033:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4036:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4026:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4026:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4026:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3968:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4015:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IUniswapV2Pair_$568",
                                          "nodeType": "YulIdentifier",
                                          "src": "3975:39:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3975:46:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3965:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3965:57:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3958:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3958:65:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3955:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IUniswapV2Pair_$568",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3938:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3880:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4117:101:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4196:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4205:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4208:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4198:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4198:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4198:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4140:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4187:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_MarketFactory_$2816",
                                          "nodeType": "YulIdentifier",
                                          "src": "4147:39:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4147:46:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "4137:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4137:57:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4130:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4130:65:8"
                              },
                              "nodeType": "YulIf",
                              "src": "4127:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_MarketFactory_$2816",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4110:5:8",
                            "type": ""
                          }
                        ],
                        "src": "4052:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4267:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4324:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4333:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4336:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4326:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4326:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4326:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4290:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4315:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "4297:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4297:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "4287:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4287:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4280:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4280:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "4277:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4260:5:8",
                            "type": ""
                          }
                        ],
                        "src": "4224:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IUniswapV2Pair_$568(value)\n    }\n\n    function abi_decode_t_contract$_MarketFactory_$2816_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_MarketFactory_$2816(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_MarketFactory_$2816t_contract$_IERC20_$77t_contract$_IUniswapV2Pair_$568t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 352) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_MarketFactory_$2816_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IUniswapV2Pair_$568_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 320\n\n            value10 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IUniswapV2Pair_$568(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_MarketFactory_$2816(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IUniswapV2Pair_$568(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswapV2Pair_$568(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_MarketFactory_$2816(value) {\n        if iszero(eq(value, cleanup_t_contract$_MarketFactory_$2816(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xC SSTORE PUSH1 0x0 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x570E CODESIZE SUB DUP1 PUSH3 0x570E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST DUP10 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x204 DUP2 PUSH3 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21B DUP2 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x42D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP15 DUP3 DUP16 ADD PUSH3 0x20A JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH3 0x27E DUP15 DUP3 DUP16 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH3 0x291 DUP15 DUP3 DUP16 ADD PUSH3 0x1F3 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH3 0x2A4 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH3 0x2B7 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH3 0x2CA DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH3 0x2DD DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH3 0x2F0 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH3 0x304 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 PUSH3 0x318 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x140 PUSH3 0x32C DUP15 DUP3 DUP16 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34C DUP3 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36C DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x380 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x394 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D0 DUP2 PUSH3 0x353 JUMP JUMPDEST DUP2 EQ PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA DUP2 PUSH3 0x35F JUMP JUMPDEST DUP2 EQ PUSH3 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x404 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP2 EQ PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x387 JUMP JUMPDEST DUP2 EQ PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x438 DUP2 PUSH3 0x3BB JUMP JUMPDEST DUP2 EQ PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x52B7 DUP1 PUSH3 0x457 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F7CB60B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6B9 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x611 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x572 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4EA JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x462 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3B4 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x32A JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x46E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x495B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x1D9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B6 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH2 0x20E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x252F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x25E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x25FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x619 PUSH2 0x2B7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x4760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x4745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x2BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x685 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x472A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A3 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 GT PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x81D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x879 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x8C5 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8B8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8D1 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7BF JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F0 DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FD DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x935 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x943 DUP5 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x955 JUMPI PUSH1 0x0 SWAP5 POP PUSH2 0x964 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9E0 DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9EE DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F9 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x487B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB00 DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC9C SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDF3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 PUSH2 0xE2F DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1122 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11C9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1228 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1290 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x12E9 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138F SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14B5 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14C6 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST DUP3 PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1521 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1565 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x159E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x158B PUSH2 0x3E2D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1583 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15A9 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x191A JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15EE JUMPI PUSH1 0x32 DUP2 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x15E7 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1644 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16A0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1907 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1905 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1730 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1813 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18F2 JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18D9 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 EQ ISZERO PUSH2 0x18F1 JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x18FD SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16A9 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1912 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C53 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1938 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C40 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C3E JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B85 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2B JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1BFD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C13 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x1C2A JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1C36 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19E3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4B SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1922 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C66 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3B SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9F SWAP1 PUSH2 0x479B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F86 SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA4 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x209E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x208A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x20BD JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x20CE SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x20D8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2100 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x210A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2301 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2213 JUMPI PUSH2 0x2151 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x21C5 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x223E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP PUSH2 0x22B2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2312 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x2426 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x2362 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x2425 JUMP JUMPDEST PUSH2 0x23DB PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x24CE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x253B DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2546 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257F SWAP1 PUSH2 0x485B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2593 DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A1 DUP4 DUP7 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x25D9 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25EE DUP2 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x3871 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2619 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2657 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x266B DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2679 DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272A SWAP1 PUSH2 0x47DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x273C TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x277E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2775 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x278A DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27C2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29CF JUMPI DUP1 DUP3 PUSH2 0x27D8 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2835 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2861 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2885 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0x28C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28BD SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2912 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2930 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x295E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2982 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x298F SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x29B0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2ADB JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2ADA JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x2A22 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3F SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A91 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2A9E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2ABF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B12 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x2C2A TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x2C34 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x2C3E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2C52 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C5C SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C69 DUP7 PUSH2 0x3CF9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C88 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x2C92 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2CA8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CB2 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x2CC3 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CCD SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2CDB SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CF3 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D2F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D8B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2D99 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x2DA2 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DDB SWAP1 PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E5F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA3 DUP4 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EDF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F4F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2F5D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2FFD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3010 PUSH2 0x3D35 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x306C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3090 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3110 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x315D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3195 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x3254 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x31BC SWAP2 SWAP1 PUSH2 0x4C62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x31CF DUP5 DUP7 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP8 PUSH2 0x3206 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3219 DUP6 DUP6 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3245 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x3250 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x329C JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x32DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D3 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x334B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3342 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP4 PUSH2 0x335A SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST GT ISZERO PUSH2 0x339B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3392 SWAP1 PUSH2 0x477B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x343A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3480 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x348A SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3511 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x351B SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3547 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x3551 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3576 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3580 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3619 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3647 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x366B SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x374A SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3768 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37BA SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP6 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x3862 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x38AA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3906 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x3946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393D SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3967 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3A12 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x3A53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4A SWAP1 PUSH2 0x481B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B04 SWAP1 PUSH2 0x48FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BCA SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C1C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C91 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3CED SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D04 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3D14 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3D30 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3D23 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3D2D SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3D48 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D55 PUSH2 0x3EAA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3DA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9F SWAP1 PUSH2 0x493B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3E04 SWAP2 SWAP1 PUSH2 0x4B72 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3EA4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EEA DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EFF DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F14 DUP2 PUSH2 0x5225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F29 DUP2 PUSH2 0x523C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F3E DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F53 DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F68 DUP2 PUSH2 0x526A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F8E DUP5 DUP3 DUP6 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB7 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3FF2 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x400E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x401C DUP5 DUP3 DUP6 ADD PUSH2 0x3F05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x403A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4048 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4059 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x406A DUP7 DUP3 DUP8 ADD PUSH2 0x3F59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4094 DUP5 DUP3 DUP6 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40BD DUP5 DUP3 DUP6 ADD PUSH2 0x3F44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40E7 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40F8 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4125 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4136 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4147 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415D DUP4 DUP4 PUSH2 0x44B3 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4175 DUP4 DUP4 PUSH2 0x4624 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x418A DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4199 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41AA DUP3 PUSH2 0x4AB9 JUMP JUMPDEST PUSH2 0x41B4 DUP2 DUP6 PUSH2 0x4AE9 JUMP JUMPDEST SWAP4 POP PUSH2 0x41BF DUP4 PUSH2 0x4A99 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41F0 JUMPI DUP2 MLOAD PUSH2 0x41D7 DUP9 DUP3 PUSH2 0x4151 JUMP JUMPDEST SWAP8 POP PUSH2 0x41E2 DUP4 PUSH2 0x4ACF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x41C3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4208 DUP3 PUSH2 0x4AC4 JUMP JUMPDEST PUSH2 0x4212 DUP2 DUP6 PUSH2 0x4AFA JUMP JUMPDEST SWAP4 POP PUSH2 0x421D DUP4 PUSH2 0x4AA9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x424E JUMPI DUP2 MLOAD PUSH2 0x4235 DUP9 DUP3 PUSH2 0x4169 JUMP JUMPDEST SWAP8 POP PUSH2 0x4240 DUP4 PUSH2 0x4ADC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4221 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4264 DUP2 PUSH2 0x4D8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4273 DUP2 PUSH2 0x4DB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4282 DUP2 PUSH2 0x4DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4291 DUP2 PUSH2 0x4DF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42A0 DUP2 PUSH2 0x4E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B3 PUSH1 0x1A DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42BE DUP3 PUSH2 0x4F7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D6 PUSH1 0x15 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42E1 DUP3 PUSH2 0x4FA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F9 PUSH1 0xB DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4304 DUP3 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431C PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4327 DUP3 PUSH2 0x4FFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433F PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x434A DUP3 PUSH2 0x5023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4362 PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x436D DUP3 PUSH2 0x504C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4385 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4390 DUP3 PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A8 PUSH1 0x1B DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43B3 DUP3 PUSH2 0x509E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43CB PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43D6 DUP3 PUSH2 0x50C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43EE PUSH1 0x19 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43F9 DUP3 PUSH2 0x50F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4411 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x441C DUP3 PUSH2 0x5119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4434 PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x443F DUP3 PUSH2 0x5142 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4457 PUSH1 0x9 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4462 DUP3 PUSH2 0x516B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447A PUSH1 0x11 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4485 DUP3 PUSH2 0x5194 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x449D PUSH1 0x17 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x44A8 DUP3 PUSH2 0x51BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x44C9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x44DC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x44EF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4502 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4515 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4531 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4544 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4557 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x456A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x457D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4598 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45A5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45B6 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45C3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45D4 DUP2 PUSH2 0x4E1D JUMP JUMPDEST PUSH2 0x45E1 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45F2 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45FF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4610 DUP2 PUSH2 0x4E37 JUMP JUMPDEST PUSH2 0x461D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x462D DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x463C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4657 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4672 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x467F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x469B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4700 DUP2 DUP5 PUSH2 0x419F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4722 DUP2 DUP5 PUSH2 0x41FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x473F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x425B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x426A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4794 DUP2 PUSH2 0x42A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47B4 DUP2 PUSH2 0x42C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47D4 DUP2 PUSH2 0x42EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47F4 DUP2 PUSH2 0x430F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4814 DUP2 PUSH2 0x4332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4834 DUP2 PUSH2 0x4355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4854 DUP2 PUSH2 0x4378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4874 DUP2 PUSH2 0x439B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4894 DUP2 PUSH2 0x43BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48B4 DUP2 PUSH2 0x43E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48D4 DUP2 PUSH2 0x4404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F4 DUP2 PUSH2 0x4427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4914 DUP2 PUSH2 0x444A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4934 DUP2 PUSH2 0x446D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4954 DUP2 PUSH2 0x4490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4970 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x451B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x498B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49A6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4583 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49CF PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49DC PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49E9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49F6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A03 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A10 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x4A31 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A3E PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A4B PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A58 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A65 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A72 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A7F PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A8C PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4288 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B27 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B32 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4B67 JUMPI PUSH2 0x4B66 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7D DUP3 PUSH2 0x4D4B JUMP JUMPDEST SWAP2 POP PUSH2 0x4B88 DUP4 PUSH2 0x4D4B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B98 JUMPI PUSH2 0x4B97 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAE DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB9 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4BC9 JUMPI PUSH2 0x4BC8 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BDF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BEA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4C23 JUMPI PUSH2 0x4C22 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C44 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C57 JUMPI PUSH2 0x4C56 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6D DUP3 PUSH2 0x4D7D JUMP JUMPDEST SWAP2 POP PUSH2 0x4C78 DUP4 PUSH2 0x4D7D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C8B JUMPI PUSH2 0x4C8A PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD8 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4CF9 DUP3 PUSH2 0x51E6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4D0C DUP3 PUSH2 0x51FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D98 DUP3 PUSH2 0x4D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DAA DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DBC DUP3 PUSH2 0x4DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DCE DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE0 DUP3 PUSH2 0x4DE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF2 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E04 DUP3 PUSH2 0x4CEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E16 DUP3 PUSH2 0x4CFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E30 PUSH2 0x4E2B DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4C96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4A PUSH2 0x4E45 DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E64 PUSH2 0x4E5F DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E76 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4EA9 JUMPI PUSH2 0x4EA8 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ECA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4EDA JUMPI PUSH2 0x4ED9 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F542054484520464143544F5259204F574E45520000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552530000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x51F7 JUMPI PUSH2 0x51F6 PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x520B JUMPI PUSH2 0x520A PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5217 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x5222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x522E DUP2 PUSH2 0x4CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x5239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5245 DUP2 PUSH2 0x4D11 JUMP JUMPDEST DUP2 EQ PUSH2 0x5250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x525C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP2 EQ PUSH2 0x5267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5273 DUP2 PUSH2 0x4D7D JUMP JUMPDEST DUP2 EQ PUSH2 0x527E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC5 SWAP10 OR BALANCE DUP7 SWAP6 0xB6 0xB5 AND 0x26 0xCD SLT 0xB8 0xC9 JUMP DUP8 PUSH21 0x8EF885A16BA97F3A37141F1CEE5764736F6C634300 ADDMOD DIV STOP CALLER ",
              "sourceMap": "586:23310:6:-:0;;;889:3;863:29;;1613:4;1599:18;;1653:5;1631:27;;;;;;;;;;;;;;;;;;;;2651:637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2897:6;2879:15;;:24;;;;;;;;;;;;;;;;;;2936:10;2914:11;;:33;;;;;;;;;;;;;;;;;;2967:7;2958:6;:16;;;;3001:14;2985:13;:30;;;;3039:10;3027:9;:22;;;;3072:10;3060:9;:22;;;;3107:12;3093:11;;:26;;;;;;;;;;;;;;;;;;3139:7;3130:6;:16;;;;3167:8;3157:7;;:18;;;;;;;;;;;;;;;;;;3199:11;3186:10;:24;;;;3230:7;3221:6;:16;;;;3265:15;3248:14;;:32;;;;;;;;;;;;;;;;;;2651:637;;;;;;;;;;;586:23310;;7:137:8;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:169::-;220:5;251:6;245:13;236:22;;267:46;307:5;267:46;:::i;:::-;226:93;;;;:::o;325:187::-;404:5;435:6;429:13;420:22;;451:55;500:5;451:55;:::i;:::-;410:102;;;;:::o;518:187::-;597:5;628:6;622:13;613:22;;644:55;693:5;644:55;:::i;:::-;603:102;;;;:::o;711:143::-;768:5;799:6;793:13;784:22;;815:33;842:5;815:33;:::i;:::-;774:80;;;;:::o;860:1962::-;1074:6;1082;1090;1098;1106;1114;1122;1130;1138;1146;1154:7;1204:3;1192:9;1183:7;1179:23;1175:33;1172:2;;;1221:1;1218;1211:12;1172:2;1264:1;1289:86;1367:7;1358:6;1347:9;1343:22;1289:86;:::i;:::-;1279:96;;1235:150;1424:2;1450:77;1519:7;1510:6;1499:9;1495:22;1450:77;:::i;:::-;1440:87;;1395:142;1576:2;1602:86;1680:7;1671:6;1660:9;1656:22;1602:86;:::i;:::-;1592:96;;1547:151;1737:2;1763:64;1819:7;1810:6;1799:9;1795:22;1763:64;:::i;:::-;1753:74;;1708:129;1876:3;1903:64;1959:7;1950:6;1939:9;1935:22;1903:64;:::i;:::-;1893:74;;1847:130;2016:3;2043:64;2099:7;2090:6;2079:9;2075:22;2043:64;:::i;:::-;2033:74;;1987:130;2156:3;2183:64;2239:7;2230:6;2219:9;2215:22;2183:64;:::i;:::-;2173:74;;2127:130;2296:3;2323:64;2379:7;2370:6;2359:9;2355:22;2323:64;:::i;:::-;2313:74;;2267:130;2436:3;2463:64;2519:7;2510:6;2499:9;2495:22;2463:64;:::i;:::-;2453:74;;2407:130;2576:3;2603:64;2659:7;2650:6;2639:9;2635:22;2603:64;:::i;:::-;2593:74;;2547:130;2716:3;2744:61;2797:7;2788:6;2777:9;2773:22;2744:61;:::i;:::-;2733:72;;2687:128;1162:1660;;;;;;;;;;;;;;:::o;2828:96::-;2865:7;2894:24;2912:5;2894:24;:::i;:::-;2883:35;;2873:51;;;:::o;2930:90::-;2964:7;3007:5;3000:13;2993:21;2982:32;;2972:48;;;:::o;3026:109::-;3076:7;3105:24;3123:5;3105:24;:::i;:::-;3094:35;;3084:51;;;:::o;3141:118::-;3200:7;3229:24;3247:5;3229:24;:::i;:::-;3218:35;;3208:51;;;:::o;3265:118::-;3324:7;3353:24;3371:5;3353:24;:::i;:::-;3342:35;;3332:51;;;:::o;3389:126::-;3426:7;3466:42;3459:5;3455:54;3444:65;;3434:81;;;:::o;3521:77::-;3558:7;3587:5;3576:16;;3566:32;;;:::o;3604:116::-;3674:21;3689:5;3674:21;:::i;:::-;3667:5;3664:32;3654:2;;3710:1;3707;3700:12;3654:2;3644:76;:::o;3726:148::-;3812:37;3843:5;3812:37;:::i;:::-;3805:5;3802:48;3792:2;;3864:1;3861;3854:12;3792:2;3782:92;:::o;3880:166::-;3975:46;4015:5;3975:46;:::i;:::-;3968:5;3965:57;3955:2;;4036:1;4033;4026:12;3955:2;3945:101;:::o;4052:166::-;4147:46;4187:5;4147:46;:::i;:::-;4140:5;4137:57;4127:2;;4208:1;4205;4198:12;4127:2;4117:101;:::o;4224:122::-;4297:24;4315:5;4297:24;:::i;:::-;4290:5;4287:35;4277:2;;4336:1;4333;4326:12;4277:2;4267:79;:::o;586:23310:6:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:39814:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "215:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "225:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "240:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "234:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "225:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "283:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "256:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "256:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "256:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "193:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "201:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "209:5:8",
                            "type": ""
                          }
                        ],
                        "src": "152:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "361:77:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "371:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "386:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "380:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "380:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "371:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "426:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "402:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "402:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "402:30:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "339:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "347:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "355:5:8",
                            "type": ""
                          }
                        ],
                        "src": "301:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "507:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "517:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "532:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "526:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "526:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "575:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint112",
                                  "nodeType": "YulIdentifier",
                                  "src": "548:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "548:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "548:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint112_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "485:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "493:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "501:5:8",
                            "type": ""
                          }
                        ],
                        "src": "444:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "645:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "655:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "677:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "664:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "664:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "655:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "720:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "693:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "693:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "693:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "623:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "631:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "639:5:8",
                            "type": ""
                          }
                        ],
                        "src": "593:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "801:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "811:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "826:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "820:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "820:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "869:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "842:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "842:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "842:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "779:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "787:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "795:5:8",
                            "type": ""
                          }
                        ],
                        "src": "738:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "949:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "959:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "974:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "968:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "968:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "959:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1016:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "990:25:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "990:32:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "990:32:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "927:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "935:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "943:5:8",
                            "type": ""
                          }
                        ],
                        "src": "887:141:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1100:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1146:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1155:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1158:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1148:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1148:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1148:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1121:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1130:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1117:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1117:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1142:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1113:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1113:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1110:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1172:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1187:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1201:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1191:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1216:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1251:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1262:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1247:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1247:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1271:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1226:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1226:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1216:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1070:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1081:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1093:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1034:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1379:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1425:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1434:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1437:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1427:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1427:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1427:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1409:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1396:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1396:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1421:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1392:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1392:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1389:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1451:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1466:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1480:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1470:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1495:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1541:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1552:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1537:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1537:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1561:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1505:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1505:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1495:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1349:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1360:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1372:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1302:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1675:324:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1721:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1730:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1733:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1723:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1723:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1723:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1696:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1705:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1692:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1692:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1717:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1688:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1688:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1685:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1747:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1762:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1776:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1766:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1791:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1826:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1837:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1822:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1822:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1846:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1801:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1801:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1791:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1874:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1889:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1903:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1893:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1919:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1954:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1965:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1950:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1950:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1974:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1929:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1929:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1919:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1637:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1648:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1660:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1668:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1592:407:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2079:204:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2125:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2134:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2137:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2127:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2127:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2127:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2100:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2109:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2096:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2096:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2121:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2092:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2092:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2089:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2151:125:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2166:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2180:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2170:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2195:71:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2238:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2249:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2234:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2234:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2258:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2205:28:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2205:61:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2195:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2049:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2060:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2072:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2005:278:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2399:484:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2445:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2454:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2457:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2447:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2447:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2447:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2420:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2429:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2416:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2416:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2441:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2412:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2412:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2409:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2471:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2486:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2500:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2490:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2515:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2561:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2572:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2557:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2557:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2581:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint112_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2525:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2525:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2515:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2609:129:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2624:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2638:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2628:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2654:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2700:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2711:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2696:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2696:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2720:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint112_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2664:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2664:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2654:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2748:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2763:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2777:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2767:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2793:73:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2838:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2849:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2834:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2834:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2858:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint32_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2803:30:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2803:63:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2793:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2353:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2364:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2376:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2384:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2392:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2289:594:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2955:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3001:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3010:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3013:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3003:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3003:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3003:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2976:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2985:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2972:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2972:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2997:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2968:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2968:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2965:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3027:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3042:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3056:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3046:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3071:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3106:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3117:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3102:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3102:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3126:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3081:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3081:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3071:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2925:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2936:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2948:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2889:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3234:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3280:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3289:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3292:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3282:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3282:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3282:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3255:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3264:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3251:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3251:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3276:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3247:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3247:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3244:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3306:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3321:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3335:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3325:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3350:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3396:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3407:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3392:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3392:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3416:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3360:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3360:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3350:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3204:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3215:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3227:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3157:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3530:324:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3576:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3585:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3588:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3578:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3578:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3578:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3551:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3560:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3547:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3547:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3572:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3543:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3543:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3540:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3602:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3617:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3631:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3621:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3646:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3681:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3692:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3677:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3677:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3701:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3656:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3656:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3646:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3729:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3744:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3758:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3748:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3774:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3809:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3820:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3805:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3805:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3829:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3784:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3784:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3774:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3492:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3503:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3515:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3523:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3447:407:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3960:452:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4006:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4015:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4018:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4008:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4008:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4008:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3981:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3990:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3977:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3977:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4002:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3973:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3973:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3970:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4032:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4047:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4061:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4051:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4076:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4111:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4122:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4107:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4107:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4131:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4086:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4086:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4076:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4159:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4174:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4188:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4178:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4204:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4239:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4250:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4235:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4235:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4259:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4214:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4214:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4204:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4287:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4302:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4316:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4306:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4332:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4367:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4378:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4363:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4363:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4387:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4342:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4342:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4332:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3914:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3925:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3937:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3945:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3953:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3860:552:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4538:139:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4622:6:8"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4630:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4548:73:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4548:86:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4548:86:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4643:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4661:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4666:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4657:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4657:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4643:10:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4511:6:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4519:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "4527:10:8",
                            "type": ""
                          }
                        ],
                        "src": "4418:259:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4763:99:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4807:6:8"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4815:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4773:33:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4773:46:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4773:46:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4828:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4846:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4851:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4842:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4842:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4828:10:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4736:6:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4744:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "4752:10:8",
                            "type": ""
                          }
                        ],
                        "src": "4683:179:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4923:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4940:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4963:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4945:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4945:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4933:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4933:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4933:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4911:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4918:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4868:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5047:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5064:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5087:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5069:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5069:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5057:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5057:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5057:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5035:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5042:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4982:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5320:728:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5330:88:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5412:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5344:67:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5344:74:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5334:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5427:113:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5528:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5533:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5434:93:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5434:106:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5427:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5549:91:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5634:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5564:69:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5564:76:8"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "5553:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5649:21:8",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "5663:7:8"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5653:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5739:284:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5753:34:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "5780:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5774:5:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5774:13:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "5757:13:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5800:110:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5891:13:8"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5906:3:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5807:83:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5807:103:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5800:3:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5923:90:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6006:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5933:72:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5933:80:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5923:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5701:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5704:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5698:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5698:13:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5712:18:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5714:14:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5723:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5726:1:8",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5719:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5719:9:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5714:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5683:14:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5685:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5694:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "5689:1:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "5679:344:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6032:10:8",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6039:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6032:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5299:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5306:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5315:3:8",
                            "type": ""
                          }
                        ],
                        "src": "5156:892:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6208:608:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6218:68:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6280:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6232:47:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6232:54:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6222:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6295:93:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6376:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6381:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6302:73:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6302:86:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6295:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6397:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6462:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6412:49:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6412:56:8"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "6401:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6477:21:8",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "6491:7:8"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "6481:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6567:224:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6581:34:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6608:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "6602:5:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6602:13:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "6585:13:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6628:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6679:13:8"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "6694:3:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "6635:43:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6635:63:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6628:3:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6711:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6774:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6721:52:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6721:60:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6711:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6529:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6532:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6526:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6526:13:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6540:18:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6542:14:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6551:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6554:1:8",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6547:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6547:9:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "6542:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6511:14:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6513:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6522:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "6517:1:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "6507:284:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6800:10:8",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6807:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6800:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6187:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6194:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6203:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6084:732:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6900:79:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6917:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6966:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$77_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6922:43:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6922:50:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6910:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6910:63:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6910:63:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6888:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6895:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6822:157:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7072:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7089:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7147:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7094:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7094:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7082:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7082:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7082:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7060:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7067:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6985:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7253:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7270:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7328:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_MarketFactory_$2816_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7275:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7275:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7263:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7263:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7263:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7241:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7248:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7166:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7420:74:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7437:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7481:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_SFrame_$769_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7442:38:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7442:45:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7430:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7430:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7430:58:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7408:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7415:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7347:147:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7561:72:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7578:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7620:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_SLot_$826_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7583:36:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7583:43:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7571:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7571:56:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7571:56:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_SLot_$826_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7549:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7556:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7500:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7785:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7795:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7861:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7866:2:8",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7802:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7802:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7795:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7967:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                  "nodeType": "YulIdentifier",
                                  "src": "7878:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7878:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7878:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7980:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7991:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7996:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7987:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7987:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7980:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7773:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7781:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7639:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8157:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8167:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8233:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8238:2:8",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8174:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8174:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8167:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8339:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4",
                                  "nodeType": "YulIdentifier",
                                  "src": "8250:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8250:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8250:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8352:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8363:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8368:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8359:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8359:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8352:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8145:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8153:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8011:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8529:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8539:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8605:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8610:2:8",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8546:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8546:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8539:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8711:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                                  "nodeType": "YulIdentifier",
                                  "src": "8622:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8622:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8622:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8724:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8735:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8740:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8731:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8731:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8724:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8517:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8525:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8383:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8901:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8911:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8977:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8982:2:8",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8918:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8918:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8911:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9083:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                                  "nodeType": "YulIdentifier",
                                  "src": "8994:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8994:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8994:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9096:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9107:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9112:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9103:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9103:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9096:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8889:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8897:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8755:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9273:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9283:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9349:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9354:2:8",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9290:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9290:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9283:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9455:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                  "nodeType": "YulIdentifier",
                                  "src": "9366:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9366:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9366:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9468:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9479:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9484:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9475:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9475:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9468:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9261:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9269:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9127:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9645:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9655:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9721:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9726:2:8",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9662:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9662:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9655:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9827:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                  "nodeType": "YulIdentifier",
                                  "src": "9738:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9738:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9738:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9840:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9851:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9856:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9847:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9847:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9840:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9633:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9641:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9499:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10017:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10027:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10093:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10098:2:8",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10034:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10034:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10027:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10199:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                  "nodeType": "YulIdentifier",
                                  "src": "10110:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10110:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10110:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10212:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10223:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10228:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10219:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10219:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10212:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10005:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10013:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9871:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10389:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10399:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10465:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10470:2:8",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10406:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10406:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10399:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10571:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                                  "nodeType": "YulIdentifier",
                                  "src": "10482:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10482:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10482:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10584:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10595:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10600:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10591:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10591:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10584:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10377:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10385:3:8",
                            "type": ""
                          }
                        ],
                        "src": "10243:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10761:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10771:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10837:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10842:2:8",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10778:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10778:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10771:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10943:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                                  "nodeType": "YulIdentifier",
                                  "src": "10854:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10854:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10854:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10956:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10967:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10972:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10963:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10963:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10956:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10749:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10757:3:8",
                            "type": ""
                          }
                        ],
                        "src": "10615:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11133:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11143:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11209:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11214:2:8",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11150:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11150:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11143:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11315:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                  "nodeType": "YulIdentifier",
                                  "src": "11226:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11226:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11226:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11328:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11339:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11344:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11335:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11335:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11328:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11121:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11129:3:8",
                            "type": ""
                          }
                        ],
                        "src": "10987:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11505:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11515:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11581:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11586:2:8",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11522:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11522:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11515:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11687:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                  "nodeType": "YulIdentifier",
                                  "src": "11598:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11598:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11598:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11700:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11711:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11716:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11707:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11707:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11700:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11493:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11501:3:8",
                            "type": ""
                          }
                        ],
                        "src": "11359:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11877:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11887:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11953:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11958:2:8",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11894:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11894:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11887:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12059:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                                  "nodeType": "YulIdentifier",
                                  "src": "11970:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11970:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11970:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12072:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12083:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12088:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12079:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12079:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12072:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11865:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11873:3:8",
                            "type": ""
                          }
                        ],
                        "src": "11731:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12249:219:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12259:73:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12325:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12330:1:8",
                                    "type": "",
                                    "value": "9"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12266:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12266:66:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12259:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12430:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d",
                                  "nodeType": "YulIdentifier",
                                  "src": "12341:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12341:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12341:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12443:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12454:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12459:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12450:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12450:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12443:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12237:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12245:3:8",
                            "type": ""
                          }
                        ],
                        "src": "12103:365:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12620:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12630:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12696:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12701:2:8",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12637:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12637:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12630:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12802:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                                  "nodeType": "YulIdentifier",
                                  "src": "12713:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12713:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12713:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12815:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12826:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12831:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12822:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12822:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12815:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12608:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12616:3:8",
                            "type": ""
                          }
                        ],
                        "src": "12474:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12992:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13002:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13068:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13073:2:8",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13009:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13009:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13002:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13174:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                  "nodeType": "YulIdentifier",
                                  "src": "13085:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13085:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13085:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13187:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13198:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13203:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13194:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13194:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "13187:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12980:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12988:3:8",
                            "type": ""
                          }
                        ],
                        "src": "12846:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13360:942:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13370:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13386:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13391:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13382:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13382:14:8"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "13374:4:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13406:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13445:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13475:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13482:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13471:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13471:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13465:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13465:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13449:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13535:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "13553:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13558:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13549:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13549:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "13501:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13501:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13501:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13584:166:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13621:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13651:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13658:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13647:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13647:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13641:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13641:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13625:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13711:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "13729:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13734:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13725:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13725:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "13677:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13677:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13677:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13760:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13799:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13829:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13836:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13825:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13825:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "13819:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13819:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13803:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13889:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "13907:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13912:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13903:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13903:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "13855:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13855:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13855:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13938:176:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13985:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14015:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14022:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14011:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14011:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14005:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14005:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "13989:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14075:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14093:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14098:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14089:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14089:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "14041:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14041:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14041:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14124:171:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14160:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14190:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14197:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14186:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14186:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14180:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14180:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14164:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14256:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14274:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14279:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14270:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14270:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_SLot_$826_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "14216:39:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14216:69:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14216:69:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13347:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13354:3:8",
                            "type": ""
                          }
                        ],
                        "src": "13264:1038:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14460:942:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14470:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14486:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14491:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14482:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14482:14:8"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "14474:4:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14506:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14545:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14575:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14582:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14571:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14571:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14565:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14565:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14549:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14635:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14653:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14658:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14649:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14649:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "14601:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14601:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14601:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14684:166:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14721:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14751:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14758:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14747:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14747:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14741:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14741:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14725:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14811:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "14829:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14834:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14825:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14825:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "14777:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14777:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14777:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14860:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14899:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14929:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14936:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14925:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14925:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14919:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14919:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "14903:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14989:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "15007:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15012:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15003:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15003:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "14955:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14955:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14955:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15038:176:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15085:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15115:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15122:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15111:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15111:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15105:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15105:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15089:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15175:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "15193:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15198:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15189:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15189:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15141:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15141:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15141:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15224:171:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15260:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15290:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15297:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15286:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15286:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15280:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15280:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15264:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15356:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "15374:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15379:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15370:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15370:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_SLot_$826_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "15316:39:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15316:69:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15316:69:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14447:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14454:3:8",
                            "type": ""
                          }
                        ],
                        "src": "14354:1048:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15557:1377:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15567:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15583:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15588:4:8",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15579:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15579:14:8"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "15571:4:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15602:18:8",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15619:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "slotValue",
                                  "nodeType": "YulTypedName",
                                  "src": "15606:9:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15630:248:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15668:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15691:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15698:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15687:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15687:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15681:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15681:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "15668:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15717:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "15782:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15737:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15737:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15721:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15839:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "15857:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15862:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15853:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15853:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15805:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15805:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15805:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15888:246:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15924:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15947:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15954:4:8",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15943:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15943:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15937:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15937:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "15924:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15973:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "16038:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15993:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15993:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "15977:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16095:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16113:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16118:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16109:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16109:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16061:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16061:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16061:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16144:248:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16182:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16205:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16212:4:8",
                                            "type": "",
                                            "value": "0x02"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16201:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16201:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "16195:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16195:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "16182:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16231:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "16296:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "16251:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16251:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "16235:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16353:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16371:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16376:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16367:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16367:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "16319:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16319:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16319:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16402:256:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16448:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16471:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16478:4:8",
                                            "type": "",
                                            "value": "0x03"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16467:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16467:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "16461:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16461:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "16448:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16497:75:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "16562:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16517:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16517:55:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "16501:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16619:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16637:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16642:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16633:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16633:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16585:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16585:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16585:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16668:259:8",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16703:36:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16726:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16733:4:8",
                                            "type": "",
                                            "value": "0x04"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16722:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16722:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "16716:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16716:23:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "16703:9:8"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16752:83:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "slotValue",
                                        "nodeType": "YulIdentifier",
                                        "src": "16825:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_from_storage_value_offset_0t_enum$_SLot_$826",
                                      "nodeType": "YulIdentifier",
                                      "src": "16772:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16772:63:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "16756:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16888:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16906:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16911:4:8",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16902:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16902:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_SLot_$826_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "16848:39:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16848:69:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16848:69:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Lot_$838_storage_to_t_struct$_Lot_$838_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15544:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15551:3:8",
                            "type": ""
                          }
                        ],
                        "src": "15454:1480:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16995:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17012:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "17035:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "17017:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17017:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17005:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17005:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17005:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16983:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16990:3:8",
                            "type": ""
                          }
                        ],
                        "src": "16940:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17119:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17136:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "17159:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "17141:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17141:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17129:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17129:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17129:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17107:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17114:3:8",
                            "type": ""
                          }
                        ],
                        "src": "17054:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17276:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17286:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17298:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17309:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17294:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17294:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17286:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17366:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17379:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17390:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17375:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17375:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17322:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17322:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17322:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17248:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17260:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17271:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17178:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17532:206:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17542:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17554:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17565:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17550:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17550:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17542:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17622:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17635:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17646:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17631:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17631:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17578:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17578:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17578:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17703:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17716:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17727:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17712:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17712:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17659:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17659:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17659:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17496:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "17508:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17516:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17527:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17406:332:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17898:288:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17908:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17920:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17931:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17916:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17916:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17908:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17988:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18001:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18012:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17997:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17997:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17944:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17944:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17944:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "18069:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18082:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18093:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18078:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18078:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18025:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18025:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18025:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "18151:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18164:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18175:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18160:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18160:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18107:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18107:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18107:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17854:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "17866:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "17874:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17882:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17893:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17744:442:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18318:206:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18328:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18340:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18351:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18336:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18336:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18328:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18408:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18421:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18432:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18417:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18417:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18364:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18364:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18364:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "18489:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18502:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18513:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18498:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18498:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18445:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18445:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18445:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18282:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18294:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18302:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18313:4:8",
                            "type": ""
                          }
                        ],
                        "src": "18192:332:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18718:265:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18728:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18740:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18751:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18736:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18736:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18728:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18775:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18786:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18771:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18771:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18794:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18800:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18790:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18790:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18764:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18764:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18764:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18820:156:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18962:6:8"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18971:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18828:133:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18828:148:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18820:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18690:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18702:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18713:4:8",
                            "type": ""
                          }
                        ],
                        "src": "18530:453:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19137:225:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19147:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19159:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19170:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19155:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19155:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19147:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19194:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19205:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19190:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19190:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "19213:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19219:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19209:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19209:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19183:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19183:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19183:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19239:116:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19341:6:8"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19350:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19247:93:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19247:108:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19239:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19109:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19121:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19132:4:8",
                            "type": ""
                          }
                        ],
                        "src": "18989:373:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19479:137:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19489:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19501:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19512:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19497:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19497:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19489:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19582:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19595:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19606:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19591:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19591:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19525:56:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19525:84:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19525:84:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19451:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19463:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19474:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19368:248:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19742:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19752:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19764:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19775:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19760:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19760:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19752:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19854:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19867:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19878:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19863:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19863:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19788:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19788:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19788:93:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IUniswapV2Pair_$568__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19714:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19726:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19737:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19622:266:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20014:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20024:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20036:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20047:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20032:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20032:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20024:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "20126:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20139:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20150:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20135:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20135:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20060:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20060:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20060:93:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_MarketFactory_$2816__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19986:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19998:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20009:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19894:266:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20337:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20347:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20359:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20370:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20355:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20355:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20347:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20394:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20405:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20390:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20390:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "20413:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20419:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20409:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20409:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20383:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20383:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20383:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20439:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20573:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20447:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20447:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20439:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20317:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20332:4:8",
                            "type": ""
                          }
                        ],
                        "src": "20166:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20762:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20772:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20784:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20795:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20780:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20780:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20772:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20819:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20830:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20815:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20815:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "20838:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20844:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20834:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20834:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20808:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20808:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20808:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20864:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20998:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20872:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20872:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20864:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20742:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20757:4:8",
                            "type": ""
                          }
                        ],
                        "src": "20591:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21187:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21197:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21209:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21220:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21205:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21205:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21197:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21244:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21255:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21240:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21240:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21263:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21269:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21259:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21259:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21233:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21233:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21233:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21289:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21423:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21297:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21297:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21289:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21167:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21182:4:8",
                            "type": ""
                          }
                        ],
                        "src": "21016:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21612:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21622:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21634:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21645:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21630:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21630:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21622:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21669:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21680:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21665:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21665:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21688:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21694:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21684:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21684:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21658:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21658:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21658:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21714:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21848:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21722:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21722:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21714:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21592:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21607:4:8",
                            "type": ""
                          }
                        ],
                        "src": "21441:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22037:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22047:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22059:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22070:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22055:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22055:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22047:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22094:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22105:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22090:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22090:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22113:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22119:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22109:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22109:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22083:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22083:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22083:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22139:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22273:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22147:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22147:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22139:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22017:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22032:4:8",
                            "type": ""
                          }
                        ],
                        "src": "21866:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22462:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22472:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22484:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22495:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22480:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22480:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22472:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22519:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22530:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22515:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22515:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22538:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22544:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22534:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22534:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22508:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22508:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22508:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22564:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22698:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22572:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22572:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22564:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22442:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22457:4:8",
                            "type": ""
                          }
                        ],
                        "src": "22291:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22887:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22897:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22909:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22920:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22905:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22905:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22897:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22944:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22955:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22940:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22940:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22963:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22969:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22959:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22959:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22933:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22933:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22933:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22989:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23123:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22997:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22997:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22989:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22867:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22882:4:8",
                            "type": ""
                          }
                        ],
                        "src": "22716:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23312:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23322:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23334:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23345:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23330:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23330:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23322:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23369:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23380:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23365:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23365:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "23388:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23394:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23384:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23384:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23358:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23358:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23358:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23414:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23548:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23422:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23422:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23414:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23292:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23307:4:8",
                            "type": ""
                          }
                        ],
                        "src": "23141:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23737:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23747:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23759:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23770:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23755:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23755:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23747:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23794:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23805:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23790:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23790:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "23813:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23819:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23809:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23809:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23783:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23783:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23783:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23839:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23973:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23847:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23847:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23839:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23717:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23732:4:8",
                            "type": ""
                          }
                        ],
                        "src": "23566:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24162:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24172:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24184:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24195:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24180:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24180:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24172:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24219:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24230:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24215:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24215:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "24238:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24244:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "24234:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24234:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24208:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24208:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24208:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24264:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24398:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24272:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24272:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24264:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24142:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24157:4:8",
                            "type": ""
                          }
                        ],
                        "src": "23991:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24587:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24597:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24609:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24620:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24605:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24605:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24597:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24644:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24655:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24640:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24640:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "24663:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24669:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "24659:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24659:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24633:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24633:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24633:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24689:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24823:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24697:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24697:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24689:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24567:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24582:4:8",
                            "type": ""
                          }
                        ],
                        "src": "24416:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25012:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25022:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25034:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25045:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25030:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25030:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25022:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25069:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25080:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25065:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25065:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25088:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25094:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25084:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25084:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25058:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25058:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25058:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25114:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25248:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25122:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25122:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25114:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24992:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25007:4:8",
                            "type": ""
                          }
                        ],
                        "src": "24841:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25437:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25447:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25459:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25470:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25455:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25455:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25447:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25494:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25505:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25490:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25490:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25513:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25519:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25509:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25509:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25483:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25483:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25483:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25539:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25673:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25547:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25547:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25539:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25417:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25432:4:8",
                            "type": ""
                          }
                        ],
                        "src": "25266:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25862:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25872:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25884:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25895:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25880:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25880:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25872:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25919:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25930:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25915:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25915:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25938:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25944:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25934:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25934:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25908:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25908:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25908:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25964:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "26098:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25972:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25972:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25964:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25842:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25857:4:8",
                            "type": ""
                          }
                        ],
                        "src": "25691:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26287:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26297:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26309:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26320:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26305:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26305:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26297:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26344:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26355:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26340:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26340:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "26363:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26369:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "26359:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26359:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26333:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26333:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26333:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26389:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "26523:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26397:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26397:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26389:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26267:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26282:4:8",
                            "type": ""
                          }
                        ],
                        "src": "26116:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26679:165:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26689:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26701:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26712:3:8",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26697:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26697:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26689:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "26810:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26823:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26834:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26819:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26819:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26726:83:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26726:111:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26726:111:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Lot_$838_memory_ptr__to_t_struct$_Lot_$838_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26651:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "26663:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26674:4:8",
                            "type": ""
                          }
                        ],
                        "src": "26541:303:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26948:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26958:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26970:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26981:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26966:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26966:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26958:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "27038:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27051:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27062:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27047:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27047:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26994:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26994:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26994:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26920:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "26932:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26943:4:8",
                            "type": ""
                          }
                        ],
                        "src": "26850:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27241:244:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27251:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27263:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27274:3:8",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27259:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27259:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27251:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "27332:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27345:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27356:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27341:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27341:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27288:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27288:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27288:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27450:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27463:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27474:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27459:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27459:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Lot_$838_storage_to_t_struct$_Lot_$838_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27369:80:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27369:109:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27369:109:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_struct$_Lot_$838_storage__to_t_uint256_t_struct$_Lot_$838_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27205:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "27217:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "27225:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27236:4:8",
                            "type": ""
                          }
                        ],
                        "src": "27078:407:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27729:537:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27739:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27751:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27762:3:8",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27747:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27747:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27739:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "27820:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27833:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27844:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27829:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27829:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27776:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27776:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27776:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "27901:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27914:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27925:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27910:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27910:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27857:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27857:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27857:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "27983:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27996:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28007:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27992:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27992:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27939:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27939:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27939:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "28065:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28078:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28089:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28074:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28074:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28021:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28021:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28021:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "28147:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28160:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28171:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28156:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28156:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28103:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28103:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28103:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "28230:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28243:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28254:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28239:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28239:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28186:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28186:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28186:73:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27661:9:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "27673:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "27681:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "27689:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "27697:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "27705:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "27713:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27724:4:8",
                            "type": ""
                          }
                        ],
                        "src": "27491:775:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28574:711:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28584:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "28596:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28607:3:8",
                                    "type": "",
                                    "value": "256"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28592:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28592:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28584:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "28665:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28678:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28689:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28674:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28674:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28621:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28621:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28621:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "28746:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28759:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28770:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28755:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28755:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28702:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28702:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28702:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "28828:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28841:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28852:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28837:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28837:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28784:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28784:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28784:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "28910:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28923:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28934:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28919:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28919:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28866:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28866:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28866:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "28992:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29005:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29016:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29001:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29001:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28948:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28948:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28948:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "29075:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29088:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29099:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29084:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29084:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29031:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29031:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29031:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "29158:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29171:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29182:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29167:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29167:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29114:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29114:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29114:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "29249:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29262:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29273:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29258:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29258:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29197:51:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29197:81:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29197:81:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_SFrame_$769__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "28490:9:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "28502:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "28510:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "28518:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "28526:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "28534:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "28542:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "28550:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "28558:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "28569:4:8",
                            "type": ""
                          }
                        ],
                        "src": "28272:1013:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29383:60:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29393:11:8",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "29401:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29393:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29414:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "29426:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29431:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29422:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29422:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29414:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "29370:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "29378:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29291:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29521:60:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29531:11:8",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "29539:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29531:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29552:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "29564:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29569:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29560:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29560:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "29552:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "29508:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "29516:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29449:132:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29681:40:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29692:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29708:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "29702:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29702:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "29692:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29664:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "29674:6:8",
                            "type": ""
                          }
                        ],
                        "src": "29587:134:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29801:40:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29812:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29828:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "29822:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29822:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "29812:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29784:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "29794:6:8",
                            "type": ""
                          }
                        ],
                        "src": "29727:114:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29942:38:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29952:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "29964:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29969:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29960:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29960:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "29952:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "29929:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "29937:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29847:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30061:38:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30071:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "30083:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30088:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30079:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30079:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "30071:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "30048:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "30056:4:8",
                            "type": ""
                          }
                        ],
                        "src": "29986:113:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30236:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30253:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30258:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30246:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30246:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30246:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30274:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30293:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30298:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30289:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30289:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "30274:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30208:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "30213:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "30224:11:8",
                            "type": ""
                          }
                        ],
                        "src": "30105:204:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30426:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30443:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30448:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30436:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30436:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30436:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30464:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30483:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30488:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30479:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30479:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "30464:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30398:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "30403:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "30414:11:8",
                            "type": ""
                          }
                        ],
                        "src": "30315:184:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30601:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30618:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30623:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30611:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30611:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30611:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30639:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30658:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30663:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30654:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30654:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "30639:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30573:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "30578:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "30589:11:8",
                            "type": ""
                          }
                        ],
                        "src": "30505:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30724:261:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30734:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "30757:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "30739:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30739:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "30734:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30768:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "30791:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "30773:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30773:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "30768:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "30931:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "30933:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "30933:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "30933:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "30852:1:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30859:66:8",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "30927:1:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "30855:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30855:74:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "30849:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30849:81:8"
                              },
                              "nodeType": "YulIf",
                              "src": "30846:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30963:16:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "30974:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "30977:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30970:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30970:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "30963:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "30711:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "30714:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "30720:3:8",
                            "type": ""
                          }
                        ],
                        "src": "30680:305:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31033:143:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31043:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31066:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint224",
                                  "nodeType": "YulIdentifier",
                                  "src": "31048:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31048:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31043:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31077:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31100:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint224",
                                  "nodeType": "YulIdentifier",
                                  "src": "31082:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31082:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31077:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31124:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "31126:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31126:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31126:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31121:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "31114:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31114:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31111:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31156:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31165:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31168:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "31161:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31161:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "31156:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint224",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31022:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31025:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "31031:1:8",
                            "type": ""
                          }
                        ],
                        "src": "30991:185:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31224:143:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31234:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31257:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31239:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31239:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31234:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31268:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31291:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31273:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31273:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31268:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31315:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "31317:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31317:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31317:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31312:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "31305:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31305:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31302:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31347:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31356:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31359:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "31352:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31352:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "31347:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31213:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31216:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "31222:1:8",
                            "type": ""
                          }
                        ],
                        "src": "31182:185:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31421:300:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31431:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31454:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31436:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31436:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31431:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31465:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31488:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31470:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31470:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31465:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31663:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "31665:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31665:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31665:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "31575:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "31568:6:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "31568:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "31561:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31561:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "31583:1:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "31590:66:8",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "31658:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "31586:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "31586:74:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "31580:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31580:81:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "31557:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31557:105:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31554:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31695:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31710:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31713:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "31706:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31706:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "31695:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31404:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31407:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "31413:7:8",
                            "type": ""
                          }
                        ],
                        "src": "31373:348:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31772:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31782:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31805:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31787:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31787:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31782:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31816:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31839:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "31821:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31821:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "31816:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "31863:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "31865:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "31865:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "31865:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31857:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31860:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "31854:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31854:8:8"
                              },
                              "nodeType": "YulIf",
                              "src": "31851:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31895:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "31907:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "31910:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "31903:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31903:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "31895:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31758:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31761:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "31767:4:8",
                            "type": ""
                          }
                        ],
                        "src": "31727:191:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31968:144:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31978:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "32000:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "31983:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31983:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "31978:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "32011:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "32033:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "32016:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32016:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "32011:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "32057:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "32059:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "32059:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "32059:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "32051:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "32054:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "32048:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32048:8:8"
                              },
                              "nodeType": "YulIf",
                              "src": "32045:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "32089:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "32101:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "32104:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "32097:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32097:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "32089:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "31954:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "31957:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "31963:4:8",
                            "type": ""
                          }
                        ],
                        "src": "31924:188:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32176:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32186:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32201:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32208:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "32197:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32197:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32186:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_from_storage_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32158:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32168:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32118:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32329:43:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32339:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32354:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32361:4:8",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "32350:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32350:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32339:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_from_storage_t_enum$_SLot_$826",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32311:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32321:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32263:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32436:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32446:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "32457:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32446:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_from_storage_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32418:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32428:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32378:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32519:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32529:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32558:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "32540:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32540:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32529:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32501:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32511:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32474:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32618:48:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32628:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "32653:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "32646:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32646:13:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "32639:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32639:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32628:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32600:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32610:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32576:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32727:76:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32737:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "32748:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32737:7:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32791:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_SFrame_$769",
                                  "nodeType": "YulIdentifier",
                                  "src": "32754:36:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32754:43:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32754:43:8"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_SFrame_$769",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32709:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32719:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32672:131:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32862:74:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32872:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "32883:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32872:7:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32924:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_SLot_$826",
                                  "nodeType": "YulIdentifier",
                                  "src": "32889:34:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32889:41:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32889:41:8"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_SLot_$826",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32844:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32854:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32809:127:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32987:69:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32997:53:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33012:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33019:30:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "33008:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33008:42:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "32997:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint112",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "32969:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "32979:7:8",
                            "type": ""
                          }
                        ],
                        "src": "32942:114:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33107:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33117:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33132:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33139:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "33128:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33128:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33117:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33089:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33099:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33062:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33239:97:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33249:81:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33264:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33271:58:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "33260:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33260:70:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33249:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint224",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33221:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33231:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33194:142:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33387:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33397:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "33408:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33397:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33369:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33379:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33342:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33469:49:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33479:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33494:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33501:10:8",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "33490:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33490:22:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "33479:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33451:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "33461:7:8",
                            "type": ""
                          }
                        ],
                        "src": "33425:93:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33597:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33607:63:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33664:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "33620:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33620:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "33607:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33577:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "33587:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33524:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33755:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33765:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33796:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "33778:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33778:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "33765:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33735:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "33745:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33682:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33896:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33906:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "33972:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "33919:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33919:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "33906:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "33876:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "33886:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33814:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34072:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34082:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34113:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "34095:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34095:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34082:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34052:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34062:9:8",
                            "type": ""
                          }
                        ],
                        "src": "33990:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34213:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34223:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34289:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_MarketFactory_$2816_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "34236:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34236:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34223:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2816_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34193:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34203:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34131:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34389:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34399:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34430:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "34412:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34412:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34399:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2816_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34369:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34379:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34307:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34516:63:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34526:47:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34567:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_SFrame_$769",
                                  "nodeType": "YulIdentifier",
                                  "src": "34539:27:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34539:34:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34526:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_SFrame_$769_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34496:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34506:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34448:131:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34651:61:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34661:45:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34700:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_SLot_$826",
                                  "nodeType": "YulIdentifier",
                                  "src": "34674:25:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34674:32:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "34661:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_SLot_$826_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34631:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "34641:9:8",
                            "type": ""
                          }
                        ],
                        "src": "34585:127:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34793:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34803:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot_value",
                                        "nodeType": "YulIdentifier",
                                        "src": "34866:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_0_unsigned",
                                      "nodeType": "YulIdentifier",
                                      "src": "34843:22:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34843:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_from_storage_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "34812:30:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34812:66:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "34803:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_from_storage_value_offset_0t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulTypedName",
                            "src": "34772:10:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34787:5:8",
                            "type": ""
                          }
                        ],
                        "src": "34718:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34973:99:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34983:83:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot_value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35054:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_0_unsigned",
                                      "nodeType": "YulIdentifier",
                                      "src": "35031:22:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35031:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_from_storage_t_enum$_SLot_$826",
                                  "nodeType": "YulIdentifier",
                                  "src": "34992:38:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34992:74:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "34983:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_from_storage_value_offset_0t_enum$_SLot_$826",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulTypedName",
                            "src": "34952:10:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34967:5:8",
                            "type": ""
                          }
                        ],
                        "src": "34890:182:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35153:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35163:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot_value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35226:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_0_unsigned",
                                      "nodeType": "YulIdentifier",
                                      "src": "35203:22:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35203:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_from_storage_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35172:30:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35172:66:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "35163:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_from_storage_value_offset_0t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulTypedName",
                            "src": "35132:10:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "35147:5:8",
                            "type": ""
                          }
                        ],
                        "src": "35078:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35293:190:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35303:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35330:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35312:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35312:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "35303:5:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "35426:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "35428:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "35428:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "35428:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35351:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35358:66:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "35348:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35348:77:8"
                              },
                              "nodeType": "YulIf",
                              "src": "35345:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35457:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35468:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35475:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35464:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35464:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "35457:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "35279:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "35289:3:8",
                            "type": ""
                          }
                        ],
                        "src": "35250:233:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35523:142:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35533:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "35556:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35538:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35538:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "35533:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35567:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "35590:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "35572:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35572:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "35567:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "35614:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "35616:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "35616:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "35616:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "35611:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "35604:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35604:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "35601:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "35645:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "35654:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "35657:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "35650:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35650:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "35645:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "35512:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "35515:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "35521:1:8",
                            "type": ""
                          }
                        ],
                        "src": "35489:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35699:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35716:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35719:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35709:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35709:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35709:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35813:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35816:4:8",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35806:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35806:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35806:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35837:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35840:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "35830:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35830:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35830:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "35671:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35885:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35902:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35905:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35895:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35895:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35895:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35999:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36002:4:8",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35992:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35992:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35992:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36023:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36026:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "36016:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36016:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36016:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "35857:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36071:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36088:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36091:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36081:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36081:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36081:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36185:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36188:4:8",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36178:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36178:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36178:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36209:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36212:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "36202:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36202:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36202:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "36043:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36280:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "36290:34:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36315:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "36318:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "36311:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36311:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "36290:8:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_0_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "36261:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nodeType": "YulTypedName",
                            "src": "36271:8:8",
                            "type": ""
                          }
                        ],
                        "src": "36229:102:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36443:70:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36465:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36473:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36461:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36461:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "36477:28:8",
                                    "type": "",
                                    "value": "FRAME END TIME NOT REACHED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36454:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36454:52:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36454:52:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36435:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36337:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36625:65:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36647:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36655:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36643:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36643:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "36659:23:8",
                                    "type": "",
                                    "value": "NOT THE FACTORY OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36636:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36636:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36636:47:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36617:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36519:171:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36802:55:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36824:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36832:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36820:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36820:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "36836:13:8",
                                    "type": "",
                                    "value": "LOT IN PAST"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36813:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36813:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36813:37:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36794:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36696:161:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36969:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "36991:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36999:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36987:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36987:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37003:15:8",
                                    "type": "",
                                    "value": "NOT LOT OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36980:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36980:39:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36980:39:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "36961:6:8",
                            "type": ""
                          }
                        ],
                        "src": "36863:163:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37138:63:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37160:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37168:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37156:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37156:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37172:21:8",
                                    "type": "",
                                    "value": "INVALID FRAME PRICE"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37149:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37149:45:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37149:45:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37130:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37032:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37313:63:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37335:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37343:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37331:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37331:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37347:21:8",
                                    "type": "",
                                    "value": "LOT ALREADY SETTLED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37324:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37324:45:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37324:45:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37305:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37207:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37488:60:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37510:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37518:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37506:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37506:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37522:18:8",
                                    "type": "",
                                    "value": "PRICE IS TOO LOW"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37499:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37499:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37499:42:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37480:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37382:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37660:71:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37682:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37690:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37678:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37678:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37694:29:8",
                                    "type": "",
                                    "value": "THIS LOT IS IN A PAST FRAME"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37671:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37671:53:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37671:53:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37652:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37554:177:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37843:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "37865:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37873:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37861:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37861:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "37877:15:8",
                                    "type": "",
                                    "value": "ALREADY OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37854:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37854:39:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37854:39:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "37835:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37737:163:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38012:69:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38034:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38042:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38030:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38030:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38046:27:8",
                                    "type": "",
                                    "value": "APPROVED AMOUNT TOO SMALL"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38023:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38023:51:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38023:51:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38004:6:8",
                            "type": ""
                          }
                        ],
                        "src": "37906:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38193:60:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38215:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38223:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38211:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38211:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38227:18:8",
                                    "type": "",
                                    "value": "FRAME NOT CLOSED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38204:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38204:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38204:42:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38185:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38087:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38365:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38387:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38395:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38383:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38383:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38399:15:8",
                                    "type": "",
                                    "value": "FRAME IN PAST"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38376:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38376:39:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38376:39:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38357:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38259:163:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38534:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38556:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38564:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38552:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38552:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38568:11:8",
                                    "type": "",
                                    "value": "NO OWNERS"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38545:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38545:35:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38545:35:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38526:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38428:159:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38699:61:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38721:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38729:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38717:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38717:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38733:19:8",
                                    "type": "",
                                    "value": "LOT IN PAST FRAME"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38710:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38710:43:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38710:43:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38691:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38593:167:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38872:67:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "38894:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38902:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38890:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38890:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "38906:25:8",
                                    "type": "",
                                    "value": "FixedPoint: DIV_BY_ZERO"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38883:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38883:49:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38883:49:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "38864:6:8",
                            "type": ""
                          }
                        ],
                        "src": "38766:173:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38998:62:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39032:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "39034:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39034:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39034:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39021:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "39028:1:8",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "39018:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39018:12:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39011:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39011:20:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39008:2:8"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_SFrame_$769",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "38991:5:8",
                            "type": ""
                          }
                        ],
                        "src": "38945:115:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39117:62:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39151:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "39153:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39153:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39153:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39140:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "39147:1:8",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "39137:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39137:12:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39130:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39130:20:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39127:2:8"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_SLot_$826",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39110:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39066:113:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39228:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39285:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39294:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39297:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39287:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39287:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39287:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39251:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39276:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "39258:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39258:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39248:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39248:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39241:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39241:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39238:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39221:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39185:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39353:76:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39407:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39416:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39419:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39409:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39409:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39409:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39376:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39398:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "39383:14:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39383:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39373:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39373:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39366:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39366:40:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39363:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39346:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39313:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39478:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39535:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39544:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39547:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39537:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39537:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39537:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39501:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39526:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint112",
                                          "nodeType": "YulIdentifier",
                                          "src": "39508:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39508:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39498:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39498:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39491:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39491:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39488:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint112",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39471:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39435:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39606:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39663:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39672:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39675:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39665:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39665:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39665:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39629:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39654:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "39636:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39636:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39626:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39626:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39619:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39619:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39616:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39599:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39563:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39733:78:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "39789:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39798:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "39801:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "39791:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "39791:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "39791:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "39756:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "39780:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint32",
                                          "nodeType": "YulIdentifier",
                                          "src": "39763:16:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "39763:23:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "39753:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39753:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "39746:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39746:42:8"
                              },
                              "nodeType": "YulIf",
                              "src": "39743:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "39726:5:8",
                            "type": ""
                          }
                        ],
                        "src": "39691:120:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint112_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint112(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xa0)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Market.Lot[] -> struct Market.Lot[]\n    function abi_encode_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MarketFactory_$2816_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SFrame_$769_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_SLot_$826_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_SLot_$826_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Market.Lot -> struct Market.Lot\n    function abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // frameKey\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lotKey\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lotOwner\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // acquisitionPrice\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // state\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_enum$_SLot_$826_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    // struct Market.Lot -> struct Market.Lot\n    function abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // frameKey\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lotKey\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lotOwner\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // acquisitionPrice\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // state\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_enum$_SLot_$826_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    // struct Market.Lot -> struct Market.Lot\n    function abi_encode_t_struct$_Lot_$838_storage_to_t_struct$_Lot_$838_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n        let slotValue := 0\n\n        {\n            // frameKey\n            slotValue := sload(add(value, 0x00))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lotKey\n            slotValue := sload(add(value, 0x01))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lotOwner\n            slotValue := sload(add(value, 0x02))\n            let memberValue0 := extract_from_storage_value_offset_0t_address(slotValue)\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // acquisitionPrice\n            slotValue := sload(add(value, 0x03))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // state\n            slotValue := sload(add(value, 0x04))\n            let memberValue0 := extract_from_storage_value_offset_0t_enum$_SLot_$826(slotValue)\n            abi_encode_t_enum$_SLot_$826_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Pair_$568__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_MarketFactory_$2816__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Lot_$838_memory_ptr__to_t_struct$_Lot_$838_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_Lot_$838_memory_ptr_to_t_struct$_Lot_$838_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_struct$_Lot_$838_storage__to_t_uint256_t_struct$_Lot_$838_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_struct$_Lot_$838_storage_to_t_struct$_Lot_$838_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_SFrame_$769__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_enum$_SFrame_$769_to_t_uint8_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint224(x, y) -> r {\n        x := cleanup_t_uint224(x)\n        y := cleanup_t_uint224(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_from_storage_t_address(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_from_storage_t_enum$_SLot_$826(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function cleanup_from_storage_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_SFrame_$769(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SFrame_$769(value)\n    }\n\n    function cleanup_t_enum$_SLot_$826(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SLot_$826(value)\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2816_to_t_address(value) -> converted {\n        converted := convert_t_contract$_MarketFactory_$2816_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2816_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_SFrame_$769_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SFrame_$769(value)\n    }\n\n    function convert_t_enum$_SLot_$826_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SLot_$826(value)\n    }\n\n    function extract_from_storage_value_offset_0t_address(slot_value) -> value {\n        value := cleanup_from_storage_t_address(shift_right_0_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_0t_enum$_SLot_$826(slot_value) -> value {\n        value := cleanup_from_storage_t_enum$_SLot_$826(shift_right_0_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_0t_uint256(slot_value) -> value {\n        value := cleanup_from_storage_t_uint256(shift_right_0_unsigned(slot_value))\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME END TIME NOT REACHED\")\n\n    }\n\n    function store_literal_in_memory_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4(memPtr) {\n\n        mstore(add(memPtr, 0), \"NOT THE FACTORY OWNER\")\n\n    }\n\n    function store_literal_in_memory_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a(memPtr) {\n\n        mstore(add(memPtr, 0), \"LOT IN PAST\")\n\n    }\n\n    function store_literal_in_memory_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14(memPtr) {\n\n        mstore(add(memPtr, 0), \"NOT LOT OWNER\")\n\n    }\n\n    function store_literal_in_memory_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID FRAME PRICE\")\n\n    }\n\n    function store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494(memPtr) {\n\n        mstore(add(memPtr, 0), \"LOT ALREADY SETTLED\")\n\n    }\n\n    function store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"PRICE IS TOO LOW\")\n\n    }\n\n    function store_literal_in_memory_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"THIS LOT IS IN A PAST FRAME\")\n\n    }\n\n    function store_literal_in_memory_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45(memPtr) {\n\n        mstore(add(memPtr, 0), \"ALREADY OWNER\")\n\n    }\n\n    function store_literal_in_memory_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13(memPtr) {\n\n        mstore(add(memPtr, 0), \"APPROVED AMOUNT TOO SMALL\")\n\n    }\n\n    function store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME NOT CLOSED\")\n\n    }\n\n    function store_literal_in_memory_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME IN PAST\")\n\n    }\n\n    function store_literal_in_memory_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d(memPtr) {\n\n        mstore(add(memPtr, 0), \"NO OWNERS\")\n\n    }\n\n    function store_literal_in_memory_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01(memPtr) {\n\n        mstore(add(memPtr, 0), \"LOT IN PAST FRAME\")\n\n    }\n\n    function store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12(memPtr) {\n\n        mstore(add(memPtr, 0), \"FixedPoint: DIV_BY_ZERO\")\n\n    }\n\n    function validator_assert_t_enum$_SFrame_$769(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_SLot_$826(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint112(value) {\n        if iszero(eq(value, cleanup_t_uint112(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F7CB60B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6B9 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x611 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x572 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4EA JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x462 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3B4 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x32A JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x46E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x495B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x1D9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B6 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH2 0x20E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x252F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x25E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x25FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x619 PUSH2 0x2B7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x4760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x4745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x2BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x685 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x472A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A3 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 GT PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x81D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x879 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x8C5 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8B8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8D1 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7BF JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F0 DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FD DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x935 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x943 DUP5 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x955 JUMPI PUSH1 0x0 SWAP5 POP PUSH2 0x964 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9E0 DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9EE DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F9 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x487B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB00 DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC9C SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDF3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 PUSH2 0xE2F DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1122 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11C9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1228 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1290 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x12E9 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138F SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14B5 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14C6 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST DUP3 PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1521 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1565 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x159E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x158B PUSH2 0x3E2D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1583 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15A9 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x191A JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15EE JUMPI PUSH1 0x32 DUP2 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x15E7 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1644 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16A0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1907 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1905 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1730 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1813 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18F2 JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18D9 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 EQ ISZERO PUSH2 0x18F1 JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x18FD SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16A9 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1912 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C53 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1938 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C40 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C3E JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B85 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2B JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1BFD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C13 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x1C2A JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1C36 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19E3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4B SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1922 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C66 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3B SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9F SWAP1 PUSH2 0x479B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F86 SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA4 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x209E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x208A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x20BD JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x20CE SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x20D8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2100 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x210A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2301 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2213 JUMPI PUSH2 0x2151 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x21C5 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x223E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP PUSH2 0x22B2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2312 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x2426 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x2362 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x2425 JUMP JUMPDEST PUSH2 0x23DB PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x24CE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x253B DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2546 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257F SWAP1 PUSH2 0x485B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2593 DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A1 DUP4 DUP7 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x25D9 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25EE DUP2 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x3871 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2619 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2657 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x266B DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2679 DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272A SWAP1 PUSH2 0x47DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x273C TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x277E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2775 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x278A DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27C2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29CF JUMPI DUP1 DUP3 PUSH2 0x27D8 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2835 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2861 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2885 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0x28C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28BD SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2912 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2930 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x295E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2982 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x298F SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x29B0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2ADB JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2ADA JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x2A22 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3F SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A91 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2A9E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2ABF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B12 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x2C2A TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x2C34 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x2C3E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2C52 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C5C SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C69 DUP7 PUSH2 0x3CF9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C88 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x2C92 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2CA8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CB2 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x2CC3 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CCD SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2CDB SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CF3 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D2F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D8B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2D99 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x2DA2 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DDB SWAP1 PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E5F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA3 DUP4 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EDF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F4F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2F5D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2FFD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3010 PUSH2 0x3D35 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x306C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3090 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3110 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x315D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3195 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x3254 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x31BC SWAP2 SWAP1 PUSH2 0x4C62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x31CF DUP5 DUP7 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP8 PUSH2 0x3206 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3219 DUP6 DUP6 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3245 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x3250 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x329C JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x32DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D3 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x334B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3342 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP4 PUSH2 0x335A SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST GT ISZERO PUSH2 0x339B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3392 SWAP1 PUSH2 0x477B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x343A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3480 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x348A SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3511 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x351B SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3547 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x3551 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3576 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3580 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3619 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3647 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x366B SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x374A SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3768 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37BA SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP6 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x3862 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x38AA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3906 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x3946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393D SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3967 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3A12 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x3A53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4A SWAP1 PUSH2 0x481B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B04 SWAP1 PUSH2 0x48FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BCA SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C1C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C91 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3CED SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D04 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3D14 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3D30 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3D23 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3D2D SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3D48 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D55 PUSH2 0x3EAA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3DA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9F SWAP1 PUSH2 0x493B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3E04 SWAP2 SWAP1 PUSH2 0x4B72 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3EA4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EEA DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EFF DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F14 DUP2 PUSH2 0x5225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F29 DUP2 PUSH2 0x523C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F3E DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F53 DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F68 DUP2 PUSH2 0x526A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F8E DUP5 DUP3 DUP6 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB7 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3FF2 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x400E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x401C DUP5 DUP3 DUP6 ADD PUSH2 0x3F05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x403A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4048 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4059 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x406A DUP7 DUP3 DUP8 ADD PUSH2 0x3F59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4094 DUP5 DUP3 DUP6 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40BD DUP5 DUP3 DUP6 ADD PUSH2 0x3F44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40E7 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40F8 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4125 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4136 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4147 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415D DUP4 DUP4 PUSH2 0x44B3 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4175 DUP4 DUP4 PUSH2 0x4624 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x418A DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4199 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41AA DUP3 PUSH2 0x4AB9 JUMP JUMPDEST PUSH2 0x41B4 DUP2 DUP6 PUSH2 0x4AE9 JUMP JUMPDEST SWAP4 POP PUSH2 0x41BF DUP4 PUSH2 0x4A99 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41F0 JUMPI DUP2 MLOAD PUSH2 0x41D7 DUP9 DUP3 PUSH2 0x4151 JUMP JUMPDEST SWAP8 POP PUSH2 0x41E2 DUP4 PUSH2 0x4ACF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x41C3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4208 DUP3 PUSH2 0x4AC4 JUMP JUMPDEST PUSH2 0x4212 DUP2 DUP6 PUSH2 0x4AFA JUMP JUMPDEST SWAP4 POP PUSH2 0x421D DUP4 PUSH2 0x4AA9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x424E JUMPI DUP2 MLOAD PUSH2 0x4235 DUP9 DUP3 PUSH2 0x4169 JUMP JUMPDEST SWAP8 POP PUSH2 0x4240 DUP4 PUSH2 0x4ADC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4221 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4264 DUP2 PUSH2 0x4D8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4273 DUP2 PUSH2 0x4DB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4282 DUP2 PUSH2 0x4DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4291 DUP2 PUSH2 0x4DF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42A0 DUP2 PUSH2 0x4E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B3 PUSH1 0x1A DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42BE DUP3 PUSH2 0x4F7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D6 PUSH1 0x15 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42E1 DUP3 PUSH2 0x4FA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F9 PUSH1 0xB DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4304 DUP3 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431C PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4327 DUP3 PUSH2 0x4FFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433F PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x434A DUP3 PUSH2 0x5023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4362 PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x436D DUP3 PUSH2 0x504C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4385 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4390 DUP3 PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A8 PUSH1 0x1B DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43B3 DUP3 PUSH2 0x509E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43CB PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43D6 DUP3 PUSH2 0x50C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43EE PUSH1 0x19 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43F9 DUP3 PUSH2 0x50F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4411 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x441C DUP3 PUSH2 0x5119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4434 PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x443F DUP3 PUSH2 0x5142 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4457 PUSH1 0x9 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4462 DUP3 PUSH2 0x516B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447A PUSH1 0x11 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4485 DUP3 PUSH2 0x5194 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x449D PUSH1 0x17 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x44A8 DUP3 PUSH2 0x51BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x44C9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x44DC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x44EF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4502 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4515 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4531 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4544 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4557 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x456A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x457D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4598 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45A5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45B6 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45C3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45D4 DUP2 PUSH2 0x4E1D JUMP JUMPDEST PUSH2 0x45E1 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45F2 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45FF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4610 DUP2 PUSH2 0x4E37 JUMP JUMPDEST PUSH2 0x461D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x462D DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x463C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4657 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4672 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x467F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x469B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4700 DUP2 DUP5 PUSH2 0x419F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4722 DUP2 DUP5 PUSH2 0x41FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x473F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x425B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x426A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4794 DUP2 PUSH2 0x42A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47B4 DUP2 PUSH2 0x42C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47D4 DUP2 PUSH2 0x42EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47F4 DUP2 PUSH2 0x430F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4814 DUP2 PUSH2 0x4332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4834 DUP2 PUSH2 0x4355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4854 DUP2 PUSH2 0x4378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4874 DUP2 PUSH2 0x439B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4894 DUP2 PUSH2 0x43BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48B4 DUP2 PUSH2 0x43E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48D4 DUP2 PUSH2 0x4404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F4 DUP2 PUSH2 0x4427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4914 DUP2 PUSH2 0x444A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4934 DUP2 PUSH2 0x446D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4954 DUP2 PUSH2 0x4490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4970 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x451B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x498B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49A6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4583 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49CF PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49DC PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49E9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49F6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A03 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A10 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x4A31 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A3E PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A4B PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A58 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A65 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A72 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A7F PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A8C PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4288 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B27 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B32 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4B67 JUMPI PUSH2 0x4B66 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7D DUP3 PUSH2 0x4D4B JUMP JUMPDEST SWAP2 POP PUSH2 0x4B88 DUP4 PUSH2 0x4D4B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B98 JUMPI PUSH2 0x4B97 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAE DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB9 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4BC9 JUMPI PUSH2 0x4BC8 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BDF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BEA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4C23 JUMPI PUSH2 0x4C22 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C44 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C57 JUMPI PUSH2 0x4C56 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6D DUP3 PUSH2 0x4D7D JUMP JUMPDEST SWAP2 POP PUSH2 0x4C78 DUP4 PUSH2 0x4D7D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C8B JUMPI PUSH2 0x4C8A PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD8 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4CF9 DUP3 PUSH2 0x51E6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4D0C DUP3 PUSH2 0x51FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D98 DUP3 PUSH2 0x4D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DAA DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DBC DUP3 PUSH2 0x4DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DCE DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE0 DUP3 PUSH2 0x4DE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF2 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E04 DUP3 PUSH2 0x4CEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E16 DUP3 PUSH2 0x4CFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E30 PUSH2 0x4E2B DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4C96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4A PUSH2 0x4E45 DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E64 PUSH2 0x4E5F DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E76 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4EA9 JUMPI PUSH2 0x4EA8 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ECA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4EDA JUMPI PUSH2 0x4ED9 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F542054484520464143544F5259204F574E45520000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552530000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x51F7 JUMPI PUSH2 0x51F6 PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x520B JUMPI PUSH2 0x520A PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5217 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x5222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x522E DUP2 PUSH2 0x4CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x5239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5245 DUP2 PUSH2 0x4D11 JUMP JUMPDEST DUP2 EQ PUSH2 0x5250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x525C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP2 EQ PUSH2 0x5267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5273 DUP2 PUSH2 0x4D7D JUMP JUMPDEST DUP2 EQ PUSH2 0x527E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC5 SWAP10 OR BALANCE DUP7 SWAP6 0xB6 0xB5 AND 0x26 0xCD SLT 0xB8 0xC9 JUMP DUP8 PUSH21 0x8EF885A16BA97F3A37141F1CEE5764736F6C634300 ADDMOD DIV STOP CALLER ",
              "sourceMap": "586:23310:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10732:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8234:421;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7294:555;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14819:2275;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1513:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11856:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1144:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5478:445;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1440:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;863:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4329:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2323:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9066:1513;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11246:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23764:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;805:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1198:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12549:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10986:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4704:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18842:1955;;;:::i;:::-;;2280:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6269:601;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23501:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17440:1335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1270:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12326:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1369:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;668:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;942:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2374:24;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10732:117::-;10795:4;10818:10;:16;10829:4;10818:16;;;;;;;;;;;;;;;:23;;;;10811:30;;10732:117;;;:::o;8234:421::-;8316:13;8341:24;8379:11;8368:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8341:50;;8406:6;8402:218;8423:11;8418:1;:16;8402:218;;8456:13;8491:1;8484:6;;:8;;;;:::i;:::-;8472:10;:21;;;;:::i;:::-;8456:37;;8537:11;8511:37;;;;;;;;;;;;;;;;:6;:16;8518:8;8511:16;;;;;;;;;;;:22;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;8508:101;;8585:8;8569:10;8580:1;8569:13;;;;;;;;;;;;;;;;;;;;;:24;;;;;8508:101;8402:218;8436:3;;;;;:::i;:::-;;;;8402:218;;;;8637:10;8630:17;;;8234:421;;;;:::o;7294:555::-;7399:9;7424:13;7440:28;7458:9;7440:17;:28::i;:::-;7424:44;;7581:11;7595:20;7605:9;7595;:20::i;:::-;7581:34;;7626:9;7638:64;7645:8;7655:6;:16;7662:8;7655:16;;;;;;;;;;;:21;;:29;7677:6;7655:29;;;;;;;;;;;:46;;;7638:6;:64::i;:::-;7626:76;;7713:9;7725:26;7732:8;7742;7725:6;:26::i;:::-;7713:38;;7773:4;7765;:12;7762:57;;7786:1;7779:8;;7762:57;;;7815:4;7810;:9;;;;:::i;:::-;7803:16;;7762:57;7830:11;;;;7294:555;;;;;:::o;14819:2275::-;14901:8;3343;3380:6;3366:9;;3354:8;:22;;;;:::i;:::-;:33;;;;:::i;:::-;3343:44;;3413:6;;3406:3;:13;;3398:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;14964:13:::1;14981:27;14998:9;14981:16;:27::i;:::-;14964:44;;15045:11;15059:35;15074:8;15084:9;15059:14;:35::i;:::-;15045:49;;15125:34;15143:15;15125:17;:34::i;:::-;15113:8;:46;;15105:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;15208:6;:16;15215:8;15208:16;;;;;;;;;;;:21;;:29;15230:6;15208:29;;;;;;;;;;;:38;;;;;;;;;;;;15194:52;;:10;:52;;;;15186:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;15277:8;15288:26;15295:8;15305;15288:6;:26::i;:::-;15277:37;;15522:3;15473:6;:16;15480:8;15473:16;;;;;;;;;;;:21;;:29;15495:6;15473:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;15416:15;;;;;;;;;;;:25;;;15442:10;15462:4;15416:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:110;;15408:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;15621:15;;;;;;;;;;;:28;;;15650:10;15670:4;15727:3;15678:6;:16;15685:8;15678:16;;;;;;;;;;;:21;;:29;15700:6;15678:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;15621:111;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15804:3;15774:6;:16;15781:8;15774:16;;;;;;;;;;;:27;;;:33;;;;:::i;:::-;15743:6;:16;15750:8;15743:16;;;;;;;;;;;:27;;:65;;;;15919:11;15880:50;;;;;;;;;;;;;;;;:6;:16;15887:8;15880:16;;;;;;;;;;;:21;;:29;15902:6;15880:29;;;;;;;;;;;:35;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;15876:541;;;15947:13;15963:64;15970:8;15980:6;:16;15987:8;15980:16;;;;;;;;;;;:21;;:29;16002:6;15980:29;;;;;;;;;;;:46;;;15963:6;:64::i;:::-;15947:80;;16072:15;;;;;;;;;;;:24;;;16097:6;:16;16104:8;16097:16;;;;;;;;;;;:21;;:29;16119:6;16097:29;;;;;;;;;;;:38;;;;;;;;;;;;16149:6;:16;16156:8;16149:16;;;;;;;;;;;:21;;:29;16171:6;16149:29;;;;;;;;;;;:46;;;16138:8;:57;;;;:::i;:::-;16072:125;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16306:8;16276:6;:16;16283:8;16276:16;;;;;;;;;;;:27;;;:38;;;;:::i;:::-;16246:6;:16;16253:8;16246:16;;;;;;;;;;;:27;;:68;;;;15876:541;;;;16394:11;16356:6;:16;16363:8;16356:16;;;;;;;;;;;:21;;:29;16378:6;16356:29;;;;;;;;;;;:35;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15876:541;16499:10;16458:6;:16;16465:8;16458:16;;;;;;;;;;;:21;;:29;16480:6;16458:29;;;;;;;;;;;:38;;;:51;;;;;;;;;;;;;;;;;;16569:8;16520:6;:16;16527:8;16520:16;;;;;;;;;;;:21;;:29;16542:6;16520:29;;;;;;;;;;;:46;;:57;;;;16588:10;:22;16599:10;16588:22;;;;;;;;;;;;;;;16616:8;16588:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16638:19;:17;:19::i;:::-;16675:345;16687:8;16724:6;:16;16731:8;16724:16;;;;;;;;;;;:37;;;16789:6;:16;16796:8;16789:16;;;;;;;;;;;:35;;;16852:6;:16;16859:8;16852:16;;;;;;;;;;;:43;;;16923:6;:16;16930:8;16923:16;;;;;;;;;;;:41;;;16992:6;:16;16999:8;16992:16;;;;;;;;;;;:27;;;16675:345;;;;;;;;;;;:::i;:::-;;;;;;;;17036:50;17046:8;17056:6;:16;17063:8;17056:16;;;;;;;;;;;:21;;:29;17078:6;17056:29;;;;;;;;;;;17036:50;;;;;;;:::i;:::-;;;;;;;;3451:1;;;14819:2275:::0;;;;;:::o;1513:18::-;;;;:::o;11856:146::-;11923:4;11963:6;:16;11970:8;11963:16;;;;;;;;;;;:24;;11988:5;11963:31;;;;;;;;;;;;;;;;;;;;;;;;11956:38;;11856:146;;;;:::o;1144:21::-;;;;:::o;5478:445::-;5556:13;5533:8;3778:1;3731:6;:16;3738:8;3731:16;;;;;;;;;;;:43;;;:48;;:98;;;;3828:1;3783:6;:16;3790:8;3783:16;;;;;;;;;;;:41;;;:46;;3731:98;3727:216;;;3902:29;;;;;;;;;;:::i;:::-;;;;;;;;3727:216;4004:6;:16;4011:8;4004:16;;;;;;;;;;;:41;;;3957:6;:16;3964:8;3957:16;;;;;;;;;;;:43;;;:88;3953:206;;;4118:29;;;;;;;;;;:::i;:::-;;;;;;;;3953:206;5659:13:::1;5713:6;:16;5720:8;5713:16;;;;;;;;;;;:37;;;5675:6;:16;5682:8;5675:16;;;;;;;;;;;:35;;;:75;;;;:::i;:::-;5659:91;;5778:133;;;;;;;;5900:8;5852:6;:16;5859:8;5852:16;;;;;;;;;;;:43;;;5808:6;:16;5815:8;5808:16;;;;;;;;;;;:41;;;:87;;;;:::i;:::-;5807:102;;;;:::i;:::-;5778:133;;;;::::0;:136:::1;;;5773:142;;5762:153;;4169:1;5478:445:::0;;;;:::o;1440:26::-;;;;;;;;;;;;;:::o;1075:18::-;;;;:::o;863:29::-;;;;:::o;4329:212::-;4393:4;4426:13;;4413:9;:26;4409:52;;4448:13;;4441:20;;;;4409:52;4525:6;;4506:13;;4493:9;:27;;;;:::i;:::-;4492:40;;;;:::i;:::-;4479:9;:54;;;;:::i;:::-;4472:61;;4329:212;;;;:::o;2323:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9066:1513::-;9122:21;9155:17;9175:34;9193:15;9175:17;:34::i;:::-;9155:54;;9241:4;9231:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9220:26;;9257:14;;:::i;:::-;9282:12;9309:13;9339:6;9348:1;9339:10;;9335:639;9356:3;9351:1;:8;9335:639;;9392:2;9387:1;:7;9383:110;;9433:2;9431:1;:4;;;;:::i;:::-;9423:6;;:13;;;;:::i;:::-;9408:12;:28;;;;:::i;:::-;9396:41;;9383:110;;;9491:1;9484:6;;:8;;;;:::i;:::-;9469:12;:23;;;;:::i;:::-;9457:36;;9383:110;9540:13;9514:39;;;;;;;;;;;;;;;;:6;:16;9521:8;9514:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;9510:453;;;9579:6;9574:374;9591:6;:16;9598:8;9591:16;;;;;;;;;;;:24;;:31;;;;9589:1;:33;9574:374;;;9658:6;:16;9665:8;9658:16;;;;;;;;;;;:21;;:50;9680:6;:16;9687:8;9680:16;;;;;;;;;;;:24;;9705:1;9680:27;;;;;;;;;;;;;;;;;;;;;;;;9658:50;;;;;;;;;;;9652:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9750:4;9734:20;;:3;:12;;;:20;;;9731:197;;;9802:3;9783:8;9792:7;9783:17;;;;;;;;;;;;;;;;;;;;;:22;;;;9832:10;;;;;:::i;:::-;;;;9883:4;9872:7;:15;9869:35;;;9889:15;;;;;;;;9869:35;9731:197;9624:3;;;;;:::i;:::-;;;;9574:374;;;;9510:453;9361:3;;;;;:::i;:::-;;;;9335:639;;;;9990:6;9999:1;9990:10;;9986:560;10007:2;10002:1;:7;9986:560;;10065:1;10058:6;;:8;;;;:::i;:::-;10043:12;:23;;;;:::i;:::-;10031:36;;10112:13;10086:39;;;;;;;;;;;;;;;;:6;:16;10093:8;10086:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;10082:453;;;10151:6;10146:374;10163:6;:16;10170:8;10163:16;;;;;;;;;;;:24;;:31;;;;10161:1;:33;10146:374;;;10230:6;:16;10237:8;10230:16;;;;;;;;;;;:21;;:50;10252:6;:16;10259:8;10252:16;;;;;;;;;;;:24;;10277:1;10252:27;;;;;;;;;;;;;;;;;;;;;;;;10230:50;;;;;;;;;;;10224:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10322:4;10306:20;;:3;:12;;;:20;;;10303:197;;;10374:3;10355:8;10364:7;10355:17;;;;;;;;;;;;;;;;;;;;;:22;;;;10404:10;;;;;:::i;:::-;;;;10455:4;10444:7;:15;10441:35;;10461:15;;;;;;;;10441:35;10303:197;10196:3;;;;;:::i;:::-;;;;10146:374;;;;10082:453;10011:3;;;;;:::i;:::-;;;;9986:560;;;;10556:15;;;;9066:1513;;;;:::o;11246:148::-;11311:10;;:::i;:::-;11357:6;:16;11364:8;11357:16;;;;;;;;;;;:21;;:29;11379:6;11357:29;;;;;;;;;;;11350:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11246:148;;;;:::o;23764:125::-;3527:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3513:29;;:10;:29;;;3505:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;23832:15:::1;;;;;;;;;;;:24;;;23857:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23874:6;23832:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23764:125:::0;:::o;805:25::-;;;;:::o;1198:21::-;;;;:::o;12549:101::-;12602:4;12625:10;:17;;;;12618:24;;12549:101;:::o;10986:115::-;11043:13;11077:10;:16;11088:4;11077:16;;;;;;;;;;;;;;;11070:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10986:115;;;:::o;4704:150::-;4756:4;4785:1;4776:5;:10;4772:29;;4795:6;;4788:13;;;;4772:29;4839:6;;4828;;4819:5;:16;;;;:::i;:::-;:27;;;;:::i;:::-;4812:34;;4704:150;;;;:::o;18842:1955::-;18889:13;18905:34;18923:15;18905:17;:34::i;:::-;18889:50;;18950:8;19069:10;;19057:6;;19045:8;:19;;;;:::i;:::-;19044:36;;;;:::i;:::-;19025:15;:56;19021:1406;;;19101:14;;;;;;;;;;;19098:778;;;19228:68;19283:11;;;;;;;;;;;19228:46;:68::i;:::-;19136:160;;;;;19137:6;:16;19144:8;19137:16;;;;;;;;;;;:43;;;19187:6;:16;19194:8;19187:16;;;;;;;;;;;:37;;;19136:160;;;;;;;;;;;;;;;;19403:68;19458:11;;;;;;;;;;;19403:46;:68::i;:::-;19315:156;;;;;19316:6;:16;19323:8;19316:16;;;;;;;;;;;:41;;;19364:6;:16;19371:8;19364:16;;;;;;;;;;;:35;;;19315:156;;;;;;;;;;;;;;;;19098:778;;;19617:68;19672:11;;;;;;;;;;;19617:46;:68::i;:::-;19525:160;;;;;19531:6;:16;19538:8;19531:16;;;;;;;;;;;:43;;;19576:6;:16;19583:8;19576:16;;;;;;;;;;;:37;;;19525:160;;;;;;;;;;;;;;;;19792:68;19847:11;;;;;;;;;;;19792:46;:68::i;:::-;19704:156;;;;;19710:6;:16;19717:8;19710:16;;;;;;;;;;;:41;;;19753:6;:16;19760:8;19753:16;;;;;;;;;;;:35;;;19704:156;;;;;;;;;;;;;;;;19098:778;19021:1406;;;19963:10;;19951:6;;19939:8;:19;;;;:::i;:::-;19938:36;;;;:::i;:::-;19918:15;:57;19914:513;;19995:14;;;;;;;;;;;19992:420;;;20118:68;20173:11;;;;;;;;;;;20118:46;:68::i;:::-;20030:156;;;;;20031:6;:16;20038:8;20031:16;;;;;;;;;;;:41;;;20079:6;:16;20086:8;20079:16;;;;;;;;;;;:35;;;20030:156;;;;;;;;;;;;;;;;19992:420;;;20328:68;20383:11;;;;;;;;;;;20328:46;:68::i;:::-;20240:156;;;;;20246:6;:16;20253:8;20246:16;;;;;;;;;;;:41;;;20289:6;:16;20296:8;20289:16;;;;;;;;;;;:35;;;20240:156;;;;;;;;;;;;;;;;19992:420;19914:513;19021:1406;20444:345;20456:8;20493:6;:16;20500:8;20493:16;;;;;;;;;;;:37;;;20558:6;:16;20565:8;20558:16;;;;;;;;;;;:35;;;20621:6;:16;20628:8;20621:16;;;;;;;;;;;:43;;;20692:6;:16;20699:8;20692:16;;;;;;;;;;;:41;;;20761:6;:16;20768:8;20761:16;;;;;;;;;;;:27;;;20444:345;;;;;;;;;;;:::i;:::-;;;;;;;;18842:1955;;:::o;2280:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6269:601::-;6365:14;6396:13;6412:28;6430:9;6412:17;:28::i;:::-;6396:44;;6593:34;6611:15;6593:17;:34::i;:::-;6581:8;:46;;6573:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;6678:11;6692:20;6702:9;6692;:20::i;:::-;6678:34;;6723:8;6734:26;6741:8;6751;6734:6;:26::i;:::-;6723:37;;6832:3;6783:6;:16;6790:8;6783:16;;;;;;;;;;;:21;;:29;6805:6;6783:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;6771:64;;6846:16;;;6269:601;;;;;:::o;23501:112::-;23555:20;23566:8;23555:10;:20::i;:::-;23586:19;23596:8;23586:9;:19::i;:::-;23501:112;:::o;17440:1335::-;17530:8;3343;3380:6;3366:9;;3354:8;:22;;;;:::i;:::-;:33;;;;:::i;:::-;3343:44;;3413:6;;3406:3;:13;;3398:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;17551:13:::1;17567:27;17584:9;17567:16;:27::i;:::-;17551:43;;17606:11;17620:35;17635:8;17645:9;17620:14;:35::i;:::-;17606:49;;17717:10;17675:52;;:6;:16;17682:8;17675:16;;;;;;;;;;;:21;;:29;17697:6;17675:29;;;;;;;;;;;:38;;;;;;;;;;;;:52;;;17667:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;17776:34;17794:15;17776:17;:34::i;:::-;17764:8;:46;;17756:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;17845:11;17859:26;17866:8;17876;17859:6;:26::i;:::-;17845:40;;17896:11;17910:64;17917:8;17927:6;:16;17934:8;17927:16;;;;;;;;;;;:21;;:29;17949:6;17927:29;;;;;;;;;;;:46;;;17910:6;:64::i;:::-;17896:78;;18000:6;17991;:15;17987:615;;;18097:6;18088;:15;;;;:::i;:::-;18031;;;;;;;;;;;:25;;;18057:10;18077:4;18031:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;18023:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;18217:15;;;;;;;;;;;:28;;;18246:10;18266:4;18283:6;18274;:15;;;;:::i;:::-;18217:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18375:6;18367;:14;;;;:::i;:::-;18336:6;:16;18343:8;18336:16;;;;;;;;;;;:27;;;:46;;;;:::i;:::-;18306:6;:16;18313:8;18306:16;;;;;;;;;;;:27;;:76;;;;17987:615;;;18422:6;18413;:15;18409:193;;;18445:15;;;;;;;;;;;:24;;;18470:10;18491:6;18482;:15;;;;:::i;:::-;18445:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18583:6;18574;:15;;;;:::i;:::-;18543:6;:16;18550:8;18543:16;;;;;;;;;;;:27;;;:47;;;;:::i;:::-;18513:6;:16;18520:8;18513:16;;;;;;;;;;;:27;;:77;;;;18409:193;17987:615;18661:8;18612:6;:16;18619:8;18612:16;;;;;;;;;;;:21;;:29;18634:6;18612:29;;;;;;;;;;;:46;;:57;;;;18682:19;:17;:19::i;:::-;18717:50;18727:8;18737:6;:16;18744:8;18737:16;;;;;;;;;;;:21;;:29;18759:6;18737:29;;;;;;;;;;;18717:50;;;;;;;:::i;:::-;;;;;;;;3451:1;;;;17440:1335:::0;;;;;:::o;1270:28::-;;;;;;;;;;;;;:::o;1006:33::-;;;;;;;;;;;;;:::o;12326:146::-;12387:4;12436:6;:16;12443:8;12436:16;;;;;;;;;;;:27;;;12429:34;;12326:146;;;:::o;1369:29::-;;;;;;;;;;;;;:::o;668:18::-;;;;:::o;942:22::-;;;;:::o;13930:593::-;14007:8;14041:11;14106:15;14094:6;;14056:34;14074:15;14056:17;:34::i;:::-;:45;;;;:::i;:::-;14055:67;;;;:::i;:::-;14041:81;;14134:12;14168:6;;14158;14149;;:15;;;;:::i;:::-;:26;;;;:::i;:::-;14134:41;;14248:20;14271:23;14285:8;14271:13;:23::i;:::-;14248:46;;14351:15;14342:6;14330:9;;14311:16;:28;;;;:::i;:::-;:37;;;;:::i;:::-;:55;;;;:::i;:::-;14305:61;;14377:9;14420:6;14408:9;;14389:16;:28;;;;:::i;:::-;:37;;;;:::i;:::-;14377:49;;14461:6;;14451:7;14444:4;:14;;;;:::i;:::-;:23;;;;:::i;:::-;14437:30;;14490:4;14484:3;:10;;;;:::i;:::-;14478:16;;14505:10;;;;13930:593;;;;:::o;12824:537::-;12884:4;12945:13;12961:28;12979:9;12961:17;:28::i;:::-;12945:44;;13063:11;13037:37;;;;;;;;;;;;;;;;:6;:16;13044:8;13037:16;;;;;;;;;;;:22;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;13033:58;;13083:8;13076:15;;;;;13033:58;13122:34;13140:15;13122:17;:34::i;:::-;13110:8;:46;;13102:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;13234:8;13206:6;:16;13213:8;13206:16;;;;;;;;;;;:25;;:36;;;;13278:13;13253:6;:16;13260:8;13253:16;;;;;;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13302:10;13318:8;13302:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13345:8;13338:15;;;12824:537;;;;:::o;13526:396::-;13598:4;13614:11;13628:20;13638:9;13628;:20::i;:::-;13614:34;;13702:9;13663:48;;;;;;;;;;;;;;;;:6;:16;13670:8;13663:16;;;;;;;;;;;:21;;:29;13685:6;13663:29;;;;;;;;;;;:35;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;13659:67;;13720:6;13713:13;;;;;13659:67;13778:8;13737:6;:16;13744:8;13737:16;;;;;;;;;;;:21;;:29;13759:6;13737:29;;;;;;;;;;;:38;;:49;;;;13836:6;13797;:16;13804:8;13797:16;;;;;;;;;;;:21;;:29;13819:6;13797:29;;;;;;;;;;;:36;;:45;;;;13853:6;:16;13860:8;13853:16;;;;;;;;;;;:24;;13883:6;13853:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13908:6;13901:13;;;13526:396;;;;;:::o;646:1040:5:-;730:21;753;776;826:23;:21;:23::i;:::-;809:40;;893:4;878:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;859:62;;965:4;950:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;931:62;;1105:16;1123;1141:25;1185:4;1170:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1104:100;;;;;;1240:14;1218:36;;:18;:36;;;1214:466;;1317:18;1355;1338:14;:35;;;;:::i;:::-;1317:56;;1532:11;1481:62;;1486:39;1506:8;1516;1486:19;:39::i;:::-;:42;;;1481:48;;:62;;;;:::i;:::-;1461:82;;;;;:::i;:::-;;;1658:11;1607:62;;1612:39;1632:8;1642;1612:19;:39::i;:::-;:42;;;1607:48;;:62;;;;:::i;:::-;1587:82;;;;;:::i;:::-;;;1214:466;;646:1040;;;;;;;;:::o;20877:1460:6:-;20936:8;3778:1;3731:6;:16;3738:8;3731:16;;;;;;;;;;;:43;;;:48;;:98;;;;3828:1;3783:6;:16;3790:8;3783:16;;;;;;;;;;;:41;;;:46;;3731:98;3727:216;;;3902:29;;;;;;;;;;:::i;:::-;;;;;;;;3727:216;4004:6;:16;4011:8;4004:16;;;;;;;;;;;:41;;;3957:6;:16;3964:8;3957:16;;;;;;;;;;;:43;;;:88;3953:206;;;4118:29;;;;;;;;;;:::i;:::-;;;;;;;;3953:206;20989:15:::1;20978:6;;20967:8;:17;;;;:::i;:::-;20966:38;;20957:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;21071:13;21046:6;:16;21053:8;21046:16;;;;;;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21175:13;21229:6;:16;21236:8;21229:16;;;;;;;;;;;:37;;;21191:6;:16;21198:8;21191:16;;;;;;;;;;;:35;;;:75;;;;:::i;:::-;21175:91;;21314:133;;;;;;;;21436:8;21388:6;:16;21395:8;21388:16;;;;;;;;;;;:43;;;21344:6;:16;21351:8;21344:16;;;;;;;;;;;:41;;;:87;;;;:::i;:::-;21343:102;;;;:::i;:::-;21314:133;;;;::::0;:136:::1;;;21309:142;;21277:6;:16;21284:8;21277:16;;;;;;;;;;;:29;;:174;;;;21530:20;21597:6;21584:9;;21553:6;:16;21560:8;21553:16;;;;;;;;;;;:27;;;:41;;;;:::i;:::-;:50;;;;:::i;:::-;21530:73;;21614:22;21685:6;21670:11;;21639:6;:16;21646:8;21639:16;;;;;;;;;;;:27;;;:43;;;;:::i;:::-;:52;;;;:::i;:::-;21614:77;;21780:17;21762:15;21732:6;:16;21739:8;21732:16;;;;;;;;;;;:27;;;:45;;;;:::i;:::-;:65;;;;:::i;:::-;21702:6;:16;21709:8;21702:16;;;;;;;;;;;:27;;:95;;;;21843:15;;;;;;;;;;;:24;;;21868:11;;;;;;;;;;;21881:15;21843:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21908:15;;;;;;;;;;;:24;;;21933:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21950:17;21908:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21984:345;21996:8;22033:6;:16;22040:8;22033:16;;;;;;;;;;;:37;;;22098:6;:16;22105:8;22098:16;;;;;;;;;;;:35;;;22161:6;:16;22168:8;22161:16;;;;;;;;;;;:43;;;22232:6;:16;22239:8;22232:16;;;;;;;;;;;:41;;;22301:6;:16;22308:8;22301:16;;;;;;;;;;;:27;;;21984:345;;;;;;;;;;;:::i;:::-;;;;;;;;4169:1;;;20877:1460:::0;;:::o;22500:880::-;22626:13;22600:39;;;;;;;;;;;;;;;;:6;:16;22607:8;22600:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;22592:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;22716:14;22734:49;22752:6;:16;22759:8;22752:16;;;;;;;;;;;:29;;;22734:9;:49::i;:::-;22716:68;;22892:12;22850:54;;;;;;;;;;;;;;;;:6;:16;22857:8;22850:16;;;;;;;;;;;:21;;:32;22872:9;22850:32;;;;;;;;;;;:38;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;22842:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;23035:42;22990:87;;:6;:16;22997:8;22990:16;;;;;;;;;;;:21;;:32;23012:9;22990:32;;;;;;;;;;;:41;;;;;;;;;;;;:87;;;;22982:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;23102:15;;;;;;;;;;;:24;;;23127:6;:16;23134:8;23127:16;;;;;;;;;;;:21;;:32;23149:9;23127:32;;;;;;;;;;;:41;;;;;;;;;;;;23170:6;:16;23177:8;23170:16;;;;;;;;;;;:27;;;23102:96;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23289:12;23248:6;:16;23255:8;23248:16;;;;;;;;;;;:21;;:32;23270:9;23248:32;;;;;;;;;;;:38;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23319;23329:8;23339:6;:16;23346:8;23339:16;;;;;;;;;;;:21;;:32;23361:9;23339:32;;;;;;;;;;;23319:53;;;;;;;:::i;:::-;;;;;;;;22500:880;;:::o;5080:228::-;5141:4;5178:34;5196:15;5178:17;:34::i;:::-;5166:8;:46;5162:60;;;5221:1;5214:8;;;;5162:60;5292:6;;5272:15;5260:8;:28;;;;:::i;:::-;5259:39;;;;:::i;:::-;5250:50;;5080:228;;;;:::o;422:121:5:-;478:6;528:7;510:15;:25;;;;:::i;:::-;496:40;;422:121;:::o;1517:243:1:-;1598:16;;:::i;:::-;1648:1;1634:11;:15;;;1626:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1694:59;;;;;;;;1741:11;1704:48;;407:3;1705:32;;1713:9;1705:18;;:32;;;;1704:48;;;;:::i;:::-;1694:59;;;;;1687:66;;1517:243;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:137::-;355:5;386:6;380:13;371:22;;402:30;426:5;402:30;:::i;:::-;361:77;;;;:::o;444:143::-;501:5;532:6;526:13;517:22;;548:33;575:5;548:33;:::i;:::-;507:80;;;;:::o;593:139::-;639:5;677:6;664:20;655:29;;693:33;720:5;693:33;:::i;:::-;645:87;;;;:::o;738:143::-;795:5;826:6;820:13;811:22;;842:33;869:5;842:33;:::i;:::-;801:80;;;;:::o;887:141::-;943:5;974:6;968:13;959:22;;990:32;1016:5;990:32;:::i;:::-;949:79;;;;:::o;1034:262::-;1093:6;1142:2;1130:9;1121:7;1117:23;1113:32;1110:2;;;1158:1;1155;1148:12;1110:2;1201:1;1226:53;1271:7;1262:6;1251:9;1247:22;1226:53;:::i;:::-;1216:63;;1172:117;1100:196;;;;:::o;1302:284::-;1372:6;1421:2;1409:9;1400:7;1396:23;1392:32;1389:2;;;1437:1;1434;1427:12;1389:2;1480:1;1505:64;1561:7;1552:6;1541:9;1537:22;1505:64;:::i;:::-;1495:74;;1451:128;1379:207;;;;:::o;1592:407::-;1660:6;1668;1717:2;1705:9;1696:7;1692:23;1688:32;1685:2;;;1733:1;1730;1723:12;1685:2;1776:1;1801:53;1846:7;1837:6;1826:9;1822:22;1801:53;:::i;:::-;1791:63;;1747:117;1903:2;1929:53;1974:7;1965:6;1954:9;1950:22;1929:53;:::i;:::-;1919:63;;1874:118;1675:324;;;;;:::o;2005:278::-;2072:6;2121:2;2109:9;2100:7;2096:23;2092:32;2089:2;;;2137:1;2134;2127:12;2089:2;2180:1;2205:61;2258:7;2249:6;2238:9;2234:22;2205:61;:::i;:::-;2195:71;;2151:125;2079:204;;;;:::o;2289:594::-;2376:6;2384;2392;2441:2;2429:9;2420:7;2416:23;2412:32;2409:2;;;2457:1;2454;2447:12;2409:2;2500:1;2525:64;2581:7;2572:6;2561:9;2557:22;2525:64;:::i;:::-;2515:74;;2471:128;2638:2;2664:64;2720:7;2711:6;2700:9;2696:22;2664:64;:::i;:::-;2654:74;;2609:129;2777:2;2803:63;2858:7;2849:6;2838:9;2834:22;2803:63;:::i;:::-;2793:73;;2748:128;2399:484;;;;;:::o;2889:262::-;2948:6;2997:2;2985:9;2976:7;2972:23;2968:32;2965:2;;;3013:1;3010;3003:12;2965:2;3056:1;3081:53;3126:7;3117:6;3106:9;3102:22;3081:53;:::i;:::-;3071:63;;3027:117;2955:196;;;;:::o;3157:284::-;3227:6;3276:2;3264:9;3255:7;3251:23;3247:32;3244:2;;;3292:1;3289;3282:12;3244:2;3335:1;3360:64;3416:7;3407:6;3396:9;3392:22;3360:64;:::i;:::-;3350:74;;3306:128;3234:207;;;;:::o;3447:407::-;3515:6;3523;3572:2;3560:9;3551:7;3547:23;3543:32;3540:2;;;3588:1;3585;3578:12;3540:2;3631:1;3656:53;3701:7;3692:6;3681:9;3677:22;3656:53;:::i;:::-;3646:63;;3602:117;3758:2;3784:53;3829:7;3820:6;3809:9;3805:22;3784:53;:::i;:::-;3774:63;;3729:118;3530:324;;;;;:::o;3860:552::-;3937:6;3945;3953;4002:2;3990:9;3981:7;3977:23;3973:32;3970:2;;;4018:1;4015;4008:12;3970:2;4061:1;4086:53;4131:7;4122:6;4111:9;4107:22;4086:53;:::i;:::-;4076:63;;4032:117;4188:2;4214:53;4259:7;4250:6;4239:9;4235:22;4214:53;:::i;:::-;4204:63;;4159:118;4316:2;4342:53;4387:7;4378:6;4367:9;4363:22;4342:53;:::i;:::-;4332:63;;4287:118;3960:452;;;;;:::o;4418:259::-;4527:10;4548:86;4630:3;4622:6;4548:86;:::i;:::-;4666:4;4661:3;4657:14;4643:28;;4538:139;;;;:::o;4683:179::-;4752:10;4773:46;4815:3;4807:6;4773:46;:::i;:::-;4851:4;4846:3;4842:14;4828:28;;4763:99;;;;:::o;4868:108::-;4945:24;4963:5;4945:24;:::i;:::-;4940:3;4933:37;4923:53;;:::o;4982:118::-;5069:24;5087:5;5069:24;:::i;:::-;5064:3;5057:37;5047:53;;:::o;5156:892::-;5315:3;5344:74;5412:5;5344:74;:::i;:::-;5434:106;5533:6;5528:3;5434:106;:::i;:::-;5427:113;;5564:76;5634:5;5564:76;:::i;:::-;5663:7;5694:1;5679:344;5704:6;5701:1;5698:13;5679:344;;;5780:6;5774:13;5807:103;5906:3;5891:13;5807:103;:::i;:::-;5800:110;;5933:80;6006:6;5933:80;:::i;:::-;5923:90;;5739:284;5726:1;5723;5719:9;5714:14;;5679:344;;;5683:14;6039:3;6032:10;;5320:728;;;;;;;:::o;6084:732::-;6203:3;6232:54;6280:5;6232:54;:::i;:::-;6302:86;6381:6;6376:3;6302:86;:::i;:::-;6295:93;;6412:56;6462:5;6412:56;:::i;:::-;6491:7;6522:1;6507:284;6532:6;6529:1;6526:13;6507:284;;;6608:6;6602:13;6635:63;6694:3;6679:13;6635:63;:::i;:::-;6628:70;;6721:60;6774:6;6721:60;:::i;:::-;6711:70;;6567:224;6554:1;6551;6547:9;6542:14;;6507:284;;;6511:14;6807:3;6800:10;;6208:608;;;;;;;:::o;6822:157::-;6922:50;6966:5;6922:50;:::i;:::-;6917:3;6910:63;6900:79;;:::o;6985:175::-;7094:59;7147:5;7094:59;:::i;:::-;7089:3;7082:72;7072:88;;:::o;7166:175::-;7275:59;7328:5;7275:59;:::i;:::-;7270:3;7263:72;7253:88;;:::o;7347:147::-;7442:45;7481:5;7442:45;:::i;:::-;7437:3;7430:58;7420:74;;:::o;7500:133::-;7583:43;7620:5;7583:43;:::i;:::-;7578:3;7571:56;7561:72;;:::o;7639:366::-;7781:3;7802:67;7866:2;7861:3;7802:67;:::i;:::-;7795:74;;7878:93;7967:3;7878:93;:::i;:::-;7996:2;7991:3;7987:12;7980:19;;7785:220;;;:::o;8011:366::-;8153:3;8174:67;8238:2;8233:3;8174:67;:::i;:::-;8167:74;;8250:93;8339:3;8250:93;:::i;:::-;8368:2;8363:3;8359:12;8352:19;;8157:220;;;:::o;8383:366::-;8525:3;8546:67;8610:2;8605:3;8546:67;:::i;:::-;8539:74;;8622:93;8711:3;8622:93;:::i;:::-;8740:2;8735:3;8731:12;8724:19;;8529:220;;;:::o;8755:366::-;8897:3;8918:67;8982:2;8977:3;8918:67;:::i;:::-;8911:74;;8994:93;9083:3;8994:93;:::i;:::-;9112:2;9107:3;9103:12;9096:19;;8901:220;;;:::o;9127:366::-;9269:3;9290:67;9354:2;9349:3;9290:67;:::i;:::-;9283:74;;9366:93;9455:3;9366:93;:::i;:::-;9484:2;9479:3;9475:12;9468:19;;9273:220;;;:::o;9499:366::-;9641:3;9662:67;9726:2;9721:3;9662:67;:::i;:::-;9655:74;;9738:93;9827:3;9738:93;:::i;:::-;9856:2;9851:3;9847:12;9840:19;;9645:220;;;:::o;9871:366::-;10013:3;10034:67;10098:2;10093:3;10034:67;:::i;:::-;10027:74;;10110:93;10199:3;10110:93;:::i;:::-;10228:2;10223:3;10219:12;10212:19;;10017:220;;;:::o;10243:366::-;10385:3;10406:67;10470:2;10465:3;10406:67;:::i;:::-;10399:74;;10482:93;10571:3;10482:93;:::i;:::-;10600:2;10595:3;10591:12;10584:19;;10389:220;;;:::o;10615:366::-;10757:3;10778:67;10842:2;10837:3;10778:67;:::i;:::-;10771:74;;10854:93;10943:3;10854:93;:::i;:::-;10972:2;10967:3;10963:12;10956:19;;10761:220;;;:::o;10987:366::-;11129:3;11150:67;11214:2;11209:3;11150:67;:::i;:::-;11143:74;;11226:93;11315:3;11226:93;:::i;:::-;11344:2;11339:3;11335:12;11328:19;;11133:220;;;:::o;11359:366::-;11501:3;11522:67;11586:2;11581:3;11522:67;:::i;:::-;11515:74;;11598:93;11687:3;11598:93;:::i;:::-;11716:2;11711:3;11707:12;11700:19;;11505:220;;;:::o;11731:366::-;11873:3;11894:67;11958:2;11953:3;11894:67;:::i;:::-;11887:74;;11970:93;12059:3;11970:93;:::i;:::-;12088:2;12083:3;12079:12;12072:19;;11877:220;;;:::o;12103:365::-;12245:3;12266:66;12330:1;12325:3;12266:66;:::i;:::-;12259:73;;12341:93;12430:3;12341:93;:::i;:::-;12459:2;12454:3;12450:12;12443:19;;12249:219;;;:::o;12474:366::-;12616:3;12637:67;12701:2;12696:3;12637:67;:::i;:::-;12630:74;;12713:93;12802:3;12713:93;:::i;:::-;12831:2;12826:3;12822:12;12815:19;;12620:220;;;:::o;12846:366::-;12988:3;13009:67;13073:2;13068:3;13009:67;:::i;:::-;13002:74;;13085:93;13174:3;13085:93;:::i;:::-;13203:2;13198:3;13194:12;13187:19;;12992:220;;;:::o;13264:1038::-;13391:4;13386:3;13382:14;13482:4;13475:5;13471:16;13465:23;13501:63;13558:4;13553:3;13549:14;13535:12;13501:63;:::i;:::-;13406:168;13658:4;13651:5;13647:16;13641:23;13677:63;13734:4;13729:3;13725:14;13711:12;13677:63;:::i;:::-;13584:166;13836:4;13829:5;13825:16;13819:23;13855:63;13912:4;13907:3;13903:14;13889:12;13855:63;:::i;:::-;13760:168;14022:4;14015:5;14011:16;14005:23;14041:63;14098:4;14093:3;14089:14;14075:12;14041:63;:::i;:::-;13938:176;14197:4;14190:5;14186:16;14180:23;14216:69;14279:4;14274:3;14270:14;14256:12;14216:69;:::i;:::-;14124:171;13360:942;;;:::o;14354:1048::-;14491:4;14486:3;14482:14;14582:4;14575:5;14571:16;14565:23;14601:63;14658:4;14653:3;14649:14;14635:12;14601:63;:::i;:::-;14506:168;14758:4;14751:5;14747:16;14741:23;14777:63;14834:4;14829:3;14825:14;14811:12;14777:63;:::i;:::-;14684:166;14936:4;14929:5;14925:16;14919:23;14955:63;15012:4;15007:3;15003:14;14989:12;14955:63;:::i;:::-;14860:168;15122:4;15115:5;15111:16;15105:23;15141:63;15198:4;15193:3;15189:14;15175:12;15141:63;:::i;:::-;15038:176;15297:4;15290:5;15286:16;15280:23;15316:69;15379:4;15374:3;15370:14;15356:12;15316:69;:::i;:::-;15224:171;14460:942;;;:::o;15454:1480::-;15588:4;15583:3;15579:14;15619:1;15698:4;15691:5;15687:16;15681:23;15668:36;;15737:55;15782:9;15737:55;:::i;:::-;15805:63;15862:4;15857:3;15853:14;15839:12;15805:63;:::i;:::-;15630:248;15954:4;15947:5;15943:16;15937:23;15924:36;;15993:55;16038:9;15993:55;:::i;:::-;16061:63;16118:4;16113:3;16109:14;16095:12;16061:63;:::i;:::-;15888:246;16212:4;16205:5;16201:16;16195:23;16182:36;;16251:55;16296:9;16251:55;:::i;:::-;16319:63;16376:4;16371:3;16367:14;16353:12;16319:63;:::i;:::-;16144:248;16478:4;16471:5;16467:16;16461:23;16448:36;;16517:55;16562:9;16517:55;:::i;:::-;16585:63;16642:4;16637:3;16633:14;16619:12;16585:63;:::i;:::-;16402:256;16733:4;16726:5;16722:16;16716:23;16703:36;;16772:63;16825:9;16772:63;:::i;:::-;16848:69;16911:4;16906:3;16902:14;16888:12;16848:69;:::i;:::-;16668:259;15557:1377;;;;:::o;16940:108::-;17017:24;17035:5;17017:24;:::i;:::-;17012:3;17005:37;16995:53;;:::o;17054:118::-;17141:24;17159:5;17141:24;:::i;:::-;17136:3;17129:37;17119:53;;:::o;17178:222::-;17271:4;17309:2;17298:9;17294:18;17286:26;;17322:71;17390:1;17379:9;17375:17;17366:6;17322:71;:::i;:::-;17276:124;;;;:::o;17406:332::-;17527:4;17565:2;17554:9;17550:18;17542:26;;17578:71;17646:1;17635:9;17631:17;17622:6;17578:71;:::i;:::-;17659:72;17727:2;17716:9;17712:18;17703:6;17659:72;:::i;:::-;17532:206;;;;;:::o;17744:442::-;17893:4;17931:2;17920:9;17916:18;17908:26;;17944:71;18012:1;18001:9;17997:17;17988:6;17944:71;:::i;:::-;18025:72;18093:2;18082:9;18078:18;18069:6;18025:72;:::i;:::-;18107;18175:2;18164:9;18160:18;18151:6;18107:72;:::i;:::-;17898:288;;;;;;:::o;18192:332::-;18313:4;18351:2;18340:9;18336:18;18328:26;;18364:71;18432:1;18421:9;18417:17;18408:6;18364:71;:::i;:::-;18445:72;18513:2;18502:9;18498:18;18489:6;18445:72;:::i;:::-;18318:206;;;;;:::o;18530:453::-;18713:4;18751:2;18740:9;18736:18;18728:26;;18800:9;18794:4;18790:20;18786:1;18775:9;18771:17;18764:47;18828:148;18971:4;18962:6;18828:148;:::i;:::-;18820:156;;18718:265;;;;:::o;18989:373::-;19132:4;19170:2;19159:9;19155:18;19147:26;;19219:9;19213:4;19209:20;19205:1;19194:9;19190:17;19183:47;19247:108;19350:4;19341:6;19247:108;:::i;:::-;19239:116;;19137:225;;;;:::o;19368:248::-;19474:4;19512:2;19501:9;19497:18;19489:26;;19525:84;19606:1;19595:9;19591:17;19582:6;19525:84;:::i;:::-;19479:137;;;;:::o;19622:266::-;19737:4;19775:2;19764:9;19760:18;19752:26;;19788:93;19878:1;19867:9;19863:17;19854:6;19788:93;:::i;:::-;19742:146;;;;:::o;19894:266::-;20009:4;20047:2;20036:9;20032:18;20024:26;;20060:93;20150:1;20139:9;20135:17;20126:6;20060:93;:::i;:::-;20014:146;;;;:::o;20166:419::-;20332:4;20370:2;20359:9;20355:18;20347:26;;20419:9;20413:4;20409:20;20405:1;20394:9;20390:17;20383:47;20447:131;20573:4;20447:131;:::i;:::-;20439:139;;20337:248;;;:::o;20591:419::-;20757:4;20795:2;20784:9;20780:18;20772:26;;20844:9;20838:4;20834:20;20830:1;20819:9;20815:17;20808:47;20872:131;20998:4;20872:131;:::i;:::-;20864:139;;20762:248;;;:::o;21016:419::-;21182:4;21220:2;21209:9;21205:18;21197:26;;21269:9;21263:4;21259:20;21255:1;21244:9;21240:17;21233:47;21297:131;21423:4;21297:131;:::i;:::-;21289:139;;21187:248;;;:::o;21441:419::-;21607:4;21645:2;21634:9;21630:18;21622:26;;21694:9;21688:4;21684:20;21680:1;21669:9;21665:17;21658:47;21722:131;21848:4;21722:131;:::i;:::-;21714:139;;21612:248;;;:::o;21866:419::-;22032:4;22070:2;22059:9;22055:18;22047:26;;22119:9;22113:4;22109:20;22105:1;22094:9;22090:17;22083:47;22147:131;22273:4;22147:131;:::i;:::-;22139:139;;22037:248;;;:::o;22291:419::-;22457:4;22495:2;22484:9;22480:18;22472:26;;22544:9;22538:4;22534:20;22530:1;22519:9;22515:17;22508:47;22572:131;22698:4;22572:131;:::i;:::-;22564:139;;22462:248;;;:::o;22716:419::-;22882:4;22920:2;22909:9;22905:18;22897:26;;22969:9;22963:4;22959:20;22955:1;22944:9;22940:17;22933:47;22997:131;23123:4;22997:131;:::i;:::-;22989:139;;22887:248;;;:::o;23141:419::-;23307:4;23345:2;23334:9;23330:18;23322:26;;23394:9;23388:4;23384:20;23380:1;23369:9;23365:17;23358:47;23422:131;23548:4;23422:131;:::i;:::-;23414:139;;23312:248;;;:::o;23566:419::-;23732:4;23770:2;23759:9;23755:18;23747:26;;23819:9;23813:4;23809:20;23805:1;23794:9;23790:17;23783:47;23847:131;23973:4;23847:131;:::i;:::-;23839:139;;23737:248;;;:::o;23991:419::-;24157:4;24195:2;24184:9;24180:18;24172:26;;24244:9;24238:4;24234:20;24230:1;24219:9;24215:17;24208:47;24272:131;24398:4;24272:131;:::i;:::-;24264:139;;24162:248;;;:::o;24416:419::-;24582:4;24620:2;24609:9;24605:18;24597:26;;24669:9;24663:4;24659:20;24655:1;24644:9;24640:17;24633:47;24697:131;24823:4;24697:131;:::i;:::-;24689:139;;24587:248;;;:::o;24841:419::-;25007:4;25045:2;25034:9;25030:18;25022:26;;25094:9;25088:4;25084:20;25080:1;25069:9;25065:17;25058:47;25122:131;25248:4;25122:131;:::i;:::-;25114:139;;25012:248;;;:::o;25266:419::-;25432:4;25470:2;25459:9;25455:18;25447:26;;25519:9;25513:4;25509:20;25505:1;25494:9;25490:17;25483:47;25547:131;25673:4;25547:131;:::i;:::-;25539:139;;25437:248;;;:::o;25691:419::-;25857:4;25895:2;25884:9;25880:18;25872:26;;25944:9;25938:4;25934:20;25930:1;25919:9;25915:17;25908:47;25972:131;26098:4;25972:131;:::i;:::-;25964:139;;25862:248;;;:::o;26116:419::-;26282:4;26320:2;26309:9;26305:18;26297:26;;26369:9;26363:4;26359:20;26355:1;26344:9;26340:17;26333:47;26397:131;26523:4;26397:131;:::i;:::-;26389:139;;26287:248;;;:::o;26541:303::-;26674:4;26712:3;26701:9;26697:19;26689:27;;26726:111;26834:1;26823:9;26819:17;26810:6;26726:111;:::i;:::-;26679:165;;;;:::o;26850:222::-;26943:4;26981:2;26970:9;26966:18;26958:26;;26994:71;27062:1;27051:9;27047:17;27038:6;26994:71;:::i;:::-;26948:124;;;;:::o;27078:407::-;27236:4;27274:3;27263:9;27259:19;27251:27;;27288:71;27356:1;27345:9;27341:17;27332:6;27288:71;:::i;:::-;27369:109;27474:2;27463:9;27459:18;27450:6;27369:109;:::i;:::-;27241:244;;;;;:::o;27491:775::-;27724:4;27762:3;27751:9;27747:19;27739:27;;27776:71;27844:1;27833:9;27829:17;27820:6;27776:71;:::i;:::-;27857:72;27925:2;27914:9;27910:18;27901:6;27857:72;:::i;:::-;27939;28007:2;27996:9;27992:18;27983:6;27939:72;:::i;:::-;28021;28089:2;28078:9;28074:18;28065:6;28021:72;:::i;:::-;28103:73;28171:3;28160:9;28156:19;28147:6;28103:73;:::i;:::-;28186;28254:3;28243:9;28239:19;28230:6;28186:73;:::i;:::-;27729:537;;;;;;;;;:::o;28272:1013::-;28569:4;28607:3;28596:9;28592:19;28584:27;;28621:71;28689:1;28678:9;28674:17;28665:6;28621:71;:::i;:::-;28702:72;28770:2;28759:9;28755:18;28746:6;28702:72;:::i;:::-;28784;28852:2;28841:9;28837:18;28828:6;28784:72;:::i;:::-;28866;28934:2;28923:9;28919:18;28910:6;28866:72;:::i;:::-;28948:73;29016:3;29005:9;29001:19;28992:6;28948:73;:::i;:::-;29031;29099:3;29088:9;29084:19;29075:6;29031:73;:::i;:::-;29114;29182:3;29171:9;29167:19;29158:6;29114:73;:::i;:::-;29197:81;29273:3;29262:9;29258:19;29249:6;29197:81;:::i;:::-;28574:711;;;;;;;;;;;:::o;29291:152::-;29378:4;29401:3;29393:11;;29431:4;29426:3;29422:14;29414:22;;29383:60;;;:::o;29449:132::-;29516:4;29539:3;29531:11;;29569:4;29564:3;29560:14;29552:22;;29521:60;;;:::o;29587:134::-;29674:6;29708:5;29702:12;29692:22;;29681:40;;;:::o;29727:114::-;29794:6;29828:5;29822:12;29812:22;;29801:40;;;:::o;29847:133::-;29937:4;29969;29964:3;29960:14;29952:22;;29942:38;;;:::o;29986:113::-;30056:4;30088;30083:3;30079:14;30071:22;;30061:38;;;:::o;30105:204::-;30224:11;30258:6;30253:3;30246:19;30298:4;30293:3;30289:14;30274:29;;30236:73;;;;:::o;30315:184::-;30414:11;30448:6;30443:3;30436:19;30488:4;30483:3;30479:14;30464:29;;30426:73;;;;:::o;30505:169::-;30589:11;30623:6;30618:3;30611:19;30663:4;30658:3;30654:14;30639:29;;30601:73;;;;:::o;30680:305::-;30720:3;30739:20;30757:1;30739:20;:::i;:::-;30734:25;;30773:20;30791:1;30773:20;:::i;:::-;30768:25;;30927:1;30859:66;30855:74;30852:1;30849:81;30846:2;;;30933:18;;:::i;:::-;30846:2;30977:1;30974;30970:9;30963:16;;30724:261;;;;:::o;30991:185::-;31031:1;31048:20;31066:1;31048:20;:::i;:::-;31043:25;;31082:20;31100:1;31082:20;:::i;:::-;31077:25;;31121:1;31111:2;;31126:18;;:::i;:::-;31111:2;31168:1;31165;31161:9;31156:14;;31033:143;;;;:::o;31182:185::-;31222:1;31239:20;31257:1;31239:20;:::i;:::-;31234:25;;31273:20;31291:1;31273:20;:::i;:::-;31268:25;;31312:1;31302:2;;31317:18;;:::i;:::-;31302:2;31359:1;31356;31352:9;31347:14;;31224:143;;;;:::o;31373:348::-;31413:7;31436:20;31454:1;31436:20;:::i;:::-;31431:25;;31470:20;31488:1;31470:20;:::i;:::-;31465:25;;31658:1;31590:66;31586:74;31583:1;31580:81;31575:1;31568:9;31561:17;31557:105;31554:2;;;31665:18;;:::i;:::-;31554:2;31713:1;31710;31706:9;31695:20;;31421:300;;;;:::o;31727:191::-;31767:4;31787:20;31805:1;31787:20;:::i;:::-;31782:25;;31821:20;31839:1;31821:20;:::i;:::-;31816:25;;31860:1;31857;31854:8;31851:2;;;31865:18;;:::i;:::-;31851:2;31910:1;31907;31903:9;31895:17;;31772:146;;;;:::o;31924:188::-;31963:4;31983:19;32000:1;31983:19;:::i;:::-;31978:24;;32016:19;32033:1;32016:19;:::i;:::-;32011:24;;32054:1;32051;32048:8;32045:2;;;32059:18;;:::i;:::-;32045:2;32104:1;32101;32097:9;32089:17;;31968:144;;;;:::o;32118:139::-;32168:7;32208:42;32201:5;32197:54;32186:65;;32176:81;;;:::o;32263:109::-;32321:7;32361:4;32354:5;32350:16;32339:27;;32329:43;;;:::o;32378:90::-;32428:7;32457:5;32446:16;;32436:32;;;:::o;32474:96::-;32511:7;32540:24;32558:5;32540:24;:::i;:::-;32529:35;;32519:51;;;:::o;32576:90::-;32610:7;32653:5;32646:13;32639:21;32628:32;;32618:48;;;:::o;32672:131::-;32719:7;32748:5;32737:16;;32754:43;32791:5;32754:43;:::i;:::-;32727:76;;;:::o;32809:127::-;32854:7;32883:5;32872:16;;32889:41;32924:5;32889:41;:::i;:::-;32862:74;;;:::o;32942:114::-;32979:7;33019:30;33012:5;33008:42;32997:53;;32987:69;;;:::o;33062:126::-;33099:7;33139:42;33132:5;33128:54;33117:65;;33107:81;;;:::o;33194:142::-;33231:7;33271:58;33264:5;33260:70;33249:81;;33239:97;;;:::o;33342:77::-;33379:7;33408:5;33397:16;;33387:32;;;:::o;33425:93::-;33461:7;33501:10;33494:5;33490:22;33479:33;;33469:49;;;:::o;33524:152::-;33587:9;33620:50;33664:5;33620:50;:::i;:::-;33607:63;;33597:79;;;:::o;33682:126::-;33745:9;33778:24;33796:5;33778:24;:::i;:::-;33765:37;;33755:53;;;:::o;33814:170::-;33886:9;33919:59;33972:5;33919:59;:::i;:::-;33906:72;;33896:88;;;:::o;33990:135::-;34062:9;34095:24;34113:5;34095:24;:::i;:::-;34082:37;;34072:53;;;:::o;34131:170::-;34203:9;34236:59;34289:5;34236:59;:::i;:::-;34223:72;;34213:88;;;:::o;34307:135::-;34379:9;34412:24;34430:5;34412:24;:::i;:::-;34399:37;;34389:53;;;:::o;34448:131::-;34506:9;34539:34;34567:5;34539:34;:::i;:::-;34526:47;;34516:63;;;:::o;34585:127::-;34641:9;34674:32;34700:5;34674:32;:::i;:::-;34661:45;;34651:61;;;:::o;34718:166::-;34787:5;34812:66;34843:34;34866:10;34843:34;:::i;:::-;34812:66;:::i;:::-;34803:75;;34793:91;;;:::o;34890:182::-;34967:5;34992:74;35031:34;35054:10;35031:34;:::i;:::-;34992:74;:::i;:::-;34983:83;;34973:99;;;:::o;35078:166::-;35147:5;35172:66;35203:34;35226:10;35203:34;:::i;:::-;35172:66;:::i;:::-;35163:75;;35153:91;;;:::o;35250:233::-;35289:3;35312:24;35330:5;35312:24;:::i;:::-;35303:33;;35358:66;35351:5;35348:77;35345:2;;;35428:18;;:::i;:::-;35345:2;35475:1;35468:5;35464:13;35457:20;;35293:190;;;:::o;35489:176::-;35521:1;35538:20;35556:1;35538:20;:::i;:::-;35533:25;;35572:20;35590:1;35572:20;:::i;:::-;35567:25;;35611:1;35601:2;;35616:18;;:::i;:::-;35601:2;35657:1;35654;35650:9;35645:14;;35523:142;;;;:::o;35671:180::-;35719:77;35716:1;35709:88;35816:4;35813:1;35806:15;35840:4;35837:1;35830:15;35857:180;35905:77;35902:1;35895:88;36002:4;35999:1;35992:15;36026:4;36023:1;36016:15;36043:180;36091:77;36088:1;36081:88;36188:4;36185:1;36178:15;36212:4;36209:1;36202:15;36229:102;36271:8;36318:5;36315:1;36311:13;36290:34;;36280:51;;;:::o;36337:176::-;36477:28;36473:1;36465:6;36461:14;36454:52;36443:70;:::o;36519:171::-;36659:23;36655:1;36647:6;36643:14;36636:47;36625:65;:::o;36696:161::-;36836:13;36832:1;36824:6;36820:14;36813:37;36802:55;:::o;36863:163::-;37003:15;36999:1;36991:6;36987:14;36980:39;36969:57;:::o;37032:169::-;37172:21;37168:1;37160:6;37156:14;37149:45;37138:63;:::o;37207:169::-;37347:21;37343:1;37335:6;37331:14;37324:45;37313:63;:::o;37382:166::-;37522:18;37518:1;37510:6;37506:14;37499:42;37488:60;:::o;37554:177::-;37694:29;37690:1;37682:6;37678:14;37671:53;37660:71;:::o;37737:163::-;37877:15;37873:1;37865:6;37861:14;37854:39;37843:57;:::o;37906:175::-;38046:27;38042:1;38034:6;38030:14;38023:51;38012:69;:::o;38087:166::-;38227:18;38223:1;38215:6;38211:14;38204:42;38193:60;:::o;38259:163::-;38399:15;38395:1;38387:6;38383:14;38376:39;38365:57;:::o;38428:159::-;38568:11;38564:1;38556:6;38552:14;38545:35;38534:53;:::o;38593:167::-;38733:19;38729:1;38721:6;38717:14;38710:43;38699:61;:::o;38766:173::-;38906:25;38902:1;38894:6;38890:14;38883:49;38872:67;:::o;38945:115::-;39028:1;39021:5;39018:12;39008:2;;39034:18;;:::i;:::-;39008:2;38998:62;:::o;39066:113::-;39147:1;39140:5;39137:12;39127:2;;39153:18;;:::i;:::-;39127:2;39117:62;:::o;39185:122::-;39258:24;39276:5;39258:24;:::i;:::-;39251:5;39248:35;39238:2;;39297:1;39294;39287:12;39238:2;39228:79;:::o;39313:116::-;39383:21;39398:5;39383:21;:::i;:::-;39376:5;39373:32;39363:2;;39419:1;39416;39409:12;39363:2;39353:76;:::o;39435:122::-;39508:24;39526:5;39508:24;:::i;:::-;39501:5;39498:35;39488:2;;39547:1;39544;39537:12;39488:2;39478:79;:::o;39563:122::-;39636:24;39654:5;39636:24;:::i;:::-;39629:5;39626:35;39616:2;;39675:1;39672;39665:12;39616:2;39606:79;:::o;39691:120::-;39763:23;39780:5;39763:23;:::i;:::-;39756:5;39753:34;39743:2;;39801:1;39798;39791:12;39743:2;39733:78;:::o"
            },
            "methodIdentifiers": {
              "accountingToken()": "da68cf8b",
              "buyLot(uint256,uint256,uint256)": "3c80d8ea",
              "claimReward(uint256)": "ae169a50",
              "clcAmountToApprove(uint256,uint256,uint256)": "a4d246ff",
              "clcAmountToApproveForUpdate(uint256,uint256,uint256)": "3656d5ee",
              "clcFrameTimestamp(uint256)": "5b3ad63e",
              "clcLotKey(uint256)": "9592de18",
              "clcPrice(uint256)": "41a8b6f8",
              "dPrice()": "499a0fc4",
              "emptyFunds(uint256)": "6f7cb60b",
              "factory()": "c45a0155",
              "feeMarket()": "410f0710",
              "feeProtocol()": "527eb4bc",
              "frames(uint256)": "a10340bc",
              "framesKeys(uint256)": "050e8840",
              "getLot(uint256,uint256)": "6f1aefc3",
              "getLotKey(uint256,uint256)": "3e16bc20",
              "getNumOfUserFrames(address)": "0ef19273",
              "getNumberOfFrameKeys()": "89da88a3",
              "getOpenFrameKeys(uint256,uint256)": "14aa5a99",
              "getRewardAmount(uint256)": "c84993af",
              "getUserFrames(address)": "9495833c",
              "getUserLots(address)": "659d0ca0",
              "initTimestamp()": "7358c57a",
              "minTax()": "3d09a82a",
              "ownerMarket()": "45084775",
              "period()": "ef78d4fd",
              "tReporting()": "ff5c86b0",
              "taxMarket()": "7e996639",
              "uniswapPair()": "c816841b",
              "updateFramePrices()": "96b2c6f3",
              "updateLotPrice(uint256,uint256,uint256)": "bb15d2dd",
              "userFrames(address,uint256)": "60f65c60"
            }
          }
        }
      },
      "contracts/MarketFactory.sol": {
        "MarketFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_uniswapFactory",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_uniswapPair",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "_period",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "_initTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "_tax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_fee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_dPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "_tReporting",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "_minTax",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_avgPriceSwitch",
                  "type": "bool"
                }
              ],
              "name": "addMarket",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMarketsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "markets",
              "outputs": [
                {
                  "internalType": "contract Market",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "marketsKeys",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "uniswapFactory",
              "outputs": [
                {
                  "internalType": "contract IUniswapV2Factory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:805:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "233:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "279:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "288:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "291:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "281:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "281:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "281:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "263:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "250:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "250:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "246:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "243:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "305:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "320:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "334:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "324:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "349:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "395:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "406:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "391:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "391:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "415:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "359:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "359:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "349:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "203:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "214:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "226:6:8",
                            "type": ""
                          }
                        ],
                        "src": "156:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "491:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "501:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "512:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "473:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "483:7:8",
                            "type": ""
                          }
                        ],
                        "src": "446:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "593:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "603:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "625:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "575:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "585:7:8",
                            "type": ""
                          }
                        ],
                        "src": "548:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "723:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "780:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "789:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "792:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "782:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "782:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "782:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "746:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "771:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "753:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "743:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "743:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "736:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "736:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "733:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "716:5:8",
                            "type": ""
                          }
                        ],
                        "src": "680:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x611F CODESIZE SUB DUP1 PUSH2 0x611F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0x129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEE DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 DUP3 PUSH2 0x109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132 DUP2 PUSH2 0xF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5FD0 DUP1 PUSH2 0x14F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AFC618 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x27FA35C3 EQ PUSH3 0x8F JUMPI DUP1 PUSH4 0x46A81C00 EQ PUSH3 0xB1 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x8E8F294B EQ PUSH3 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x400 JUMP JUMPDEST PUSH3 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x99 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0x4F0 JUMP JUMPDEST PUSH3 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF1 PUSH3 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x143 SWAP2 SWAP1 PUSH3 0x3D4 JUMP JUMPDEST PUSH3 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x158 SWAP2 SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH3 0x17C SWAP1 PUSH3 0x36A JUMP JUMPDEST PUSH3 0x192 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x570E DUP1 PUSH3 0x88D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x389 DUP2 PUSH3 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3A0 DUP2 PUSH3 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3B7 DUP2 PUSH3 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3CE DUP2 PUSH3 0x872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3F7 DUP5 DUP3 DUP6 ADD PUSH3 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x431 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH3 0x444 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x457 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x46A DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x47D DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x490 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x4A3 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x4B6 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x4CA DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x4DE DUP14 DUP3 DUP15 ADD PUSH3 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x513 DUP5 DUP3 DUP6 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x527 DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x538 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x549 DUP2 PUSH3 0x748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x55A DUP2 PUSH3 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x56B DUP2 PUSH3 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x57C DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x58D DUP2 PUSH3 0x7E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x59E DUP2 PUSH3 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x5AF DUP2 PUSH3 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x54F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH3 0x607 PUSH1 0x0 DUP4 ADD DUP15 PUSH3 0x571 JUMP JUMPDEST PUSH3 0x616 PUSH1 0x20 DUP4 ADD DUP14 PUSH3 0x53E JUMP JUMPDEST PUSH3 0x625 PUSH1 0x40 DUP4 ADD DUP13 PUSH3 0x560 JUMP JUMPDEST PUSH3 0x634 PUSH1 0x60 DUP4 ADD DUP12 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x643 PUSH1 0x80 DUP4 ADD DUP11 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x652 PUSH1 0xA0 DUP4 ADD DUP10 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x661 PUSH1 0xC0 DUP4 ADD DUP9 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x670 PUSH1 0xE0 DUP4 ADD DUP8 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x680 PUSH2 0x100 DUP4 ADD DUP7 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x690 PUSH2 0x120 DUP4 ADD DUP6 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x6A0 PUSH2 0x140 DUP4 ADD DUP5 PUSH3 0x52D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F7 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x755 DUP3 PUSH3 0x75C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x769 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x77D DUP3 PUSH3 0x784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x791 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A5 DUP3 PUSH3 0x7AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B9 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CD DUP3 PUSH3 0x7D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7E1 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F5 DUP3 PUSH3 0x7FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x809 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x81D DUP3 PUSH3 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82F DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP2 EQ PUSH3 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x849 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP2 EQ PUSH3 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x863 DUP2 PUSH3 0x72A JUMP JUMPDEST DUP2 EQ PUSH3 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x87D DUP2 PUSH3 0x734 JUMP JUMPDEST DUP2 EQ PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xC SSTORE PUSH1 0x0 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x570E CODESIZE SUB DUP1 PUSH3 0x570E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST DUP10 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x204 DUP2 PUSH3 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21B DUP2 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x42D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP15 DUP3 DUP16 ADD PUSH3 0x20A JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH3 0x27E DUP15 DUP3 DUP16 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH3 0x291 DUP15 DUP3 DUP16 ADD PUSH3 0x1F3 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH3 0x2A4 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH3 0x2B7 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH3 0x2CA DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH3 0x2DD DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH3 0x2F0 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH3 0x304 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 PUSH3 0x318 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x140 PUSH3 0x32C DUP15 DUP3 DUP16 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34C DUP3 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36C DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x380 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x394 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D0 DUP2 PUSH3 0x353 JUMP JUMPDEST DUP2 EQ PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA DUP2 PUSH3 0x35F JUMP JUMPDEST DUP2 EQ PUSH3 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x404 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP2 EQ PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x387 JUMP JUMPDEST DUP2 EQ PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x438 DUP2 PUSH3 0x3BB JUMP JUMPDEST DUP2 EQ PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x52B7 DUP1 PUSH3 0x457 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F7CB60B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6B9 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x611 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x572 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4EA JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x462 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3B4 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x32A JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x46E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x495B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x1D9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B6 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH2 0x20E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x252F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x25E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x25FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x619 PUSH2 0x2B7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x4760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x4745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x2BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x685 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x472A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A3 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 GT PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x81D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x879 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x8C5 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8B8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8D1 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7BF JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F0 DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FD DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x935 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x943 DUP5 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x955 JUMPI PUSH1 0x0 SWAP5 POP PUSH2 0x964 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9E0 DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9EE DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F9 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x487B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB00 DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC9C SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDF3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 PUSH2 0xE2F DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1122 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11C9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1228 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1290 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x12E9 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138F SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14B5 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14C6 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST DUP3 PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1521 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1565 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x159E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x158B PUSH2 0x3E2D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1583 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15A9 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x191A JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15EE JUMPI PUSH1 0x32 DUP2 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x15E7 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1644 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16A0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1907 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1905 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1730 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1813 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18F2 JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18D9 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 EQ ISZERO PUSH2 0x18F1 JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x18FD SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16A9 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1912 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C53 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1938 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C40 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C3E JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B85 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2B JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1BFD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C13 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x1C2A JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1C36 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19E3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4B SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1922 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C66 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3B SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9F SWAP1 PUSH2 0x479B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F86 SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA4 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x209E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x208A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x20BD JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x20CE SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x20D8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2100 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x210A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2301 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2213 JUMPI PUSH2 0x2151 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x21C5 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x223E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP PUSH2 0x22B2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2312 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x2426 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x2362 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x2425 JUMP JUMPDEST PUSH2 0x23DB PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x24CE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x253B DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2546 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257F SWAP1 PUSH2 0x485B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2593 DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A1 DUP4 DUP7 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x25D9 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25EE DUP2 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x3871 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2619 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2657 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x266B DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2679 DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272A SWAP1 PUSH2 0x47DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x273C TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x277E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2775 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x278A DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27C2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29CF JUMPI DUP1 DUP3 PUSH2 0x27D8 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2835 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2861 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2885 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0x28C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28BD SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2912 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2930 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x295E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2982 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x298F SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x29B0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2ADB JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2ADA JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x2A22 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3F SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A91 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2A9E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2ABF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B12 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x2C2A TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x2C34 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x2C3E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2C52 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C5C SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C69 DUP7 PUSH2 0x3CF9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C88 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x2C92 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2CA8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CB2 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x2CC3 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CCD SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2CDB SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CF3 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D2F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D8B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2D99 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x2DA2 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DDB SWAP1 PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E5F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA3 DUP4 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EDF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F4F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2F5D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2FFD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3010 PUSH2 0x3D35 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x306C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3090 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3110 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x315D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3195 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x3254 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x31BC SWAP2 SWAP1 PUSH2 0x4C62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x31CF DUP5 DUP7 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP8 PUSH2 0x3206 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3219 DUP6 DUP6 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3245 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x3250 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x329C JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x32DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D3 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x334B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3342 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP4 PUSH2 0x335A SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST GT ISZERO PUSH2 0x339B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3392 SWAP1 PUSH2 0x477B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x343A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3480 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x348A SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3511 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x351B SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3547 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x3551 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3576 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3580 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3619 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3647 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x366B SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x374A SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3768 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37BA SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP6 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x3862 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x38AA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3906 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x3946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393D SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3967 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3A12 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x3A53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4A SWAP1 PUSH2 0x481B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B04 SWAP1 PUSH2 0x48FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BCA SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C1C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C91 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3CED SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D04 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3D14 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3D30 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3D23 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3D2D SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3D48 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D55 PUSH2 0x3EAA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3DA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9F SWAP1 PUSH2 0x493B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3E04 SWAP2 SWAP1 PUSH2 0x4B72 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3EA4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EEA DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EFF DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F14 DUP2 PUSH2 0x5225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F29 DUP2 PUSH2 0x523C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F3E DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F53 DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F68 DUP2 PUSH2 0x526A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F8E DUP5 DUP3 DUP6 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB7 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3FF2 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x400E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x401C DUP5 DUP3 DUP6 ADD PUSH2 0x3F05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x403A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4048 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4059 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x406A DUP7 DUP3 DUP8 ADD PUSH2 0x3F59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4094 DUP5 DUP3 DUP6 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40BD DUP5 DUP3 DUP6 ADD PUSH2 0x3F44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40E7 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40F8 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4125 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4136 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4147 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415D DUP4 DUP4 PUSH2 0x44B3 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4175 DUP4 DUP4 PUSH2 0x4624 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x418A DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4199 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41AA DUP3 PUSH2 0x4AB9 JUMP JUMPDEST PUSH2 0x41B4 DUP2 DUP6 PUSH2 0x4AE9 JUMP JUMPDEST SWAP4 POP PUSH2 0x41BF DUP4 PUSH2 0x4A99 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41F0 JUMPI DUP2 MLOAD PUSH2 0x41D7 DUP9 DUP3 PUSH2 0x4151 JUMP JUMPDEST SWAP8 POP PUSH2 0x41E2 DUP4 PUSH2 0x4ACF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x41C3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4208 DUP3 PUSH2 0x4AC4 JUMP JUMPDEST PUSH2 0x4212 DUP2 DUP6 PUSH2 0x4AFA JUMP JUMPDEST SWAP4 POP PUSH2 0x421D DUP4 PUSH2 0x4AA9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x424E JUMPI DUP2 MLOAD PUSH2 0x4235 DUP9 DUP3 PUSH2 0x4169 JUMP JUMPDEST SWAP8 POP PUSH2 0x4240 DUP4 PUSH2 0x4ADC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4221 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4264 DUP2 PUSH2 0x4D8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4273 DUP2 PUSH2 0x4DB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4282 DUP2 PUSH2 0x4DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4291 DUP2 PUSH2 0x4DF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42A0 DUP2 PUSH2 0x4E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B3 PUSH1 0x1A DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42BE DUP3 PUSH2 0x4F7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D6 PUSH1 0x15 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42E1 DUP3 PUSH2 0x4FA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F9 PUSH1 0xB DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4304 DUP3 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431C PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4327 DUP3 PUSH2 0x4FFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433F PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x434A DUP3 PUSH2 0x5023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4362 PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x436D DUP3 PUSH2 0x504C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4385 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4390 DUP3 PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A8 PUSH1 0x1B DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43B3 DUP3 PUSH2 0x509E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43CB PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43D6 DUP3 PUSH2 0x50C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43EE PUSH1 0x19 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43F9 DUP3 PUSH2 0x50F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4411 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x441C DUP3 PUSH2 0x5119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4434 PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x443F DUP3 PUSH2 0x5142 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4457 PUSH1 0x9 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4462 DUP3 PUSH2 0x516B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447A PUSH1 0x11 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4485 DUP3 PUSH2 0x5194 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x449D PUSH1 0x17 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x44A8 DUP3 PUSH2 0x51BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x44C9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x44DC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x44EF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4502 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4515 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4531 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4544 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4557 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x456A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x457D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4598 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45A5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45B6 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45C3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45D4 DUP2 PUSH2 0x4E1D JUMP JUMPDEST PUSH2 0x45E1 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45F2 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45FF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4610 DUP2 PUSH2 0x4E37 JUMP JUMPDEST PUSH2 0x461D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x462D DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x463C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4657 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4672 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x467F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x469B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4700 DUP2 DUP5 PUSH2 0x419F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4722 DUP2 DUP5 PUSH2 0x41FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x473F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x425B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x426A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4794 DUP2 PUSH2 0x42A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47B4 DUP2 PUSH2 0x42C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47D4 DUP2 PUSH2 0x42EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47F4 DUP2 PUSH2 0x430F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4814 DUP2 PUSH2 0x4332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4834 DUP2 PUSH2 0x4355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4854 DUP2 PUSH2 0x4378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4874 DUP2 PUSH2 0x439B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4894 DUP2 PUSH2 0x43BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48B4 DUP2 PUSH2 0x43E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48D4 DUP2 PUSH2 0x4404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F4 DUP2 PUSH2 0x4427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4914 DUP2 PUSH2 0x444A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4934 DUP2 PUSH2 0x446D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4954 DUP2 PUSH2 0x4490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4970 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x451B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x498B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49A6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4583 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49CF PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49DC PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49E9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49F6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A03 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A10 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x4A31 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A3E PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A4B PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A58 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A65 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A72 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A7F PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A8C PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4288 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B27 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B32 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4B67 JUMPI PUSH2 0x4B66 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7D DUP3 PUSH2 0x4D4B JUMP JUMPDEST SWAP2 POP PUSH2 0x4B88 DUP4 PUSH2 0x4D4B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B98 JUMPI PUSH2 0x4B97 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAE DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB9 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4BC9 JUMPI PUSH2 0x4BC8 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BDF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BEA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4C23 JUMPI PUSH2 0x4C22 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C44 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C57 JUMPI PUSH2 0x4C56 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6D DUP3 PUSH2 0x4D7D JUMP JUMPDEST SWAP2 POP PUSH2 0x4C78 DUP4 PUSH2 0x4D7D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C8B JUMPI PUSH2 0x4C8A PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD8 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4CF9 DUP3 PUSH2 0x51E6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4D0C DUP3 PUSH2 0x51FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D98 DUP3 PUSH2 0x4D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DAA DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DBC DUP3 PUSH2 0x4DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DCE DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE0 DUP3 PUSH2 0x4DE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF2 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E04 DUP3 PUSH2 0x4CEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E16 DUP3 PUSH2 0x4CFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E30 PUSH2 0x4E2B DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4C96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4A PUSH2 0x4E45 DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E64 PUSH2 0x4E5F DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E76 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4EA9 JUMPI PUSH2 0x4EA8 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ECA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4EDA JUMPI PUSH2 0x4ED9 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F542054484520464143544F5259204F574E45520000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552530000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x51F7 JUMPI PUSH2 0x51F6 PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x520B JUMPI PUSH2 0x520A PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5217 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x5222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x522E DUP2 PUSH2 0x4CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x5239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5245 DUP2 PUSH2 0x4D11 JUMP JUMPDEST DUP2 EQ PUSH2 0x5250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x525C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP2 EQ PUSH2 0x5267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5273 DUP2 PUSH2 0x4D7D JUMP JUMPDEST DUP2 EQ PUSH2 0x527E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC5 SWAP10 OR BALANCE DUP7 SWAP6 0xB6 0xB5 AND 0x26 0xCD SLT 0xB8 0xC9 JUMP DUP8 PUSH21 0x8EF885A16BA97F3A37141F1CEE5764736F6C634300 ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xB0 ADDMOD DUP16 0xE9 0xDD PUSH12 0x2CAADDDA93BE03E226A9B829 0xA8 GASLIMIT PUSH29 0xC55D70EA005D64CC657264736F6C634300080400330000000000000000 ",
              "sourceMap": "283:909:7:-:0;;;473:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;529:10;521:5;;:18;;;;;;;;;;;;;;;;;;585:15;550:14;;:51;;;;;;;;;;;;;;;;;;473:136;283:909;;7:143:8;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;283:909:7:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:9170:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "201:84:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "211:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "233:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "220:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "220:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "249:30:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "179:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "187:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "195:5:8",
                            "type": ""
                          }
                        ],
                        "src": "152:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "343:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "353:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "375:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "391:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "321:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "329:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "337:5:8",
                            "type": ""
                          }
                        ],
                        "src": "291:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "487:86:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "497:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "519:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "506:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "506:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "497:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "561:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "535:25:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "535:32:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "535:32:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "465:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "473:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "481:5:8",
                            "type": ""
                          }
                        ],
                        "src": "436:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "645:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "691:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "700:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "703:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "693:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "693:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "693:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "666:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "675:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "662:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "662:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "687:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "658:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "658:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "655:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "717:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "732:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "746:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "736:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "761:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "796:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "807:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "792:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "792:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "816:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "771:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "771:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "761:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "615:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "626:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "638:6:8",
                            "type": ""
                          }
                        ],
                        "src": "579:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1060:1349:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1107:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1116:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1119:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1109:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1109:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1109:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1090:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1077:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1077:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1102:3:8",
                                    "type": "",
                                    "value": "320"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1073:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1073:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1070:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1133:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1148:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1162:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1152:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1177:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1212:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1223:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1208:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1208:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1232:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1187:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1187:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1177:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1260:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1275:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1289:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1279:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1305:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1340:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1351:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1336:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1336:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1360:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1315:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1315:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1305:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1388:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1403:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1417:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1407:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1433:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1467:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1478:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1463:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1463:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1487:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "1443:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1443:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1433:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1515:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1530:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1544:2:8",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1534:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1560:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1594:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1605:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1590:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1590:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1614:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "1570:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1570:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1560:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1642:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1657:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1671:3:8",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1661:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1688:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1723:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1734:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1719:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1719:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1743:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1698:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1698:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1688:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1771:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1786:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1800:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1790:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1817:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1852:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1863:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1848:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1848:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1872:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1827:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1827:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "1817:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1900:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1915:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1929:3:8",
                                    "type": "",
                                    "value": "192"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1919:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1946:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1981:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1992:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1977:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1977:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2001:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1956:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1956:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value6",
                                      "nodeType": "YulIdentifier",
                                      "src": "1946:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2029:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2044:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2058:3:8",
                                    "type": "",
                                    "value": "224"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2048:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2075:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2109:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2120:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2105:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2105:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2129:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "2085:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2085:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2075:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2157:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2172:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2186:3:8",
                                    "type": "",
                                    "value": "256"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2176:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2203:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2238:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2249:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2234:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2234:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2258:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2213:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2213:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2203:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2286:116:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2301:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2315:3:8",
                                    "type": "",
                                    "value": "288"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2305:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2332:60:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2364:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2375:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2360:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2360:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2384:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "2342:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2342:50:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value9",
                                      "nodeType": "YulIdentifier",
                                      "src": "2332:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint64t_uint64t_uint256t_uint256t_uint256t_uint64t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "958:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "969:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "981:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "989:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "997:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1005:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1013:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1021:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "1029:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "1037:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "1045:6:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "1053:6:8",
                            "type": ""
                          }
                        ],
                        "src": "847:1562:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2481:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2527:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2536:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2539:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2529:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2529:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2529:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2502:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2511:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2498:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2498:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2523:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2494:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2494:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2491:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2553:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2568:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2582:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2572:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2597:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2632:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2643:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2628:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2628:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2652:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2607:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2607:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2597:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2451:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2462:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2474:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2415:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2748:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2765:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2788:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2770:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2770:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2758:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2758:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2758:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2736:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2743:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2683:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2866:50:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2883:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2903:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "2888:14:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2888:21:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2876:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2876:34:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2876:34:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2854:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2861:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2807:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3000:79:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3017:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3066:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$77_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3022:43:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3022:50:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3010:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3010:63:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3010:63:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2988:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2995:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2922:157:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3175:91:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3192:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3253:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3197:55:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3197:62:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3185:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3185:75:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3185:75:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3163:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3170:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3085:181:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3359:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3376:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3434:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3381:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3381:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3369:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3369:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3347:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3354:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3272:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3540:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3557:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3615:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_MarketFactory_$2816_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3562:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3562:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3550:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3550:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3550:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3528:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3535:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3453:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3714:81:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3731:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3782:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_Market_$2705_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3736:45:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3736:52:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3724:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3724:65:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3724:65:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_Market_$2705_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3702:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3709:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3634:161:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3866:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3883:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3906:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3888:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3888:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3876:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3876:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3876:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3854:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3861:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3801:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3989:65:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4006:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4041:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_uint64_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4011:29:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4011:36:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3999:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3999:49:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3999:49:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3977:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3984:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3925:129:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4158:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4168:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4180:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4191:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4176:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4176:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4168:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4248:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4261:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4272:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4257:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4257:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4204:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4204:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4204:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4130:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4142:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4153:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4060:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4411:149:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4421:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4433:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4444:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4429:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4429:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4421:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4526:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4539:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4550:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4535:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4535:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4457:68:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4457:96:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4457:96:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$326__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4383:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4395:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4406:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4288:272:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4993:1001:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5003:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5015:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5026:3:8",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5011:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5011:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5003:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5106:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5119:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5130:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5115:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5115:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5040:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5040:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5040:93:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5200:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5213:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5224:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5209:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5209:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5143:56:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5143:85:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5143:85:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5304:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5317:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5328:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5313:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5313:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5238:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5238:94:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5238:94:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5385:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5398:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5409:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5394:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5394:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5342:42:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5342:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5342:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5466:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5479:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5490:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5475:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5475:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5423:42:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5423:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5423:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "5549:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5562:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5573:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5558:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5558:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5505:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5505:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5505:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "5632:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5645:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5656:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5641:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5641:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5588:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5588:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5588:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5715:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5728:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5739:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5724:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5724:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5671:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5671:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5671:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5797:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5810:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5821:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5806:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5806:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint64_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5754:42:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5754:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5754:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "5880:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5893:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5904:3:8",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5889:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5889:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5836:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5836:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5836:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5957:7:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5971:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5982:3:8",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5967:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5967:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5919:37:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5919:68:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5919:68:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_MarketFactory_$2816_t_contract$_IERC20_$77_t_contract$_IUniswapV2Pair_$568_t_uint64_t_uint64_t_uint256_t_uint256_t_uint256_t_uint64_t_uint256_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4884:9:8",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "4896:7:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "4905:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "4913:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "4921:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "4929:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "4937:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4945:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4953:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4961:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4969:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4977:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4988:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4566:1428:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6113:139:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6123:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6135:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6146:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6131:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6131:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6123:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6218:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6231:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6242:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6227:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6227:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_Market_$2705_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6159:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6159:86:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6159:86:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_Market_$2705__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6085:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6097:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6108:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6000:252:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6356:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6366:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6378:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6389:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6374:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6374:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6366:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6446:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6459:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6470:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6455:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6455:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6402:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6402:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6402:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6328:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6340:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6351:4:8",
                            "type": ""
                          }
                        ],
                        "src": "6258:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6531:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6541:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6570:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6552:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6552:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6541:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6513:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6523:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6486:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6630:48:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6640:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6665:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6658:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6658:13:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6651:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6651:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6640:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6612:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6622:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6588:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6729:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6739:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6754:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6761:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6750:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6750:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6739:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6711:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6721:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6684:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6861:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6871:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6882:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6871:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6843:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6853:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6816:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6943:57:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6953:41:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6968:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6975:18:8",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6964:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6964:30:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6953:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6925:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6935:7:8",
                            "type": ""
                          }
                        ],
                        "src": "6899:101:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7079:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7089:63:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7146:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7102:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7102:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7089:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7059:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7069:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7006:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7237:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7247:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7278:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7260:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7260:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7247:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7217:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7227:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7164:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7381:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7391:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7460:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7404:55:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7404:62:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7391:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7361:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7371:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7296:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7563:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7573:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7604:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7586:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7586:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7573:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7543:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7553:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7478:138:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7704:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7714:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7780:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7727:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7727:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7714:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7684:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7694:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7622:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7880:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7890:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7921:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7903:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7903:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7890:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7860:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7870:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7798:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8021:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8031:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8097:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_MarketFactory_$2816_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8044:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8044:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8031:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2816_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8001:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8011:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7939:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8197:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8207:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8238:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8220:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8220:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8207:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2816_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8177:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8187:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8115:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8331:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8341:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8400:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_Market_$2705_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8354:45:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8354:52:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8341:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Market_$2705_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8311:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8321:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8256:156:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8493:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8503:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8534:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "8516:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8516:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8503:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Market_$2705_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8473:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8483:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8418:128:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8611:52:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8621:36:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8651:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "8634:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8634:23:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "8621:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint64_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8591:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "8601:9:8",
                            "type": ""
                          }
                        ],
                        "src": "8552:111:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8712:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8769:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8778:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8781:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8771:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8771:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8771:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8735:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8760:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "8742:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8742:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8732:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8732:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8725:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8725:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8722:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8705:5:8",
                            "type": ""
                          }
                        ],
                        "src": "8669:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8837:76:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8891:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8900:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8903:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8893:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8893:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8893:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8860:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8882:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "8867:14:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8867:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8857:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8857:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8850:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8850:40:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8847:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8830:5:8",
                            "type": ""
                          }
                        ],
                        "src": "8797:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8962:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9019:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9028:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9031:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9021:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9021:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9021:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8985:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9010:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "8992:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8992:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8982:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8982:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8975:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8975:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8972:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8955:5:8",
                            "type": ""
                          }
                        ],
                        "src": "8919:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9089:78:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9145:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9154:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9157:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9147:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9147:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9147:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "9112:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9136:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint64",
                                          "nodeType": "YulIdentifier",
                                          "src": "9119:16:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9119:23:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "9109:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9109:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9102:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9102:42:8"
                              },
                              "nodeType": "YulIf",
                              "src": "9099:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9082:5:8",
                            "type": ""
                          }
                        ],
                        "src": "9047:120:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint64t_uint64t_uint256t_uint256t_uint256t_uint64t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9 {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Factory_$326_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MarketFactory_$2816_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Market_$2705_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Market_$2705_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$326__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Factory_$326_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_MarketFactory_$2816_t_contract$_IERC20_$77_t_contract$_IUniswapV2Pair_$568_t_uint64_t_uint64_t_uint256_t_uint256_t_uint256_t_uint64_t_uint256_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_contract$_MarketFactory_$2816_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IUniswapV2Pair_$568_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Market_$2705__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Market_$2705_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$326_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$326_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$568_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2816_to_t_address(value) -> converted {\n        converted := convert_t_contract$_MarketFactory_$2816_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2816_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Market_$2705_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Market_$2705_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Market_$2705_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint64(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806313afc618146200006f57806327fa35c3146200008f57806346a81c0014620000b15780638bdb2afa14620000e75780638da5cb5b14620001095780638e8f294b146200012b575b600080fd5b6200008d600480360381019062000087919062000400565b62000161565b005b62000099620002a0565b604051620000a89190620006cd565b60405180910390f35b620000cf6004803603810190620000c99190620004f0565b620002ad565b604051620000de9190620005b5565b60405180910390f35b620000f1620002ed565b604051620001009190620005d2565b60405180910390f35b6200011362000311565b604051620001229190620005b5565b60405180910390f35b620001496004803603810190620001439190620003d4565b62000337565b604051620001589190620006b0565b60405180910390f35b6000308b8b8b8b8b8b8b8b8b8b6040516200017c906200036a565b620001929b9a99989796959493929190620005ef565b604051809103906000f080158015620001af573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050505050565b6000600280549050905090565b60028181548110620002be57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61570e806200088d83390190565b600081359050620003898162000824565b92915050565b600081359050620003a0816200083e565b92915050565b600081359050620003b78162000858565b92915050565b600081359050620003ce8162000872565b92915050565b600060208284031215620003e757600080fd5b6000620003f78482850162000378565b91505092915050565b6000806000806000806000806000806101408b8d0312156200042157600080fd5b6000620004318d828e0162000378565b9a50506020620004448d828e0162000378565b9950506040620004578d828e01620003bd565b98505060606200046a8d828e01620003bd565b97505060806200047d8d828e01620003a6565b96505060a0620004908d828e01620003a6565b95505060c0620004a38d828e01620003a6565b94505060e0620004b68d828e01620003bd565b935050610100620004ca8d828e01620003a6565b925050610120620004de8d828e016200038f565b9150509295989b9194979a5092959850565b6000602082840312156200050357600080fd5b60006200051384828501620003a6565b91505092915050565b6200052781620006ea565b82525050565b6200053881620006fe565b82525050565b620005498162000748565b82525050565b6200055a8162000770565b82525050565b6200056b8162000798565b82525050565b6200057c81620007c0565b82525050565b6200058d81620007e8565b82525050565b6200059e816200072a565b82525050565b620005af8162000810565b82525050565b6000602082019050620005cc60008301846200051c565b92915050565b6000602082019050620005e960008301846200054f565b92915050565b60006101608201905062000607600083018e62000571565b62000616602083018d6200053e565b62000625604083018c62000560565b62000634606083018b620005a4565b62000643608083018a620005a4565b6200065260a083018962000593565b6200066160c083018862000593565b6200067060e083018762000593565b62000680610100830186620005a4565b6200069061012083018562000593565b620006a06101408301846200052d565b9c9b505050505050505050505050565b6000602082019050620006c7600083018462000582565b92915050565b6000602082019050620006e4600083018462000593565b92915050565b6000620006f7826200070a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600062000755826200075c565b9050919050565b600062000769826200070a565b9050919050565b60006200077d8262000784565b9050919050565b600062000791826200070a565b9050919050565b6000620007a582620007ac565b9050919050565b6000620007b9826200070a565b9050919050565b6000620007cd82620007d4565b9050919050565b6000620007e1826200070a565b9050919050565b6000620007f582620007fc565b9050919050565b600062000809826200070a565b9050919050565b60006200081d8262000734565b9050919050565b6200082f81620006ea565b81146200083b57600080fd5b50565b6200084981620006fe565b81146200085557600080fd5b50565b62000863816200072a565b81146200086f57600080fd5b50565b6200087d8162000734565b81146200088957600080fd5b5056fe6080604052606460025569d3c21bcecceda1000000600c556000600d60006101000a81548160ff0219169083151502179055503480156200003f57600080fd5b506040516200570e3803806200570e833981810160405281019062000065919062000238565b89600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508760008190555086600181905550856007819055508460068190555088600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836005819055508a600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260038190555081600b8190555080600d60006101000a81548160ff021916908315150217905550505050505050505050505062000447565b600081519050620001d681620003c5565b92915050565b600081519050620001ed81620003df565b92915050565b6000815190506200020481620003f9565b92915050565b6000815190506200021b8162000413565b92915050565b60008151905062000232816200042d565b92915050565b60008060008060008060008060008060006101608c8e0312156200025b57600080fd5b60006200026b8e828f016200020a565b9b505060206200027e8e828f01620001dc565b9a50506040620002918e828f01620001f3565b9950506060620002a48e828f0162000221565b9850506080620002b78e828f0162000221565b97505060a0620002ca8e828f0162000221565b96505060c0620002dd8e828f0162000221565b95505060e0620002f08e828f0162000221565b945050610100620003048e828f0162000221565b935050610120620003188e828f0162000221565b9250506101406200032c8e828f01620001c5565b9150509295989b509295989b9093969950565b60006200034c826200039b565b9050919050565b60008115159050919050565b60006200036c826200033f565b9050919050565b600062000380826200033f565b9050919050565b600062000394826200033f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620003d08162000353565b8114620003dc57600080fd5b50565b620003ea816200035f565b8114620003f657600080fd5b50565b620004048162000373565b81146200041057600080fd5b50565b6200041e8162000387565b81146200042a57600080fd5b50565b6200043881620003bb565b81146200044457600080fd5b50565b6152b780620004576000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636f7cb60b1161011a578063a4d246ff116100ad578063c816841b1161007c578063c816841b1461062f578063c84993af1461064d578063da68cf8b1461067d578063ef78d4fd1461069b578063ff5c86b0146106b9576101fb565b8063a4d246ff146105a9578063ae169a50146105d9578063bb15d2dd146105f5578063c45a015514610611576101fb565b80639495833c116100e95780639495833c146105085780639592de181461053857806396b2c6f314610568578063a10340bc14610572576101fb565b80636f7cb60b146104925780637358c57a146104ae5780637e996639146104cc57806389da88a3146104ea576101fb565b806341a8b6f8116101925780635b3ad63e116101615780635b3ad63e146103d257806360f65c6014610402578063659d0ca0146104325780636f1aefc314610462576101fb565b806341a8b6f8146103485780634508477514610378578063499a0fc414610396578063527eb4bc146103b4576101fb565b80633c80d8ea116101ce5780633c80d8ea146102c05780633d09a82a146102dc5780633e16bc20146102fa578063410f07101461032a576101fb565b8063050e8840146102005780630ef192731461023057806314aa5a99146102605780633656d5ee14610290575b600080fd5b61021a60048036038101906102159190614074565b6106d7565b6040516102279190614976565b60405180910390f35b61024a60048036038101906102459190613f6e565b6106fb565b6040516102579190614976565b60405180910390f35b61027a600480360381019061027591906140c6565b610747565b6040516102879190614708565b60405180910390f35b6102aa60048036038101906102a59190614102565b6108e4565b6040516102b79190614976565b60405180910390f35b6102da60048036038101906102d59190614102565b61096f565b005b6102e461123a565b6040516102f19190614976565b60405180910390f35b610314600480360381019061030f91906140c6565b611240565b6040516103219190614976565b60405180910390f35b6103326112a3565b60405161033f9190614976565b60405180910390f35b610362600480360381019061035d9190614074565b6112a9565b60405161036f9190614976565b60405180910390f35b61038061146e565b60405161038d9190614642565b60405180910390f35b61039e611494565b6040516103ab9190614976565b60405180910390f35b6103bc61149a565b6040516103c99190614976565b60405180910390f35b6103ec60048036038101906103e79190614074565b6114a0565b6040516103f99190614976565b60405180910390f35b61041c60048036038101906104179190613fc0565b6114e3565b6040516104299190614976565b60405180910390f35b61044c60048036038101906104479190613f6e565b611514565b60405161045991906146e6565b60405180910390f35b61047c600480360381019061047791906140c6565b611c5e565b604051610489919061495b565b60405180910390f35b6104ac60048036038101906104a79190614074565b611d9b565b005b6104b6611ffa565b6040516104c39190614976565b60405180910390f35b6104d4612000565b6040516104e19190614976565b60405180910390f35b6104f2612006565b6040516104ff9190614976565b60405180910390f35b610522600480360381019061051d9190613f6e565b612013565b60405161052f9190614708565b60405180910390f35b610552600480360381019061054d9190614074565b6120aa565b60405161055f9190614976565b60405180910390f35b6105706120e0565b005b61058c60048036038101906105879190614074565b6124da565b6040516105a0989796959493929190614a1b565b60405180910390f35b6105c360048036038101906105be9190614102565b61252f565b6040516105d09190614976565b60405180910390f35b6105f360048036038101906105ee9190614074565b6125e5565b005b61060f600480360381019061060a9190614102565b6125fa565b005b610619612b7c565b6040516106269190614760565b60405180910390f35b610637612ba2565b6040516106449190614745565b60405180910390f35b61066760048036038101906106629190614074565b612bc8565b6040516106749190614976565b60405180910390f35b610685612be8565b604051610692919061472a565b60405180910390f35b6106a3612c0e565b6040516106b09190614976565b60405180910390f35b6106c1612c14565b6040516106ce9190614976565b60405180910390f35b601081815481106106e757600080fd5b906000526020600020016000915090505481565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b606060008267ffffffffffffffff81111561078b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156107b95781602001602082028036833780820191505090505b50905060005b8381116108d9576000816000546107d69190614bd4565b866107e19190614b1c565b90506000600281111561081d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060070160009054906101000a900460ff166002811115610879577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108c557808383815181106108b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b5080806108d190614e6b565b9150506107bf565b508091505092915050565b6000806108f0856114a0565b905060006108fd856120aa565b9050600061093583600e6000868152602001908152602001600020600901600085815260200190815260200160002060030154612c1a565b905060006109438487612c1a565b90508082106109555760009450610964565b81816109619190614c2e565b94505b505050509392505050565b806000620186a0600754836109849190614bd4565b61098e9190614ba3565b9050600b548110156109d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cc9061483b565b60405180910390fd5b60006109e086612ce7565b905060006109ee8287612e97565b90506109f9426114a0565b821015610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a32906147bb565b60405180910390fd5b600e6000838152602001908152602001600020600901600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb9061487b565b60405180910390fd5b6000610b008387612c1a565b905080600e6000858152602001908152602001600020600901600084815260200190815260200160002060030154610b389190614b1c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610b9592919061465d565b60206040518083038186803b158015610bad57600080fd5b505afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be5919061409d565b1015610c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1d9061489b565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084600e6000898152602001908152602001600020600901600088815260200190815260200160002060030154610c9c9190614b1c565b6040518463ffffffff1660e01b8152600401610cba93929190614686565b602060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190613ffc565b5080600e600085815260200190815260200160002060030154610d2f9190614b1c565b600e60008581526020019081526020016000206003018190555060016002811115610d83577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000858152602001908152602001600020600901600084815260200190815260200160002060040160009054906101000a900460ff166002811115610df3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610fa2576000610e2f84600e6000878152602001908152602001600020600901600086815260200190815260200160002060030154612c1a565b9050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600e6000878152602001908152602001600020600901600086815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e600088815260200190815260200160002060090160008781526020019081526020016000206003015484610ef09190614b1c565b6040518363ffffffff1660e01b8152600401610f0d9291906146bd565b602060405180830381600087803b158015610f2757600080fd5b505af1158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f9190613ffc565b5080600e600086815260200190815260200160002060030154610f829190614c2e565b600e6000868152602001908152602001600020600301819055505061101c565b6001600e6000858152602001908152602001600020600901600084815260200190815260200160002060040160006101000a81548160ff02191690836002811115611016577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b33600e6000858152602001908152602001600020600901600084815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600e6000858152602001908152602001600020600901600084815260200190815260200160002060030181905550600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150506001900390600052602060002001600090919091909150556111226120e0565b7f0e6a0e14a3e5e37f98ac3964d96ce45521656b05ddf148d5eebd48c38675d6d783600e600086815260200190815260200160002060010154600e600087815260200190815260200160002060020154600e600088815260200190815260200160002060050154600e600089815260200190815260200160002060060154600e60008a8152602001908152602001600020600301546040516111c9969594939291906149ba565b60405180910390a17f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d83600e60008681526020019081526020016000206009016000858152602001908152602001600020604051611228929190614991565b60405180910390a15050505050505050565b600b5481565b6000600e60008481526020019081526020016000206008018281548110611290577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b60065481565b6000816000600e6000838152602001908152602001600020600501541115806112e957506000600e60008381526020019081526020016000206006015411155b15611329576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611320906147fb565b60405180910390fd5b600e600082815260200190815260200160002060060154600e6000838152602001908152602001600020600501541415611398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138f906147fb565b60405180910390fd5b6000600e600085815260200190815260200160002060010154600e6000868152602001908152602001600020600201546113d29190614c2e565b9050604051806020016040528082600e600088815260200190815260200160002060050154600e6000898152602001908152602001600020600601546114189190614c2e565b6114229190614ba3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692505050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60025481565b600060015482116114b55760015490506114de565b600054600154836114c69190614c2e565b6114d09190614eb4565b826114db9190614c2e565b90505b919050565b600f60205281600052604060002081815481106114ff57600080fd5b90600052602060002001600091509150505481565b60606000611521426114a0565b90506107d067ffffffffffffffff811115611565577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561159e57816020015b61158b613e2d565b8152602001906001900390816115835790505b5091506115a9613e2d565b60008080600190505b6064811161191a57603281106115ee576032816115cf9190614c2e565b6000546115dc9190614bd4565b856115e79190614b1c565b915061160a565b806000546115fc9190614bd4565b856116079190614c2e565b91505b60016002811115611644577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600084815260200190815260200160002060070160009054906101000a900460ff1660028111156116a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156119075760005b600e60008481526020019081526020016000206008018054905081101561190557600e60008481526020019081526020016000206009016000600e60008681526020019081526020016000206008018381548110611730577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611813577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561184b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505094508773ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff1614156118f257848785815181106118c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525083806118d990614e6b565b9450506107d08414156118f157505050505050611c59565b5b80806118fd90614e6b565b9150506116a9565b505b808061191290614e6b565b9150506115b2565b506000600190505b60318111611c5357806000546119389190614bd4565b856119439190614c2e565b915060028081111561197e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600084815260200190815260200160002060070160009054906101000a900460ff1660028111156119da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611c405760005b600e600084815260200190815260200160002060080180549050811015611c3e57600e60008481526020019081526020016000206009016000600e60008681526020019081526020016000206008018381548110611a6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611b4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611b85577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505094508773ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff161415611c2b5784878581518110611bfd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508380611c1390614e6b565b9450506107d08410611c2a57505050505050611c59565b5b8080611c3690614e6b565b9150506119e3565b505b8080611c4b90614e6b565b915050611922565b50505050505b919050565b611c66613e2d565b600e600084815260200190815260200160002060090160008381526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff166002811115611d57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611d8f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e0357600080fd5b505afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b9190613f97565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9f9061479b565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611f4e57600080fd5b505afa158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f869190613f97565b836040518363ffffffff1660e01b8152600401611fa49291906146bd565b602060405180830381600087803b158015611fbe57600080fd5b505af1158015611fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff69190613ffc565b5050565b60015481565b60075481565b6000601080549050905090565b6060600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561209e57602002820191906000526020600020905b81548152602001906001019080831161208a575b50505050509050919050565b60008082116120bd5760055490506120db565b600554600554836120ce9190614ba3565b6120d89190614bd4565b90505b919050565b60006120eb426114a0565b90506000600354600054836121009190614b1c565b61210a9190614c2e565b42101561230157600d60009054906101000a900460ff161561221357612151600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613003565b8063ffffffff169050600e60008681526020019081526020016000206005016000600e60008881526020019081526020016000206001016000849190505583955084919050555050506121c5600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613003565b8063ffffffff169050600e60008681526020019081526020016000206006016000600e60008881526020019081526020016000206002016000849190505583955084919050555050506122fc565b61223e600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613003565b8063ffffffff169050600e60008681526020019081526020016000206005016000600e60008881526020019081526020016000206001016000849190505583919050558293505050506122b2600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613003565b8063ffffffff169050600e60008681526020019081526020016000206006016000600e60008881526020019081526020016000206002016000849190505583919050558293505050505b612427565b600354600054836123129190614b1c565b61231c9190614c2e565b421061242657600d60009054906101000a900460ff16156123b057612362600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613003565b8063ffffffff169050600e60008681526020019081526020016000206006016000600e6000888152602001908152602001600020600201600084919050558395508491905055505050612425565b6123db600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613003565b8063ffffffff169050600e60008681526020019081526020016000206006016000600e60008881526020019081526020016000206002016000849190505583919050558293505050505b5b5b7f0e6a0e14a3e5e37f98ac3964d96ce45521656b05ddf148d5eebd48c38675d6d782600e600085815260200190815260200160002060010154600e600086815260200190815260200160002060020154600e600087815260200190815260200160002060050154600e600088815260200190815260200160002060060154600e6000898152602001908152602001600020600301546040516124ce969594939291906149ba565b60405180910390a15050565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16905088565b60008061253b856114a0565b9050612546426114a0565b811015612588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257f9061485b565b60405180910390fd5b6000612593856120aa565b905060006125a18386612c1a565b905080600e60008581526020019081526020016000206009016000848152602001908152602001600020600301546125d99190614b1c565b93505050509392505050565b6125ee8161325e565b6125f781613871565b50565b806000620186a06007548361260f9190614bd4565b6126199190614ba3565b9050600b54811015612660576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126579061483b565b60405180910390fd5b600061266b86612ce7565b905060006126798287612e97565b90503373ffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600901600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272a906147db565b60405180910390fd5b61273c426114a0565b82101561277e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127759061491b565b60405180910390fd5b600061278a8387612c1a565b905060006127c284600e6000878152602001908152602001600020600901600086815260200190815260200160002060030154612c1a565b9050808211156129cf5780826127d89190614c2e565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161283592919061465d565b60206040518083038186803b15801561284d57600080fd5b505afa158015612861573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612885919061409d565b10156128c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128bd9061489b565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084866129129190614c2e565b6040518463ffffffff1660e01b815260040161293093929190614686565b602060405180830381600087803b15801561294a57600080fd5b505af115801561295e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129829190613ffc565b50808261298f9190614c2e565b600e6000868152602001908152602001600020600301546129b09190614b1c565b600e600086815260200190815260200160002060030181905550612adb565b80821015612ada57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338484612a229190614c2e565b6040518363ffffffff1660e01b8152600401612a3f9291906146bd565b602060405180830381600087803b158015612a5957600080fd5b505af1158015612a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a919190613ffc565b508181612a9e9190614c2e565b600e600086815260200190815260200160002060030154612abf9190614c2e565b600e6000868152602001908152602001600020600301819055505b5b86600e6000868152602001908152602001600020600901600085815260200190815260200160002060030181905550612b126120e0565b7f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d84600e60008781526020019081526020016000206009016000868152602001908152602001600020604051612b69929190614991565b60405180910390a1505050505050505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600e6000838152602001908152602001600020600301549050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60035481565b60008042600054612c2a426114a0565b612c349190614b1c565b612c3e9190614c2e565b90506000805482600c54612c529190614bd4565b612c5c9190614ba3565b90506000612c6986613cf9565b905080620186a060075487612c7e9190614bd4565b612c889190614ba3565b612c929190614bd4565b93506000620186a060075487612ca89190614bd4565b612cb29190614ba3565b9050600c548382612cc39190614bd4565b612ccd9190614ba3565b90508085612cdb9190614b1c565b94505050505092915050565b600080612cf3836114a0565b905060006002811115612d2f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060070160009054906101000a900460ff166002811115612d8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14612d995780915050612e92565b612da2426114a0565b811015612de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ddb906148db565b60405180910390fd5b80600e6000838152602001908152602001600020600001819055506001600e600083815260200190815260200160002060070160006101000a81548160ff02191690836002811115612e5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506010819080600181540180825580915050600190039060005260206000200160009091909190915055809150505b919050565b600080612ea3836120aa565b905060006002811115612edf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000868152602001908152602001600020600901600083815260200190815260200160002060040160009054906101000a900460ff166002811115612f4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14612f5d5780915050612ffd565b83600e600086815260200190815260200160002060090160008381526020019081526020016000206000018190555080600e6000868152602001908152602001600020600901600083815260200190815260200160002060010181905550600e6000858152602001908152602001600020600801819080600181540180825580915050600190039060005260206000200160009091909190915055809150505b92915050565b6000806000613010613d35565b90508373ffffffffffffffffffffffffffffffffffffffff16635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b15801561305857600080fd5b505afa15801561306c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613090919061409d565b92508373ffffffffffffffffffffffffffffffffffffffff16635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b1580156130d857600080fd5b505afa1580156130ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613110919061409d565b915060008060008673ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561315d57600080fd5b505afa158015613171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131959190614025565b9250925092508363ffffffff168163ffffffff161461325457600081856131bc9190614c62565b90508063ffffffff166131cf8486613d4d565b600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166131fb9190614bd4565b876132069190614b1c565b96508063ffffffff166132198585613d4d565b600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166132459190614bd4565b866132509190614b1c565b9550505b5050509193909250565b806000600e60008381526020019081526020016000206005015411158061329c57506000600e60008381526020019081526020016000206006015411155b156132dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132d3906147fb565b60405180910390fd5b600e600082815260200190815260200160002060060154600e600083815260200190815260200160002060050154141561334b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613342906147fb565b60405180910390fd5b426000548361335a9190614b1c565b111561339b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133929061477b565b60405180910390fd5b6002600e600084815260200190815260200160002060070160006101000a81548160ff021916908360028111156133fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600e600084815260200190815260200160002060010154600e60008581526020019081526020016000206002015461343a9190614c2e565b9050604051806020016040528082600e600087815260200190815260200160002060050154600e6000888152602001908152602001600020600601546134809190614c2e565b61348a9190614ba3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250600001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600e6000858152602001908152602001600020600401819055506000620186a0600654600e6000878152602001908152602001600020600301546135119190614bd4565b61351b9190614ba3565b90506000620186a0600254600e6000888152602001908152602001600020600301546135479190614bd4565b6135519190614ba3565b90508082600e6000888152602001908152602001600020600301546135769190614c2e565b6135809190614c2e565b600e600087815260200190815260200160002060030181905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016136199291906146bd565b602060405180830381600087803b15801561363357600080fd5b505af1158015613647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061366b9190613ffc565b50600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561371257600080fd5b505afa158015613726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061374a9190613f97565b836040518363ffffffff1660e01b81526004016137689291906146bd565b602060405180830381600087803b15801561378257600080fd5b505af1158015613796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137ba9190613ffc565b507f0e6a0e14a3e5e37f98ac3964d96ce45521656b05ddf148d5eebd48c38675d6d785600e600088815260200190815260200160002060010154600e600089815260200190815260200160002060020154600e60008a815260200190815260200160002060050154600e60008b815260200190815260200160002060060154600e60008c815260200190815260200160002060030154604051613862969594939291906149ba565b60405180910390a15050505050565b6002808111156138aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e600083815260200190815260200160002060070160009054906101000a900460ff166002811115613906577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14613946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161393d906148bb565b60405180910390fd5b6000613967600e6000848152602001908152602001600020600401546120aa565b90506002808111156139a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e6000848152602001908152602001600020600901600083815260200190815260200160002060040160009054906101000a900460ff166002811115613a12577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415613a53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613a4a9061481b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e6000848152602001908152602001600020600901600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b04906148fb565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600e6000858152602001908152602001600020600901600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e6000868152602001908152602001600020600301546040518363ffffffff1660e01b8152600401613bca9291906146bd565b602060405180830381600087803b158015613be457600080fd5b505af1158015613bf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c1c9190613ffc565b506002600e6000848152602001908152602001600020600901600083815260200190815260200160002060040160006101000a81548160ff02191690836002811115613c91577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f74c5c6f5cd4370cc0ab554a1afdb2b24b051b40c99102354ef424aed5cd6409d82600e60008581526020019081526020016000206009016000848152602001908152602001600020604051613ced929190614991565b60405180910390a15050565b6000613d04426114a0565b821415613d145760009050613d30565b6000544283613d239190614c2e565b613d2d9190614ba3565b90505b919050565b600064010000000042613d489190614eb4565b905090565b613d55613eaa565b6000826dffffffffffffffffffffffffffff1611613da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613d9f9061493b565b60405180910390fd5b6040518060200160405280836dffffffffffffffffffffffffffff16607060ff16866dffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16901b613e049190614b72565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250905092915050565b6040518060a001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160006002811115613ea4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b604051806020016040528060007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050613eea8161520e565b92915050565b600081519050613eff8161520e565b92915050565b600081519050613f1481615225565b92915050565b600081519050613f298161523c565b92915050565b600081359050613f3e81615253565b92915050565b600081519050613f5381615253565b92915050565b600081519050613f688161526a565b92915050565b600060208284031215613f8057600080fd5b6000613f8e84828501613edb565b91505092915050565b600060208284031215613fa957600080fd5b6000613fb784828501613ef0565b91505092915050565b60008060408385031215613fd357600080fd5b6000613fe185828601613edb565b9250506020613ff285828601613f2f565b9150509250929050565b60006020828403121561400e57600080fd5b600061401c84828501613f05565b91505092915050565b60008060006060848603121561403a57600080fd5b600061404886828701613f1a565b935050602061405986828701613f1a565b925050604061406a86828701613f59565b9150509250925092565b60006020828403121561408657600080fd5b600061409484828501613f2f565b91505092915050565b6000602082840312156140af57600080fd5b60006140bd84828501613f44565b91505092915050565b600080604083850312156140d957600080fd5b60006140e785828601613f2f565b92505060206140f885828601613f2f565b9150509250929050565b60008060006060848603121561411757600080fd5b600061412586828701613f2f565b935050602061413686828701613f2f565b925050604061414786828701613f2f565b9150509250925092565b600061415d83836144b3565b60a08301905092915050565b60006141758383614624565b60208301905092915050565b61418a81614ccd565b82525050565b61419981614ccd565b82525050565b60006141aa82614ab9565b6141b48185614ae9565b93506141bf83614a99565b8060005b838110156141f05781516141d78882614151565b97506141e283614acf565b9250506001810190506141c3565b5085935050505092915050565b600061420882614ac4565b6142128185614afa565b935061421d83614aa9565b8060005b8381101561424e5781516142358882614169565b975061424083614adc565b925050600181019050614221565b5085935050505092915050565b61426481614d8d565b82525050565b61427381614db1565b82525050565b61428281614dd5565b82525050565b61429181614df9565b82525050565b6142a081614e0b565b82525050565b60006142b3601a83614b0b565b91506142be82614f7f565b602082019050919050565b60006142d6601583614b0b565b91506142e182614fa8565b602082019050919050565b60006142f9600b83614b0b565b915061430482614fd1565b602082019050919050565b600061431c600d83614b0b565b915061432782614ffa565b602082019050919050565b600061433f601383614b0b565b915061434a82615023565b602082019050919050565b6000614362601383614b0b565b915061436d8261504c565b602082019050919050565b6000614385601083614b0b565b915061439082615075565b602082019050919050565b60006143a8601b83614b0b565b91506143b38261509e565b602082019050919050565b60006143cb600d83614b0b565b91506143d6826150c7565b602082019050919050565b60006143ee601983614b0b565b91506143f9826150f0565b602082019050919050565b6000614411601083614b0b565b915061441c82615119565b602082019050919050565b6000614434600d83614b0b565b915061443f82615142565b602082019050919050565b6000614457600983614b0b565b91506144628261516b565b602082019050919050565b600061447a601183614b0b565b915061448582615194565b602082019050919050565b600061449d601783614b0b565b91506144a8826151bd565b602082019050919050565b60a0820160008201516144c96000850182614624565b5060208201516144dc6020850182614624565b5060408201516144ef6040850182614181565b5060608201516145026060850182614624565b5060808201516145156080850182614297565b50505050565b60a0820160008201516145316000850182614624565b5060208201516145446020850182614624565b5060408201516145576040850182614181565b50606082015161456a6060850182614624565b50608082015161457d6080850182614297565b50505050565b60a08201600080830154905061459881614e51565b6145a56000860182614624565b50600183015490506145b681614e51565b6145c36020860182614624565b50600283015490506145d481614e1d565b6145e16040860182614181565b50600383015490506145f281614e51565b6145ff6060860182614624565b506004830154905061461081614e37565b61461d6080860182614297565b5050505050565b61462d81614d73565b82525050565b61463c81614d73565b82525050565b60006020820190506146576000830184614190565b92915050565b60006040820190506146726000830185614190565b61467f6020830184614190565b9392505050565b600060608201905061469b6000830186614190565b6146a86020830185614190565b6146b56040830184614633565b949350505050565b60006040820190506146d26000830185614190565b6146df6020830184614633565b9392505050565b60006020820190508181036000830152614700818461419f565b905092915050565b6000602082019050818103600083015261472281846141fd565b905092915050565b600060208201905061473f600083018461425b565b92915050565b600060208201905061475a600083018461426a565b92915050565b60006020820190506147756000830184614279565b92915050565b60006020820190508181036000830152614794816142a6565b9050919050565b600060208201905081810360008301526147b4816142c9565b9050919050565b600060208201905081810360008301526147d4816142ec565b9050919050565b600060208201905081810360008301526147f48161430f565b9050919050565b6000602082019050818103600083015261481481614332565b9050919050565b6000602082019050818103600083015261483481614355565b9050919050565b6000602082019050818103600083015261485481614378565b9050919050565b600060208201905081810360008301526148748161439b565b9050919050565b60006020820190508181036000830152614894816143be565b9050919050565b600060208201905081810360008301526148b4816143e1565b9050919050565b600060208201905081810360008301526148d481614404565b9050919050565b600060208201905081810360008301526148f481614427565b9050919050565b600060208201905081810360008301526149148161444a565b9050919050565b600060208201905081810360008301526149348161446d565b9050919050565b6000602082019050818103600083015261495481614490565b9050919050565b600060a082019050614970600083018461451b565b92915050565b600060208201905061498b6000830184614633565b92915050565b600060c0820190506149a66000830185614633565b6149b36020830184614583565b9392505050565b600060c0820190506149cf6000830189614633565b6149dc6020830188614633565b6149e96040830187614633565b6149f66060830186614633565b614a036080830185614633565b614a1060a0830184614633565b979650505050505050565b600061010082019050614a31600083018b614633565b614a3e602083018a614633565b614a4b6040830189614633565b614a586060830188614633565b614a656080830187614633565b614a7260a0830186614633565b614a7f60c0830185614633565b614a8c60e0830184614288565b9998505050505050505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000614b2782614d73565b9150614b3283614d73565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115614b6757614b66614ee5565b5b828201905092915050565b6000614b7d82614d4b565b9150614b8883614d4b565b925082614b9857614b97614f14565b5b828204905092915050565b6000614bae82614d73565b9150614bb983614d73565b925082614bc957614bc8614f14565b5b828204905092915050565b6000614bdf82614d73565b9150614bea83614d73565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614c2357614c22614ee5565b5b828202905092915050565b6000614c3982614d73565b9150614c4483614d73565b925082821015614c5757614c56614ee5565b5b828203905092915050565b6000614c6d82614d7d565b9150614c7883614d7d565b925082821015614c8b57614c8a614ee5565b5b828203905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b6000819050919050565b6000614cd882614d2b565b9050919050565b60008115159050919050565b6000819050614cf9826151e6565b919050565b6000819050614d0c826151fa565b919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b6000614d9882614d9f565b9050919050565b6000614daa82614d2b565b9050919050565b6000614dbc82614dc3565b9050919050565b6000614dce82614d2b565b9050919050565b6000614de082614de7565b9050919050565b6000614df282614d2b565b9050919050565b6000614e0482614ceb565b9050919050565b6000614e1682614cfe565b9050919050565b6000614e30614e2b83614f72565b614c96565b9050919050565b6000614e4a614e4583614f72565b614cb6565b9050919050565b6000614e64614e5f83614f72565b614cc3565b9050919050565b6000614e7682614d73565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614ea957614ea8614ee5565b5b600182019050919050565b6000614ebf82614d73565b9150614eca83614d73565b925082614eda57614ed9614f14565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160001c9050919050565b7f4652414d4520454e442054494d45204e4f542052454143484544000000000000600082015250565b7f4e4f542054484520464143544f5259204f574e45520000000000000000000000600082015250565b7f4c4f5420494e2050415354000000000000000000000000000000000000000000600082015250565b7f4e4f54204c4f54204f574e455200000000000000000000000000000000000000600082015250565b7f494e56414c4944204652414d4520505249434500000000000000000000000000600082015250565b7f4c4f5420414c524541445920534554544c454400000000000000000000000000600082015250565b7f505249434520495320544f4f204c4f5700000000000000000000000000000000600082015250565b7f54484953204c4f5420495320494e20412050415354204652414d450000000000600082015250565b7f414c5245414459204f574e455200000000000000000000000000000000000000600082015250565b7f415050524f56454420414d4f554e5420544f4f20534d414c4c00000000000000600082015250565b7f4652414d45204e4f5420434c4f53454400000000000000000000000000000000600082015250565b7f4652414d4520494e205041535400000000000000000000000000000000000000600082015250565b7f4e4f204f574e4552530000000000000000000000000000000000000000000000600082015250565b7f4c4f5420494e2050415354204652414d45000000000000000000000000000000600082015250565b7f4669786564506f696e743a204449565f42595f5a45524f000000000000000000600082015250565b600381106151f7576151f6614f43565b5b50565b6003811061520b5761520a614f43565b5b50565b61521781614ccd565b811461522257600080fd5b50565b61522e81614cdf565b811461523957600080fd5b50565b61524581614d11565b811461525057600080fd5b50565b61525c81614d73565b811461526757600080fd5b50565b61527381614d7d565b811461527e57600080fd5b5056fea264697066735822122097c59917318695b6b51626cd12b8c95687748ef885a16ba97f3a37141f1cee5764736f6c63430008040033a2646970667358221220f4b0088fe9dd6b2caaddda93be03e226a9b829a8457cc55d70ea005d64cc657264736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AFC618 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x27FA35C3 EQ PUSH3 0x8F JUMPI DUP1 PUSH4 0x46A81C00 EQ PUSH3 0xB1 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x8E8F294B EQ PUSH3 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x400 JUMP JUMPDEST PUSH3 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x99 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0x4F0 JUMP JUMPDEST PUSH3 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF1 PUSH3 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x143 SWAP2 SWAP1 PUSH3 0x3D4 JUMP JUMPDEST PUSH3 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x158 SWAP2 SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH3 0x17C SWAP1 PUSH3 0x36A JUMP JUMPDEST PUSH3 0x192 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x570E DUP1 PUSH3 0x88D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x389 DUP2 PUSH3 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3A0 DUP2 PUSH3 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3B7 DUP2 PUSH3 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x3CE DUP2 PUSH3 0x872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3F7 DUP5 DUP3 DUP6 ADD PUSH3 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x431 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH3 0x444 DUP14 DUP3 DUP15 ADD PUSH3 0x378 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x457 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x46A DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x47D DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x490 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x4A3 DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x4B6 DUP14 DUP3 DUP15 ADD PUSH3 0x3BD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x4CA DUP14 DUP3 DUP15 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x4DE DUP14 DUP3 DUP15 ADD PUSH3 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x513 DUP5 DUP3 DUP6 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x527 DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x538 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x549 DUP2 PUSH3 0x748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x55A DUP2 PUSH3 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x56B DUP2 PUSH3 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x57C DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x58D DUP2 PUSH3 0x7E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x59E DUP2 PUSH3 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x5AF DUP2 PUSH3 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x54F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH3 0x607 PUSH1 0x0 DUP4 ADD DUP15 PUSH3 0x571 JUMP JUMPDEST PUSH3 0x616 PUSH1 0x20 DUP4 ADD DUP14 PUSH3 0x53E JUMP JUMPDEST PUSH3 0x625 PUSH1 0x40 DUP4 ADD DUP13 PUSH3 0x560 JUMP JUMPDEST PUSH3 0x634 PUSH1 0x60 DUP4 ADD DUP12 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x643 PUSH1 0x80 DUP4 ADD DUP11 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x652 PUSH1 0xA0 DUP4 ADD DUP10 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x661 PUSH1 0xC0 DUP4 ADD DUP9 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x670 PUSH1 0xE0 DUP4 ADD DUP8 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x680 PUSH2 0x100 DUP4 ADD DUP7 PUSH3 0x5A4 JUMP JUMPDEST PUSH3 0x690 PUSH2 0x120 DUP4 ADD DUP6 PUSH3 0x593 JUMP JUMPDEST PUSH3 0x6A0 PUSH2 0x140 DUP4 ADD DUP5 PUSH3 0x52D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F7 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x755 DUP3 PUSH3 0x75C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x769 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x77D DUP3 PUSH3 0x784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x791 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A5 DUP3 PUSH3 0x7AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B9 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CD DUP3 PUSH3 0x7D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7E1 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F5 DUP3 PUSH3 0x7FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x809 DUP3 PUSH3 0x70A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x81D DUP3 PUSH3 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82F DUP2 PUSH3 0x6EA JUMP JUMPDEST DUP2 EQ PUSH3 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x849 DUP2 PUSH3 0x6FE JUMP JUMPDEST DUP2 EQ PUSH3 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x863 DUP2 PUSH3 0x72A JUMP JUMPDEST DUP2 EQ PUSH3 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x87D DUP2 PUSH3 0x734 JUMP JUMPDEST DUP2 EQ PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xC SSTORE PUSH1 0x0 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x570E CODESIZE SUB DUP1 PUSH3 0x570E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST DUP10 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x204 DUP2 PUSH3 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21B DUP2 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x42D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP15 DUP3 DUP16 ADD PUSH3 0x20A JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH3 0x27E DUP15 DUP3 DUP16 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH3 0x291 DUP15 DUP3 DUP16 ADD PUSH3 0x1F3 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH3 0x2A4 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH3 0x2B7 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH3 0x2CA DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH3 0x2DD DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH3 0x2F0 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH3 0x304 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 PUSH3 0x318 DUP15 DUP3 DUP16 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x140 PUSH3 0x32C DUP15 DUP3 DUP16 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34C DUP3 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36C DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x380 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x394 DUP3 PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D0 DUP2 PUSH3 0x353 JUMP JUMPDEST DUP2 EQ PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA DUP2 PUSH3 0x35F JUMP JUMPDEST DUP2 EQ PUSH3 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x404 DUP2 PUSH3 0x373 JUMP JUMPDEST DUP2 EQ PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x387 JUMP JUMPDEST DUP2 EQ PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x438 DUP2 PUSH3 0x3BB JUMP JUMPDEST DUP2 EQ PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x52B7 DUP1 PUSH3 0x457 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F7CB60B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA4D246FF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x6B9 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x611 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x9495833C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9495833C EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x9592DE18 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x96B2C6F3 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x572 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4EA JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x60F65C60 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x659D0CA0 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x462 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x41A8B6F8 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x45084775 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x3B4 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x32A JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xEF19273 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x14AA5A99 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x3656D5EE EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x3FC0 JUMP JUMPDEST PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x46E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x40C6 JUMP JUMPDEST PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x495B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x1D9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B6 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH2 0x2000 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x3F6E JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH2 0x20E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x252F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x25E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x25FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x619 PUSH2 0x2B7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x4760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x4745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x4074 JUMP JUMPDEST PUSH2 0x2BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x685 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x472A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A3 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 GT PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x81D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x879 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x8C5 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8B8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8D1 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7BF JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F0 DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FD DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x935 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x943 DUP5 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x955 JUMPI PUSH1 0x0 SWAP5 POP PUSH2 0x964 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9E0 DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9EE DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F9 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x487B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB00 DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC9C SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDF3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 PUSH2 0xE2F DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1122 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11C9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1228 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1290 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x12E9 JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138F SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 GT PUSH2 0x14B5 JUMPI PUSH1 0x1 SLOAD SWAP1 POP PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0x14C6 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST DUP3 PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1521 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1565 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x159E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x158B PUSH2 0x3E2D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1583 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x15A9 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT PUSH2 0x191A JUMPI PUSH1 0x32 DUP2 LT PUSH2 0x15EE JUMPI PUSH1 0x32 DUP2 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x15E7 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x160A JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1644 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16A0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1907 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1905 JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1730 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1813 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18F2 JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x18D9 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 EQ ISZERO PUSH2 0x18F1 JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x18FD SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16A9 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1912 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x31 DUP2 GT PUSH2 0x1C53 JUMPI DUP1 PUSH1 0x0 SLOAD PUSH2 0x1938 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP6 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1C40 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C3E JUMPI PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B85 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP5 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C2B JUMPI DUP5 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1BFD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0x1C13 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x7D0 DUP5 LT PUSH2 0x1C2A JUMPI POP POP POP POP POP POP PUSH2 0x1C59 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1C36 SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19E3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0x1C4B SWAP1 PUSH2 0x4E6B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1922 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C66 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3B SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9F SWAP1 PUSH2 0x479B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F86 SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA4 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x209E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x208A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x20BD JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x20CE SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x20D8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2100 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x210A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2301 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2213 JUMPI PUSH2 0x2151 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x21C5 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x223E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP PUSH2 0x22B2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD DUP4 PUSH2 0x2312 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x2426 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x2362 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP6 POP DUP5 SWAP2 SWAP1 POP SSTORE POP POP POP PUSH2 0x2425 JUMP JUMPDEST PUSH2 0x23DB PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3003 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP5 SWAP2 SWAP1 POP SSTORE DUP4 SWAP2 SWAP1 POP SSTORE DUP3 SWAP4 POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x24CE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x253B DUP6 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2546 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257F SWAP1 PUSH2 0x485B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2593 DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A1 DUP4 DUP7 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x25D9 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25EE DUP2 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x3871 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2619 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2657 SWAP1 PUSH2 0x483B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x266B DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2679 DUP3 DUP8 PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272A SWAP1 PUSH2 0x47DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x273C TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x277E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2775 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x278A DUP4 DUP8 PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27C2 DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2C1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29CF JUMPI DUP1 DUP3 PUSH2 0x27D8 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2835 SWAP3 SWAP2 SWAP1 PUSH2 0x465D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2861 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2885 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST LT ISZERO PUSH2 0x28C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28BD SWAP1 PUSH2 0x489B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x2912 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2930 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4686 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x295E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2982 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x298F SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x29B0 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2ADB JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2ADA JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x2A22 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3F SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A91 SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x2A9E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2ABF SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B12 PUSH2 0x20E0 JUMP JUMPDEST PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP5 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x0 SLOAD PUSH2 0x2C2A TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x2C34 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST PUSH2 0x2C3E SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2C52 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C5C SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C69 DUP7 PUSH2 0x3CF9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2C88 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH2 0x2C92 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD DUP8 PUSH2 0x2CA8 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CB2 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x2CC3 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x2CCD SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2CDB SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CF3 DUP4 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D2F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D8B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2D99 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x2DA2 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DDB SWAP1 PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2E5F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA3 DUP4 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EDF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2F4F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2F5D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2FFD JUMP JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3010 PUSH2 0x3D35 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5909C0D5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x306C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3090 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP3 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5A3D5493 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3110 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x315D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3195 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ PUSH2 0x3254 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x31BC SWAP2 SWAP1 PUSH2 0x4C62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x31CF DUP5 DUP7 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP8 PUSH2 0x3206 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP7 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3219 DUP6 DUP6 PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3245 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST DUP7 PUSH2 0x3250 SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO DUP1 PUSH2 0x329C JUMPI POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x32DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D3 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x334B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3342 SWAP1 PUSH2 0x47FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x0 SLOAD DUP4 PUSH2 0x335A SWAP2 SWAP1 PUSH2 0x4B1C JUMP JUMPDEST GT ISZERO PUSH2 0x339B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3392 SWAP1 PUSH2 0x477B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x343A SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x3480 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x348A SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3511 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x351B SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x2 SLOAD PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3547 SWAP2 SWAP1 PUSH2 0x4BD4 JUMP JUMPDEST PUSH2 0x3551 SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3576 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3580 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3619 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3647 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x366B SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x374A SWAP2 SWAP1 PUSH2 0x3F97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3768 SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37BA SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH32 0xE6A0E14A3E5E37F98AC3964D96CE45521656B05DDF148D5EEBD48C38675D6D7 DUP6 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x3862 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x38AA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3906 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x3946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393D SWAP1 PUSH2 0x48BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3967 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3A12 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x3A53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4A SWAP1 PUSH2 0x481B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B04 SWAP1 PUSH2 0x48FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BCA SWAP3 SWAP2 SWAP1 PUSH2 0x46BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C1C SWAP2 SWAP1 PUSH2 0x3FFC JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C91 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x74C5C6F5CD4370CC0AB554A1AFDB2B24B051B40C99102354EF424AED5CD6409D DUP3 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3CED SWAP3 SWAP2 SWAP1 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D04 TIMESTAMP PUSH2 0x14A0 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x3D14 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3D30 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP DUP4 PUSH2 0x3D23 SWAP2 SWAP1 PUSH2 0x4C2E JUMP JUMPDEST PUSH2 0x3D2D SWAP2 SWAP1 PUSH2 0x4BA3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP PUSH2 0x3D48 SWAP2 SWAP1 PUSH2 0x4EB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D55 PUSH2 0x3EAA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3DA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9F SWAP1 PUSH2 0x493B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x70 PUSH1 0xFF AND DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL PUSH2 0x3E04 SWAP2 SWAP1 PUSH2 0x4B72 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3EA4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EEA DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EFF DUP2 PUSH2 0x520E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F14 DUP2 PUSH2 0x5225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F29 DUP2 PUSH2 0x523C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F3E DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F53 DUP2 PUSH2 0x5253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F68 DUP2 PUSH2 0x526A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F8E DUP5 DUP3 DUP6 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB7 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x3EDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3FF2 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x400E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x401C DUP5 DUP3 DUP6 ADD PUSH2 0x3F05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x403A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4048 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4059 DUP7 DUP3 DUP8 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x406A DUP7 DUP3 DUP8 ADD PUSH2 0x3F59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4094 DUP5 DUP3 DUP6 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40BD DUP5 DUP3 DUP6 ADD PUSH2 0x3F44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40E7 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40F8 DUP6 DUP3 DUP7 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4125 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4136 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4147 DUP7 DUP3 DUP8 ADD PUSH2 0x3F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415D DUP4 DUP4 PUSH2 0x44B3 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4175 DUP4 DUP4 PUSH2 0x4624 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x418A DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4199 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41AA DUP3 PUSH2 0x4AB9 JUMP JUMPDEST PUSH2 0x41B4 DUP2 DUP6 PUSH2 0x4AE9 JUMP JUMPDEST SWAP4 POP PUSH2 0x41BF DUP4 PUSH2 0x4A99 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41F0 JUMPI DUP2 MLOAD PUSH2 0x41D7 DUP9 DUP3 PUSH2 0x4151 JUMP JUMPDEST SWAP8 POP PUSH2 0x41E2 DUP4 PUSH2 0x4ACF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x41C3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4208 DUP3 PUSH2 0x4AC4 JUMP JUMPDEST PUSH2 0x4212 DUP2 DUP6 PUSH2 0x4AFA JUMP JUMPDEST SWAP4 POP PUSH2 0x421D DUP4 PUSH2 0x4AA9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x424E JUMPI DUP2 MLOAD PUSH2 0x4235 DUP9 DUP3 PUSH2 0x4169 JUMP JUMPDEST SWAP8 POP PUSH2 0x4240 DUP4 PUSH2 0x4ADC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4221 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4264 DUP2 PUSH2 0x4D8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4273 DUP2 PUSH2 0x4DB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4282 DUP2 PUSH2 0x4DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4291 DUP2 PUSH2 0x4DF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42A0 DUP2 PUSH2 0x4E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B3 PUSH1 0x1A DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42BE DUP3 PUSH2 0x4F7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D6 PUSH1 0x15 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x42E1 DUP3 PUSH2 0x4FA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F9 PUSH1 0xB DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4304 DUP3 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431C PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4327 DUP3 PUSH2 0x4FFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433F PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x434A DUP3 PUSH2 0x5023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4362 PUSH1 0x13 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x436D DUP3 PUSH2 0x504C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4385 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4390 DUP3 PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A8 PUSH1 0x1B DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43B3 DUP3 PUSH2 0x509E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43CB PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43D6 DUP3 PUSH2 0x50C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43EE PUSH1 0x19 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x43F9 DUP3 PUSH2 0x50F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4411 PUSH1 0x10 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x441C DUP3 PUSH2 0x5119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4434 PUSH1 0xD DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x443F DUP3 PUSH2 0x5142 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4457 PUSH1 0x9 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4462 DUP3 PUSH2 0x516B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447A PUSH1 0x11 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x4485 DUP3 PUSH2 0x5194 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x449D PUSH1 0x17 DUP4 PUSH2 0x4B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x44A8 DUP3 PUSH2 0x51BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x44C9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x44DC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x44EF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4502 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4515 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4531 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4544 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4557 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x456A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x457D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4598 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45A5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45B6 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45C3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x2 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45D4 DUP2 PUSH2 0x4E1D JUMP JUMPDEST PUSH2 0x45E1 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x4181 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x45F2 DUP2 PUSH2 0x4E51 JUMP JUMPDEST PUSH2 0x45FF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4624 JUMP JUMPDEST POP PUSH1 0x4 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x4610 DUP2 PUSH2 0x4E37 JUMP JUMPDEST PUSH2 0x461D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x4297 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x462D DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x463C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4657 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4672 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x467F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4190 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x469B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4190 JUMP JUMPDEST PUSH2 0x46DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4700 DUP2 DUP5 PUSH2 0x419F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4722 DUP2 DUP5 PUSH2 0x41FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x473F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x425B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x426A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4794 DUP2 PUSH2 0x42A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47B4 DUP2 PUSH2 0x42C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47D4 DUP2 PUSH2 0x42EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47F4 DUP2 PUSH2 0x430F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4814 DUP2 PUSH2 0x4332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4834 DUP2 PUSH2 0x4355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4854 DUP2 PUSH2 0x4378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4874 DUP2 PUSH2 0x439B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4894 DUP2 PUSH2 0x43BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48B4 DUP2 PUSH2 0x43E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48D4 DUP2 PUSH2 0x4404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F4 DUP2 PUSH2 0x4427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4914 DUP2 PUSH2 0x444A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4934 DUP2 PUSH2 0x446D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4954 DUP2 PUSH2 0x4490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4970 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x451B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x498B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49A6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4583 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x49CF PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49DC PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49E9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x49F6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A03 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A10 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4633 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x4A31 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A3E PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A4B PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A58 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A65 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A72 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A7F PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x4A8C PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4288 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B27 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B32 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4B67 JUMPI PUSH2 0x4B66 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7D DUP3 PUSH2 0x4D4B JUMP JUMPDEST SWAP2 POP PUSH2 0x4B88 DUP4 PUSH2 0x4D4B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B98 JUMPI PUSH2 0x4B97 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAE DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB9 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4BC9 JUMPI PUSH2 0x4BC8 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BDF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BEA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4C23 JUMPI PUSH2 0x4C22 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C39 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C44 DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C57 JUMPI PUSH2 0x4C56 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6D DUP3 PUSH2 0x4D7D JUMP JUMPDEST SWAP2 POP PUSH2 0x4C78 DUP4 PUSH2 0x4D7D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4C8B JUMPI PUSH2 0x4C8A PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD8 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4CF9 DUP3 PUSH2 0x51E6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4D0C DUP3 PUSH2 0x51FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D98 DUP3 PUSH2 0x4D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DAA DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DBC DUP3 PUSH2 0x4DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DCE DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE0 DUP3 PUSH2 0x4DE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF2 DUP3 PUSH2 0x4D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E04 DUP3 PUSH2 0x4CEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E16 DUP3 PUSH2 0x4CFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E30 PUSH2 0x4E2B DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4C96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4A PUSH2 0x4E45 DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E64 PUSH2 0x4E5F DUP4 PUSH2 0x4F72 JUMP JUMPDEST PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E76 DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4EA9 JUMPI PUSH2 0x4EA8 PUSH2 0x4EE5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBF DUP3 PUSH2 0x4D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ECA DUP4 PUSH2 0x4D73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4EDA JUMPI PUSH2 0x4ED9 PUSH2 0x4F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F542054484520464143544F5259204F574E45520000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F54204C4F54204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x494E56414C4944204652414D4520505249434500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54484953204C4F5420495320494E20412050415354204652414D450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x414C5245414459204F574E455200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420544F4F20534D414C4C00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520494E205041535400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E4F204F574E4552530000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420494E2050415354204652414D45000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x51F7 JUMPI PUSH2 0x51F6 PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x520B JUMPI PUSH2 0x520A PUSH2 0x4F43 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x5217 DUP2 PUSH2 0x4CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x5222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x522E DUP2 PUSH2 0x4CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x5239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5245 DUP2 PUSH2 0x4D11 JUMP JUMPDEST DUP2 EQ PUSH2 0x5250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x525C DUP2 PUSH2 0x4D73 JUMP JUMPDEST DUP2 EQ PUSH2 0x5267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5273 DUP2 PUSH2 0x4D7D JUMP JUMPDEST DUP2 EQ PUSH2 0x527E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC5 SWAP10 OR BALANCE DUP7 SWAP6 0xB6 0xB5 AND 0x26 0xCD SLT 0xB8 0xC9 JUMP DUP8 PUSH21 0x8EF885A16BA97F3A37141F1CEE5764736F6C634300 ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xB0 ADDMOD DUP16 0xE9 0xDD PUSH12 0x2CAADDDA93BE03E226A9B829 0xA8 GASLIMIT PUSH29 0xC55D70EA005D64CC657264736F6C634300080400330000000000000000 ",
              "sourceMap": "283:909:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:467;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1092:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;315:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;444:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;361:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;617:467;825:13;852:4;865:6;889:12;904:7;913:14;929:4;935;941:7;950:11;963:7;972:15;841:147;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;825:163;;1026:6;999:7;:24;1015:6;999:24;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1043:11;1068:6;1043:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:467;;;;;;;;;;;:::o;1092:97::-;1140:4;1163:11;:18;;;;1156:25;;1092:97;:::o;409:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;315:39::-;;;;;;;;;;;;:::o;444:20::-;;;;;;;;;;;;;:::o;361:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:139::-;337:5;375:6;362:20;353:29;;391:33;418:5;391:33;:::i;:::-;343:87;;;;:::o;436:137::-;481:5;519:6;506:20;497:29;;535:32;561:5;535:32;:::i;:::-;487:86;;;;:::o;579:262::-;638:6;687:2;675:9;666:7;662:23;658:32;655:2;;;703:1;700;693:12;655:2;746:1;771:53;816:7;807:6;796:9;792:22;771:53;:::i;:::-;761:63;;717:117;645:196;;;;:::o;847:1562::-;981:6;989;997;1005;1013;1021;1029;1037;1045;1053;1102:3;1090:9;1081:7;1077:23;1073:33;1070:2;;;1119:1;1116;1109:12;1070:2;1162:1;1187:53;1232:7;1223:6;1212:9;1208:22;1187:53;:::i;:::-;1177:63;;1133:117;1289:2;1315:53;1360:7;1351:6;1340:9;1336:22;1315:53;:::i;:::-;1305:63;;1260:118;1417:2;1443:52;1487:7;1478:6;1467:9;1463:22;1443:52;:::i;:::-;1433:62;;1388:117;1544:2;1570:52;1614:7;1605:6;1594:9;1590:22;1570:52;:::i;:::-;1560:62;;1515:117;1671:3;1698:53;1743:7;1734:6;1723:9;1719:22;1698:53;:::i;:::-;1688:63;;1642:119;1800:3;1827:53;1872:7;1863:6;1852:9;1848:22;1827:53;:::i;:::-;1817:63;;1771:119;1929:3;1956:53;2001:7;1992:6;1981:9;1977:22;1956:53;:::i;:::-;1946:63;;1900:119;2058:3;2085:52;2129:7;2120:6;2109:9;2105:22;2085:52;:::i;:::-;2075:62;;2029:118;2186:3;2213:53;2258:7;2249:6;2238:9;2234:22;2213:53;:::i;:::-;2203:63;;2157:119;2315:3;2342:50;2384:7;2375:6;2364:9;2360:22;2342:50;:::i;:::-;2332:60;;2286:116;1060:1349;;;;;;;;;;;;;:::o;2415:262::-;2474:6;2523:2;2511:9;2502:7;2498:23;2494:32;2491:2;;;2539:1;2536;2529:12;2491:2;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2481:196;;;;:::o;2683:118::-;2770:24;2788:5;2770:24;:::i;:::-;2765:3;2758:37;2748:53;;:::o;2807:109::-;2888:21;2903:5;2888:21;:::i;:::-;2883:3;2876:34;2866:50;;:::o;2922:157::-;3022:50;3066:5;3022:50;:::i;:::-;3017:3;3010:63;3000:79;;:::o;3085:181::-;3197:62;3253:5;3197:62;:::i;:::-;3192:3;3185:75;3175:91;;:::o;3272:175::-;3381:59;3434:5;3381:59;:::i;:::-;3376:3;3369:72;3359:88;;:::o;3453:175::-;3562:59;3615:5;3562:59;:::i;:::-;3557:3;3550:72;3540:88;;:::o;3634:161::-;3736:52;3782:5;3736:52;:::i;:::-;3731:3;3724:65;3714:81;;:::o;3801:118::-;3888:24;3906:5;3888:24;:::i;:::-;3883:3;3876:37;3866:53;;:::o;3925:129::-;4011:36;4041:5;4011:36;:::i;:::-;4006:3;3999:49;3989:65;;:::o;4060:222::-;4153:4;4191:2;4180:9;4176:18;4168:26;;4204:71;4272:1;4261:9;4257:17;4248:6;4204:71;:::i;:::-;4158:124;;;;:::o;4288:272::-;4406:4;4444:2;4433:9;4429:18;4421:26;;4457:96;4550:1;4539:9;4535:17;4526:6;4457:96;:::i;:::-;4411:149;;;;:::o;4566:1428::-;4988:4;5026:3;5015:9;5011:19;5003:27;;5040:93;5130:1;5119:9;5115:17;5106:6;5040:93;:::i;:::-;5143:85;5224:2;5213:9;5209:18;5200:6;5143:85;:::i;:::-;5238:94;5328:2;5317:9;5313:18;5304:6;5238:94;:::i;:::-;5342:71;5409:2;5398:9;5394:18;5385:6;5342:71;:::i;:::-;5423:72;5490:3;5479:9;5475:19;5466:6;5423:72;:::i;:::-;5505:73;5573:3;5562:9;5558:19;5549:6;5505:73;:::i;:::-;5588;5656:3;5645:9;5641:19;5632:6;5588:73;:::i;:::-;5671;5739:3;5728:9;5724:19;5715:6;5671:73;:::i;:::-;5754:72;5821:3;5810:9;5806:19;5797:6;5754:72;:::i;:::-;5836:73;5904:3;5893:9;5889:19;5880:6;5836:73;:::i;:::-;5919:68;5982:3;5971:9;5967:19;5957:7;5919:68;:::i;:::-;4993:1001;;;;;;;;;;;;;;:::o;6000:252::-;6108:4;6146:2;6135:9;6131:18;6123:26;;6159:86;6242:1;6231:9;6227:17;6218:6;6159:86;:::i;:::-;6113:139;;;;:::o;6258:222::-;6351:4;6389:2;6378:9;6374:18;6366:26;;6402:71;6470:1;6459:9;6455:17;6446:6;6402:71;:::i;:::-;6356:124;;;;:::o;6486:96::-;6523:7;6552:24;6570:5;6552:24;:::i;:::-;6541:35;;6531:51;;;:::o;6588:90::-;6622:7;6665:5;6658:13;6651:21;6640:32;;6630:48;;;:::o;6684:126::-;6721:7;6761:42;6754:5;6750:54;6739:65;;6729:81;;;:::o;6816:77::-;6853:7;6882:5;6871:16;;6861:32;;;:::o;6899:101::-;6935:7;6975:18;6968:5;6964:30;6953:41;;6943:57;;;:::o;7006:152::-;7069:9;7102:50;7146:5;7102:50;:::i;:::-;7089:63;;7079:79;;;:::o;7164:126::-;7227:9;7260:24;7278:5;7260:24;:::i;:::-;7247:37;;7237:53;;;:::o;7296:176::-;7371:9;7404:62;7460:5;7404:62;:::i;:::-;7391:75;;7381:91;;;:::o;7478:138::-;7553:9;7586:24;7604:5;7586:24;:::i;:::-;7573:37;;7563:53;;;:::o;7622:170::-;7694:9;7727:59;7780:5;7727:59;:::i;:::-;7714:72;;7704:88;;;:::o;7798:135::-;7870:9;7903:24;7921:5;7903:24;:::i;:::-;7890:37;;7880:53;;;:::o;7939:170::-;8011:9;8044:59;8097:5;8044:59;:::i;:::-;8031:72;;8021:88;;;:::o;8115:135::-;8187:9;8220:24;8238:5;8220:24;:::i;:::-;8207:37;;8197:53;;;:::o;8256:156::-;8321:9;8354:52;8400:5;8354:52;:::i;:::-;8341:65;;8331:81;;;:::o;8418:128::-;8483:9;8516:24;8534:5;8516:24;:::i;:::-;8503:37;;8493:53;;;:::o;8552:111::-;8601:9;8634:23;8651:5;8634:23;:::i;:::-;8621:36;;8611:52;;;:::o;8669:122::-;8742:24;8760:5;8742:24;:::i;:::-;8735:5;8732:35;8722:2;;8781:1;8778;8771:12;8722:2;8712:79;:::o;8797:116::-;8867:21;8882:5;8867:21;:::i;:::-;8860:5;8857:32;8847:2;;8903:1;8900;8893:12;8847:2;8837:76;:::o;8919:122::-;8992:24;9010:5;8992:24;:::i;:::-;8985:5;8982:35;8972:2;;9031:1;9028;9021:12;8972:2;8962:79;:::o;9047:120::-;9119:23;9136:5;9119:23;:::i;:::-;9112:5;9109:34;9099:2;;9157:1;9154;9147:12;9099:2;9089:78;:::o"
            },
            "methodIdentifiers": {
              "addMarket(address,address,uint64,uint64,uint256,uint256,uint256,uint64,uint256,bool)": "13afc618",
              "getMarketsCount()": "27fa35c3",
              "markets(address)": "8e8f294b",
              "marketsKeys(uint256)": "46a81c00",
              "owner()": "8da5cb5b",
              "uniswapFactory()": "8bdb2afa"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/lib/contracts/libraries/FixedPoint.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/libraries/UQ112x112.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ]
          },
          "id": 78,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:0",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 77,
              "linearizedBaseContracts": [
                77
              ],
              "name": "IERC20",
              "nameLocation": "139:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:0",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 8,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "232:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 8,
                        "src": "269:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:0"
                  },
                  "scope": 77,
                  "src": "223:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:0",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "370:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "388:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "380:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "420:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:0"
                  },
                  "scope": 77,
                  "src": "361:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:0",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "658:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "675:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "667:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "694:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "686:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "720:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:0"
                  },
                  "scope": 77,
                  "src": "649:77:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 36,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1010:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1028:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1020:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1043:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1035:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1075:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:0"
                  },
                  "scope": 77,
                  "src": "1001:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 37,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:0",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 46,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1746:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1762:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1754:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 41,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1779:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1771:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:0"
                  },
                  "returnParameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1805:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:0"
                  },
                  "scope": 77,
                  "src": "1737:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:0",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 58,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2127:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2157:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2149:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2149:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2181:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2173:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2173:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2208:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2200:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:81:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2239:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2238:6:0"
                  },
                  "scope": 77,
                  "src": "2118:127:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "2251:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 67,
                  "name": "Transfer",
                  "nameLocation": "2420:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2445:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2429:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2467:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2451:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2479:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2471:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2428:57:0"
                  },
                  "src": "2414:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "2492:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 76,
                  "name": "Approval",
                  "nameLocation": "2651:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2676:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2660:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 72,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2699:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2683:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 74,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2716:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2708:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:63:0"
                  },
                  "src": "2645:78:0"
                }
              ],
              "scope": 78,
              "src": "129:2596:0",
              "usedErrors": []
            }
          ],
          "src": "33:2693:0"
        },
        "id": 0
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "ast": {
          "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
          "exportedSymbols": {
            "FixedPoint": [
              263
            ]
          },
          "id": 264,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 79,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 263,
              "linearizedBaseContracts": [
                263
              ],
              "name": "FixedPoint",
              "nameLocation": "137:10:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "FixedPoint.uq112x112",
                  "id": 82,
                  "members": [
                    {
                      "constant": false,
                      "id": 81,
                      "mutability": "mutable",
                      "name": "_x",
                      "nameLocation": "249:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "241:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "uq112x112",
                  "nameLocation": "221:9:1",
                  "nodeType": "StructDefinition",
                  "scope": 263,
                  "src": "214:44:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "FixedPoint.uq144x112",
                  "id": 85,
                  "members": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "_x",
                      "nameLocation": "356:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 85,
                      "src": "351:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "351:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "uq144x112",
                  "nameLocation": "331:9:1",
                  "nodeType": "StructDefinition",
                  "scope": 263,
                  "src": "324:41:1",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 88,
                  "mutability": "constant",
                  "name": "RESOLUTION",
                  "nameLocation": "394:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "371:39:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "313132",
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "407:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_112_by_1",
                      "typeString": "int_const 112"
                    },
                    "value": "112"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "524:59:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 99,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90,
                                    "src": "559:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 98,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "551:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint224_$",
                                    "typeString": "type(uint224)"
                                  },
                                  "typeName": {
                                    "id": 97,
                                    "name": "uint224",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "551:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "551:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 101,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "565:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "551:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 96,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "541:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "541:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 95,
                        "id": 104,
                        "nodeType": "Return",
                        "src": "534:42:1"
                      }
                    ]
                  },
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "465:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "480:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "472:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "471:11:1"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "506:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 93,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 92,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "506:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "506:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "505:18:1"
                  },
                  "scope": 263,
                  "src": "456:127:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "700:59:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 117,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "735:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint144",
                                      "typeString": "uint144"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint144",
                                      "typeString": "uint144"
                                    }
                                  ],
                                  "id": 116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "727:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 115,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "727:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "727:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 119,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "741:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "727:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 114,
                            "name": "uq144x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "717:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq144x112_$85_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq144x112 storage pointer)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                            "typeString": "struct FixedPoint.uq144x112 memory"
                          }
                        },
                        "functionReturnParameters": 113,
                        "id": 122,
                        "nodeType": "Return",
                        "src": "710:42:1"
                      }
                    ]
                  },
                  "id": 124,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode144",
                  "nameLocation": "638:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "656:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "648:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "647:11:1"
                  },
                  "returnParameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "682:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 111,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 110,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 85,
                            "src": "682:9:1"
                          },
                          "referencedDeclaration": 85,
                          "src": "682:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "681:18:1"
                  },
                  "scope": 263,
                  "src": "629:130:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "915:107:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 136,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 129,
                                "src": "933:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "938:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "933:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204449565f42595f5a45524f",
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "941:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              },
                              "value": "FixedPoint: DIV_BY_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "925:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "925:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "925:42:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 143,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "994:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 144,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 81,
                                "src": "994:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 147,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 129,
                                    "src": "1012:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1004:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint224_$",
                                    "typeString": "type(uint224)"
                                  },
                                  "typeName": {
                                    "id": 145,
                                    "name": "uint224",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1004:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1004:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "src": "994:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 142,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "984:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 134,
                        "id": 151,
                        "nodeType": "Return",
                        "src": "977:38:1"
                      }
                    ]
                  },
                  "id": 153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "836:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "857:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "840:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 126,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 125,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "840:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "840:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "871:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "863:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "839:34:1"
                  },
                  "returnParameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "897:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 132,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 131,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "897:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "897:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "896:18:1"
                  },
                  "scope": 263,
                  "src": "827:195:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "1201:164:1",
                    "statements": [
                      {
                        "assignments": [
                          165
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 165,
                            "mutability": "mutable",
                            "name": "z",
                            "nameLocation": "1216:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "1211:6:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 164,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1211:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 166,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1211:6:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 168,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 158,
                                  "src": "1235:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1240:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1235:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "id": 179,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 171,
                                          "name": "z",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 165,
                                          "src": "1246:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 178,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 174,
                                                  "name": "self",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 156,
                                                  "src": "1255:4:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                                  }
                                                },
                                                "id": 175,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "_x",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 81,
                                                "src": "1255:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint224",
                                                  "typeString": "uint224"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint224",
                                                  "typeString": "uint224"
                                                }
                                              ],
                                              "id": 173,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1250:4:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 172,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1250:4:1",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 176,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1250:13:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 177,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 158,
                                            "src": "1266:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "1250:17:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1246:21:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 180,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1245:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 181,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 158,
                                    "src": "1271:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1245:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 185,
                                        "name": "self",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 156,
                                        "src": "1281:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                          "typeString": "struct FixedPoint.uq112x112 memory"
                                        }
                                      },
                                      "id": 186,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "_x",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 81,
                                      "src": "1281:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    ],
                                    "id": 184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1276:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 183,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1276:4:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1276:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1245:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1235:54:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204d554c5449504c49434154494f4e5f4f564552464c4f57",
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1291:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c49d28a1a0a9590848dc8e15e2ce94a0e18d974f72b2d7169c2f9169e1ee31e8",
                                "typeString": "literal_string \"FixedPoint: MULTIPLICATION_OVERFLOW\""
                              },
                              "value": "FixedPoint: MULTIPLICATION_OVERFLOW"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c49d28a1a0a9590848dc8e15e2ce94a0e18d974f72b2d7169c2f9169e1ee31e8",
                                "typeString": "literal_string \"FixedPoint: MULTIPLICATION_OVERFLOW\""
                              }
                            ],
                            "id": 167,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1227:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1227:102:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 192,
                        "nodeType": "ExpressionStatement",
                        "src": "1227:102:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 194,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "1356:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 193,
                            "name": "uq144x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "1346:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq144x112_$85_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq144x112 storage pointer)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1346:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                            "typeString": "struct FixedPoint.uq144x112 memory"
                          }
                        },
                        "functionReturnParameters": 163,
                        "id": 196,
                        "nodeType": "Return",
                        "src": "1339:19:1"
                      }
                    ]
                  },
                  "id": 198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "1125:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1146:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "1129:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 155,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 154,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "1129:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "1129:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "1157:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "1152:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1128:31:1"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "1183:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 161,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 160,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 85,
                            "src": "1183:9:1"
                          },
                          "referencedDeclaration": 85,
                          "src": "1183:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1182:18:1"
                  },
                  "scope": 263,
                  "src": "1116:249:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 227,
                    "nodeType": "Block",
                    "src": "1616:144:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 209,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "1634:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1648:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1634:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204449565f42595f5a45524f",
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1651:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              },
                              "value": "FixedPoint: DIV_BY_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              }
                            ],
                            "id": 208,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1626:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1626:51:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "1626:51:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    },
                                    "id": 221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 218,
                                          "name": "numerator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 200,
                                          "src": "1713:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        ],
                                        "id": 217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1705:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint224_$",
                                          "typeString": "type(uint224)"
                                        },
                                        "typeName": {
                                          "id": 216,
                                          "name": "uint224",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1705:7:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 219,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1705:18:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<<",
                                    "rightExpression": {
                                      "id": 220,
                                      "name": "RESOLUTION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88,
                                      "src": "1727:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1705:32:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    }
                                  }
                                ],
                                "id": 222,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1704:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 223,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "1741:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "src": "1704:48:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 215,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1694:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1694:59:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 207,
                        "id": 226,
                        "nodeType": "Return",
                        "src": "1687:66:1"
                      }
                    ]
                  },
                  "id": 228,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fraction",
                  "nameLocation": "1526:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "numerator",
                        "nameLocation": "1543:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1535:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1535:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "1562:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1554:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1534:40:1"
                  },
                  "returnParameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1598:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 205,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 204,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "1598:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "1598:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1597:18:1"
                  },
                  "scope": 263,
                  "src": "1517:243:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 244,
                    "nodeType": "Block",
                    "src": "1914:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 238,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 231,
                                  "src": "1939:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 239,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 81,
                                "src": "1939:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "id": 240,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "1950:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "1939:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1931:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint112_$",
                              "typeString": "type(uint112)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1931:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1931:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "functionReturnParameters": 235,
                        "id": 243,
                        "nodeType": "Return",
                        "src": "1924:37:1"
                      }
                    ]
                  },
                  "id": 245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decode",
                  "nameLocation": "1852:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1876:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1859:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 230,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 229,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82,
                            "src": "1859:9:1"
                          },
                          "referencedDeclaration": 82,
                          "src": "1859:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$82_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1858:23:1"
                  },
                  "returnParameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1905:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1905:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1904:9:1"
                  },
                  "scope": 263,
                  "src": "1843:125:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "2125:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 255,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 248,
                                  "src": "2150:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                                    "typeString": "struct FixedPoint.uq144x112 memory"
                                  }
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 84,
                                "src": "2150:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "id": 257,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "2161:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "2150:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2142:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint144_$",
                              "typeString": "type(uint144)"
                            },
                            "typeName": {
                              "id": 253,
                              "name": "uint144",
                              "nodeType": "ElementaryTypeName",
                              "src": "2142:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2142:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "functionReturnParameters": 252,
                        "id": 260,
                        "nodeType": "Return",
                        "src": "2135:37:1"
                      }
                    ]
                  },
                  "id": 262,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decode144",
                  "nameLocation": "2060:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "2087:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2070:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$85_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 247,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 246,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 85,
                            "src": "2070:9:1"
                          },
                          "referencedDeclaration": 85,
                          "src": "2070:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$85_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2069:23:1"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2116:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:9:1"
                  },
                  "scope": 263,
                  "src": "2051:128:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 264,
              "src": "129:2052:1",
              "usedErrors": []
            }
          ],
          "src": "0:2182:1"
        },
        "id": 1
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
          "exportedSymbols": {
            "IUniswapV2Factory": [
              326
            ]
          },
          "id": 327,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 265,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 326,
              "linearizedBaseContracts": [
                326
              ],
              "name": "IUniswapV2Factory",
              "nameLocation": "36:17:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 275,
                  "name": "PairCreated",
                  "nameLocation": "66:11:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "94:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "78:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "78:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "118:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "102:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "102:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 271,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "134:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "126:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "126:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 273,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "140:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "77:68:2"
                  },
                  "src": "60:86:2"
                },
                {
                  "functionSelector": "017e7e58",
                  "id": 280,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nameLocation": "161:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "166:2:2"
                  },
                  "returnParameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "192:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "192:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "191:9:2"
                  },
                  "scope": 326,
                  "src": "152:49:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "094b7415",
                  "id": 285,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeToSetter",
                  "nameLocation": "215:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "226:2:2"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "252:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "251:9:2"
                  },
                  "scope": 326,
                  "src": "206:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e6a43905",
                  "id": 294,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPair",
                  "nameLocation": "276:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "292:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "284:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "284:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "308:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "300:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "300:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "283:32:2"
                  },
                  "returnParameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "347:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "339:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "339:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "338:14:2"
                  },
                  "scope": 326,
                  "src": "267:86:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1e3dd18b",
                  "id": 301,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairs",
                  "nameLocation": "367:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "376:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "376:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "375:6:2"
                  },
                  "returnParameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "413:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "405:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:14:2"
                  },
                  "scope": 326,
                  "src": "358:61:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "574f2ba3",
                  "id": 306,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nameLocation": "433:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "447:2:2"
                  },
                  "returnParameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "473:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "472:6:2"
                  },
                  "scope": 326,
                  "src": "424:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c9c65396",
                  "id": 315,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "494:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "513:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "505:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "529:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "521:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:32:2"
                  },
                  "returnParameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "563:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "555:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "554:14:2"
                  },
                  "scope": 326,
                  "src": "485:84:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f46901ed",
                  "id": 320,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nameLocation": "584:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 318,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 317,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "593:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 316,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "593:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "592:9:2"
                  },
                  "returnParameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "610:0:2"
                  },
                  "scope": 326,
                  "src": "575:36:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a2e74af6",
                  "id": 325,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nameLocation": "625:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "640:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "639:9:2"
                  },
                  "returnParameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "657:0:2"
                  },
                  "scope": 326,
                  "src": "616:42:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 327,
              "src": "26:634:2",
              "usedErrors": []
            }
          ],
          "src": "0:661:2"
        },
        "id": 2
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
          "exportedSymbols": {
            "IUniswapV2Pair": [
              568
            ]
          },
          "id": 569,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 328,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 568,
              "linearizedBaseContracts": [
                568
              ],
              "name": "IUniswapV2Pair",
              "nameLocation": "36:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 336,
                  "name": "Approval",
                  "nameLocation": "63:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "88:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "72:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "72:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "111:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "95:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "95:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "125:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "120:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "120:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "71:60:3"
                  },
                  "src": "57:75:3"
                },
                {
                  "anonymous": false,
                  "id": 344,
                  "name": "Transfer",
                  "nameLocation": "143:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "168:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "152:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "152:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "190:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "174:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "174:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 342,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "199:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "194:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "194:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "151:54:3"
                  },
                  "src": "137:69:3"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 349,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "221:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "225:2:3"
                  },
                  "returnParameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "251:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "251:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "250:15:3"
                  },
                  "scope": 568,
                  "src": "212:54:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "280:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "286:2:3"
                  },
                  "returnParameters": {
                    "id": 353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "312:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "311:15:3"
                  },
                  "scope": 568,
                  "src": "271:56:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 359,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "341:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "349:2:3"
                  },
                  "returnParameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 359,
                        "src": "375:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "375:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "374:7:3"
                  },
                  "scope": 568,
                  "src": "332:50:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 364,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "396:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "407:2:3"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 364,
                        "src": "433:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "432:6:3"
                  },
                  "scope": 568,
                  "src": "387:52:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 371,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "453:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "471:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "463:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "462:15:3"
                  },
                  "returnParameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "501:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:6:3"
                  },
                  "scope": 568,
                  "src": "444:63:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 380,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "521:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "539:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "531:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "531:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "554:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "546:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "530:32:3"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "586:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "585:6:3"
                  },
                  "scope": 568,
                  "src": "512:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 389,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "607:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "623:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "615:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "637:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "632:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "614:29:3"
                  },
                  "returnParameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "662:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "661:6:3"
                  },
                  "scope": 568,
                  "src": "598:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 398,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "682:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "699:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "691:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "703:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "703:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:24:3"
                  },
                  "returnParameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "733:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "732:6:3"
                  },
                  "scope": 568,
                  "src": "673:66:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 409,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "753:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "774:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "766:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "788:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "780:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "780:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 404,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "797:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "792:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "792:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "765:38:3"
                  },
                  "returnParameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "822:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:6:3"
                  },
                  "scope": 568,
                  "src": "744:84:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3644e515",
                  "id": 414,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "843:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "859:2:3"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "885:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "884:9:3"
                  },
                  "scope": 568,
                  "src": "834:60:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "30adf81f",
                  "id": 419,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "908:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:3"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "949:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "948:9:3"
                  },
                  "scope": 568,
                  "src": "899:59:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ecebe00",
                  "id": 426,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "972:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "987:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "979:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "979:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "978:15:3"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "1017:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:6:3"
                  },
                  "scope": 568,
                  "src": "963:60:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d505accf",
                  "id": 443,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "1038:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 428,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1053:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1045:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1045:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1068:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1060:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1060:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1082:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1077:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1077:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1094:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1089:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1110:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1104:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1121:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1113:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1132:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "1124:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1124:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1044:90:3"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1143:0:3"
                  },
                  "scope": 568,
                  "src": "1029:115:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 451,
                  "name": "Mint",
                  "nameLocation": "1156:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 445,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1177:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1161:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1161:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 447,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1190:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1185:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1204:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1199:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1160:52:3"
                  },
                  "src": "1150:63:3"
                },
                {
                  "anonymous": false,
                  "id": 461,
                  "name": "Burn",
                  "nameLocation": "1224:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1245:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1229:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1229:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1258:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1253:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1272:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1267:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1297:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "1281:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1281:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1228:72:3"
                  },
                  "src": "1218:83:3"
                },
                {
                  "anonymous": false,
                  "id": 475,
                  "name": "Swap",
                  "nameLocation": "1312:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1342:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1326:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 465,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "1363:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1358:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 467,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "1387:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1382:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 469,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "1411:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1406:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1406:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 471,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "1436:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1431:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1431:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 473,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1472:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "1456:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1456:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:164:3"
                  },
                  "src": "1306:175:3"
                },
                {
                  "anonymous": false,
                  "id": 481,
                  "name": "Sync",
                  "nameLocation": "1492:4:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "1505:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "1497:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1497:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "1523:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "1515:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1515:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1496:36:3"
                  },
                  "src": "1486:47:3"
                },
                {
                  "functionSelector": "ba9a7a56",
                  "id": 486,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "1548:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1565:2:3"
                  },
                  "returnParameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 484,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "1591:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1591:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1590:6:3"
                  },
                  "scope": 568,
                  "src": "1539:58:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c45a0155",
                  "id": 491,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "1611:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1618:2:3"
                  },
                  "returnParameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "1644:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1644:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:9:3"
                  },
                  "scope": 568,
                  "src": "1602:51:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0dfe1681",
                  "id": 496,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nameLocation": "1667:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1673:2:3"
                  },
                  "returnParameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "1699:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1698:9:3"
                  },
                  "scope": 568,
                  "src": "1658:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d21220a7",
                  "id": 501,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nameLocation": "1722:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1728:2:3"
                  },
                  "returnParameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "1754:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:9:3"
                  },
                  "scope": 568,
                  "src": "1713:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0902f1ac",
                  "id": 510,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "1777:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1788:2:3"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "1822:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1814:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1814:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "1840:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1832:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1832:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "blockTimestampLast",
                        "nameLocation": "1857:18:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1850:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1850:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1813:63:3"
                  },
                  "scope": 568,
                  "src": "1768:109:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5909c0d5",
                  "id": 515,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price0CumulativeLast",
                  "nameLocation": "1891:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1911:2:3"
                  },
                  "returnParameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "1937:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1937:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1936:6:3"
                  },
                  "scope": 568,
                  "src": "1882:61:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5a3d5493",
                  "id": 520,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price1CumulativeLast",
                  "nameLocation": "1957:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "2003:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2003:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2002:6:3"
                  },
                  "scope": 568,
                  "src": "1948:61:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7464fc3d",
                  "id": 525,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "kLast",
                  "nameLocation": "2023:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:3"
                  },
                  "returnParameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2054:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2054:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2053:6:3"
                  },
                  "scope": 568,
                  "src": "2014:46:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6a627842",
                  "id": 532,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "2075:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2088:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "2080:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2080:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2079:12:3"
                  },
                  "returnParameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "2115:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "2110:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2110:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2109:16:3"
                  },
                  "scope": 568,
                  "src": "2066:60:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "89afcb44",
                  "id": 541,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "2140:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 535,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2153:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "2145:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2145:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2144:12:3"
                  },
                  "returnParameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2180:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "2175:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2194:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "2189:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2189:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2174:28:3"
                  },
                  "scope": 568,
                  "src": "2131:72:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "022c0d9f",
                  "id": 552,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "2217:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "2227:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2222:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "2244:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2239:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2264:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2256:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2283:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2268:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2268:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2221:67:3"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2297:0:3"
                  },
                  "scope": 568,
                  "src": "2208:90:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bc25cf77",
                  "id": 557,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "skim",
                  "nameLocation": "2312:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 554,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2325:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "2317:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2316:12:3"
                  },
                  "returnParameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2337:0:3"
                  },
                  "scope": 568,
                  "src": "2303:35:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fff6cae9",
                  "id": 560,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sync",
                  "nameLocation": "2352:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2356:2:3"
                  },
                  "returnParameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2367:0:3"
                  },
                  "scope": 568,
                  "src": "2343:25:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "485cc955",
                  "id": 567,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2383:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "2394:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2394:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 564,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "2403:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 563,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2403:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2393:18:3"
                  },
                  "returnParameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2420:0:3"
                  },
                  "scope": 568,
                  "src": "2374:47:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 569,
              "src": "26:2397:3",
              "usedErrors": []
            }
          ],
          "src": "0:2424:3"
        },
        "id": 3
      },
      "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
          "exportedSymbols": {
            "UQ112x112": [
              612
            ]
          },
          "id": 613,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 570,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 612,
              "linearizedBaseContracts": [
                612
              ],
              "name": "UQ112x112",
              "nameLocation": "190:9:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 575,
                  "mutability": "constant",
                  "name": "Q112",
                  "nameLocation": "223:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "206:30:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                      "typeString": "int_const 5192...(26 digits omitted)...0096"
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "230:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "313132",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "233:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_112_by_1",
                        "typeString": "int_const 112"
                      },
                      "value": "112"
                    },
                    "src": "230:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                      "typeString": "int_const 5192...(26 digits omitted)...0096"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "343:57:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 582,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "353:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 585,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 577,
                                  "src": "365:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "357:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 583,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "357:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "357:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 587,
                              "name": "Q112",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "370:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "src": "357:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "353:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "353:21:4"
                      }
                    ]
                  },
                  "id": 592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "291:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "306:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "298:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "297:11:4"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "340:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "332:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "332:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "331:11:4"
                  },
                  "scope": 612,
                  "src": "282:118:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 610,
                    "nodeType": "Block",
                    "src": "539:35:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 601,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "549:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 602,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "553:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 605,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 596,
                                  "src": "565:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "557:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 603,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "557:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "557:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "src": "553:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "549:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 609,
                        "nodeType": "ExpressionStatement",
                        "src": "549:18:4"
                      }
                    ]
                  },
                  "id": 611,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uqdiv",
                  "nameLocation": "477:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "491:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "483:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "483:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "502:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "494:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "494:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "482:22:4"
                  },
                  "returnParameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "536:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "528:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "528:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "527:11:4"
                  },
                  "scope": 612,
                  "src": "468:106:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 613,
              "src": "182:394:4",
              "usedErrors": []
            }
          ],
          "src": "0:576:4"
        },
        "id": 4
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
          "exportedSymbols": {
            "FixedPoint": [
              263
            ],
            "IUniswapV2Pair": [
              568
            ],
            "UniswapV2OracleLibrary": [
              719
            ]
          },
          "id": 720,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 614,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:5"
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 615,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 720,
              "sourceUnit": 569,
              "src": "26:66:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "id": 616,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 720,
              "sourceUnit": 264,
              "src": "93:57:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 719,
              "linearizedBaseContracts": [
                719
              ],
              "name": "UniswapV2OracleLibrary",
              "nameLocation": "252:22:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 618,
                  "libraryName": {
                    "id": 617,
                    "name": "FixedPoint",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 263,
                    "src": "287:10:5"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "281:23:5"
                },
                {
                  "body": {
                    "id": 633,
                    "nodeType": "Block",
                    "src": "486:57:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 625,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "510:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "510:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                },
                                "id": 629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "528:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "533:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "528:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                }
                              },
                              "src": "510:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "503:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 623,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "503:6:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "503:33:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "functionReturnParameters": 622,
                        "id": 632,
                        "nodeType": "Return",
                        "src": "496:40:5"
                      }
                    ]
                  },
                  "id": 634,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentBlockTimestamp",
                  "nameLocation": "431:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "452:2:5"
                  },
                  "returnParameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "478:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "477:8:5"
                  },
                  "scope": 719,
                  "src": "422:121:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "799:887:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 645,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "809:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 646,
                              "name": "currentBlockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 634,
                              "src": "826:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                                "typeString": "function () view returns (uint32)"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "826:23:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "809:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "809:40:5"
                      },
                      {
                        "expression": {
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 650,
                            "name": "price0Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "859:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 652,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "893:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 651,
                                  "name": "IUniswapV2Pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 568,
                                  "src": "878:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                    "typeString": "type(contract IUniswapV2Pair)"
                                  }
                                },
                                "id": 653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "878:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price0CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "878:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "878:43:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "859:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "859:62:5"
                      },
                      {
                        "expression": {
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 658,
                            "name": "price1Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "931:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 660,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "965:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 659,
                                  "name": "IUniswapV2Pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 568,
                                  "src": "950:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                    "typeString": "type(contract IUniswapV2Pair)"
                                  }
                                },
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "950:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price1CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 520,
                              "src": "950:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "950:43:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "931:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "931:62:5"
                      },
                      {
                        "assignments": [
                          667,
                          669,
                          671
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 667,
                            "mutability": "mutable",
                            "name": "reserve0",
                            "nameLocation": "1113:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 717,
                            "src": "1105:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 666,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1105:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 669,
                            "mutability": "mutable",
                            "name": "reserve1",
                            "nameLocation": "1131:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 717,
                            "src": "1123:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 668,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1123:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 671,
                            "mutability": "mutable",
                            "name": "blockTimestampLast",
                            "nameLocation": "1148:18:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 717,
                            "src": "1141:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 670,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1141:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 677,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 673,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 636,
                                  "src": "1185:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 672,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 568,
                                "src": "1170:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1170:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 510,
                            "src": "1170:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view external returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1170:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1104:100:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 678,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "1218:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 679,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "1240:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1218:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "1214:466:5",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "1256:424:5",
                          "statements": [
                            {
                              "assignments": [
                                682
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 682,
                                  "mutability": "mutable",
                                  "name": "timeElapsed",
                                  "nameLocation": "1324:11:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 715,
                                  "src": "1317:18:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 681,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1317:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 686,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 683,
                                  "name": "blockTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 643,
                                  "src": "1338:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 684,
                                  "name": "blockTimestampLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "1355:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "1338:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1317:56:5"
                            },
                            {
                              "expression": {
                                "id": 699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 687,
                                  "name": "price0Cumulative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "1461:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 698,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 692,
                                              "name": "reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 669,
                                              "src": "1506:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            },
                                            {
                                              "id": 693,
                                              "name": "reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 667,
                                              "src": "1516:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              },
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "id": 690,
                                              "name": "FixedPoint",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 263,
                                              "src": "1486:10:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                                "typeString": "type(library FixedPoint)"
                                              }
                                            },
                                            "id": 691,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "fraction",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 228,
                                            "src": "1486:19:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_struct$_uq112x112_$82_memory_ptr_$",
                                              "typeString": "function (uint112,uint112) pure returns (struct FixedPoint.uq112x112 memory)"
                                            }
                                          },
                                          "id": 694,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1486:39:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        },
                                        "id": 695,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "_x",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 81,
                                        "src": "1486:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 689,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1481:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 688,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1481:4:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1481:48:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 697,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "1532:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "1481:62:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1461:82:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 700,
                              "nodeType": "ExpressionStatement",
                              "src": "1461:82:5"
                            },
                            {
                              "expression": {
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 701,
                                  "name": "price1Cumulative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "1587:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 706,
                                              "name": "reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 667,
                                              "src": "1632:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            },
                                            {
                                              "id": 707,
                                              "name": "reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 669,
                                              "src": "1642:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              },
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "id": 704,
                                              "name": "FixedPoint",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 263,
                                              "src": "1612:10:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                                "typeString": "type(library FixedPoint)"
                                              }
                                            },
                                            "id": 705,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "fraction",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 228,
                                            "src": "1612:19:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_struct$_uq112x112_$82_memory_ptr_$",
                                              "typeString": "function (uint112,uint112) pure returns (struct FixedPoint.uq112x112 memory)"
                                            }
                                          },
                                          "id": 708,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1612:39:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        },
                                        "id": 709,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "_x",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 81,
                                        "src": "1612:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 703,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1607:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 702,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1607:4:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1607:48:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 711,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "1658:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "1607:62:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1587:82:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 714,
                              "nodeType": "ExpressionStatement",
                              "src": "1587:82:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 718,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentCumulativePrices",
                  "nameLocation": "655:23:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "696:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "688:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:28:5"
                  },
                  "returnParameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "price0Cumulative",
                        "nameLocation": "735:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "730:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "730:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "price1Cumulative",
                        "nameLocation": "758:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "753:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nameLocation": "783:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "776:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "776:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "729:69:5"
                  },
                  "scope": 719,
                  "src": "646:1040:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 720,
              "src": "244:1444:5",
              "usedErrors": []
            }
          ],
          "src": "0:1689:5"
        },
        "id": 5
      },
      "contracts/Market.sol": {
        "ast": {
          "absolutePath": "contracts/Market.sol",
          "exportedSymbols": {
            "FixedPoint": [
              263
            ],
            "IERC20": [
              77
            ],
            "IUniswapV2Factory": [
              326
            ],
            "IUniswapV2Pair": [
              568
            ],
            "Market": [
              2705
            ],
            "MarketFactory": [
              2816
            ],
            "UQ112x112": [
              612
            ],
            "UniswapV2OracleLibrary": [
              719
            ]
          },
          "id": 2706,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 721,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "absolutePath": "contracts/MarketFactory.sol",
              "file": "./MarketFactory.sol",
              "id": 722,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2706,
              "sourceUnit": 2817,
              "src": "97:29:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 723,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2706,
              "sourceUnit": 569,
              "src": "128:66:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
              "file": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
              "id": 724,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2706,
              "sourceUnit": 720,
              "src": "196:78:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "id": 725,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2706,
              "sourceUnit": 264,
              "src": "276:57:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 726,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2706,
              "sourceUnit": 78,
              "src": "335:56:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
              "file": "@uniswap/v2-periphery/contracts/libraries/UQ112x112.sol",
              "id": 727,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2706,
              "sourceUnit": 613,
              "src": "393:65:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 728,
                "nodeType": "StructuredDocumentation",
                "src": "464:122:6",
                "text": "@title TWPM Market\n @author UniHedge\n @dev All function calls are currently implemented without side effects"
              },
              "fullyImplemented": true,
              "id": 2705,
              "linearizedBaseContracts": [
                2705
              ],
              "name": "Market",
              "nameLocation": "595:6:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 731,
                  "libraryName": {
                    "id": 729,
                    "name": "UQ112x112",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 612,
                    "src": "615:9:6"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "609:28:6",
                  "typeName": {
                    "id": 730,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "ef78d4fd",
                  "id": 733,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "680:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "668:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7358c57a",
                  "id": 735,
                  "mutability": "mutable",
                  "name": "initTimestamp",
                  "nameLocation": "817:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "805:25:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "527eb4bc",
                  "id": 738,
                  "mutability": "mutable",
                  "name": "feeProtocol",
                  "nameLocation": "875:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "863:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "889:3:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ff5c86b0",
                  "id": 740,
                  "mutability": "mutable",
                  "name": "tReporting",
                  "nameLocation": "954:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "942:22:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c816841b",
                  "id": 743,
                  "mutability": "mutable",
                  "name": "uniswapPair",
                  "nameLocation": "1028:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1006:33:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                    "typeString": "contract IUniswapV2Pair"
                  },
                  "typeName": {
                    "id": 742,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 741,
                      "name": "IUniswapV2Pair",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 568,
                      "src": "1006:14:6"
                    },
                    "referencedDeclaration": 568,
                    "src": "1006:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "499a0fc4",
                  "id": 745,
                  "mutability": "mutable",
                  "name": "dPrice",
                  "nameLocation": "1087:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1075:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "410f0710",
                  "id": 747,
                  "mutability": "mutable",
                  "name": "feeMarket",
                  "nameLocation": "1156:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1144:21:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7e996639",
                  "id": 749,
                  "mutability": "mutable",
                  "name": "taxMarket",
                  "nameLocation": "1210:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1198:21:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c45a0155",
                  "id": 752,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1291:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1270:28:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MarketFactory_$2816",
                    "typeString": "contract MarketFactory"
                  },
                  "typeName": {
                    "id": 751,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 750,
                      "name": "MarketFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2816,
                      "src": "1270:13:6"
                    },
                    "referencedDeclaration": 2816,
                    "src": "1270:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketFactory_$2816",
                      "typeString": "contract MarketFactory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "da68cf8b",
                  "id": 755,
                  "mutability": "mutable",
                  "name": "accountingToken",
                  "nameLocation": "1383:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1369:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$77",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 754,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 753,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 77,
                      "src": "1369:6:6"
                    },
                    "referencedDeclaration": 77,
                    "src": "1369:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "45084775",
                  "id": 757,
                  "mutability": "mutable",
                  "name": "ownerMarket",
                  "nameLocation": "1455:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1440:26:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3d09a82a",
                  "id": 759,
                  "mutability": "mutable",
                  "name": "minTax",
                  "nameLocation": "1525:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1513:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "scalar",
                  "nameLocation": "1604:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1599:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31653234",
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1613:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "value": "1e24"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "avgPriceSwitch",
                  "nameLocation": "1636:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "1631:27:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1653:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "Market.SFrame",
                  "id": 769,
                  "members": [
                    {
                      "id": 766,
                      "name": "NULL",
                      "nameLocation": "1680:4:6",
                      "nodeType": "EnumValue",
                      "src": "1680:4:6"
                    },
                    {
                      "id": 767,
                      "name": "OPENED",
                      "nameLocation": "1686:6:6",
                      "nodeType": "EnumValue",
                      "src": "1686:6:6"
                    },
                    {
                      "id": 768,
                      "name": "CLOSED",
                      "nameLocation": "1694:6:6",
                      "nodeType": "EnumValue",
                      "src": "1694:6:6"
                    }
                  ],
                  "name": "SFrame",
                  "nameLocation": "1672:6:6",
                  "nodeType": "EnumDefinition",
                  "src": "1667:34:6"
                },
                {
                  "canonicalName": "Market.Frame",
                  "id": 795,
                  "members": [
                    {
                      "constant": false,
                      "id": 771,
                      "mutability": "mutable",
                      "name": "frameKey",
                      "nameLocation": "1736:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1731:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 770,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1731:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "oracleTimestampStart",
                      "nameLocation": "1761:20:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1756:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1756:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 775,
                      "mutability": "mutable",
                      "name": "oracleTimestampEnd",
                      "nameLocation": "1797:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1792:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 774,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1792:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 777,
                      "mutability": "mutable",
                      "name": "rewardFund",
                      "nameLocation": "1831:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1826:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 776,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1826:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 779,
                      "mutability": "mutable",
                      "name": "priceAverage",
                      "nameLocation": "1857:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1852:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 778,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1852:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "oraclePriceCumulativeStart",
                      "nameLocation": "1885:26:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1880:31:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "oraclePriceCumulativeEnd",
                      "nameLocation": "1927:24:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1922:29:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 782,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1922:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 786,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "1969:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1962:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SFrame_$769",
                        "typeString": "enum Market.SFrame"
                      },
                      "typeName": {
                        "id": 785,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 784,
                          "name": "SFrame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 769,
                          "src": "1962:6:6"
                        },
                        "referencedDeclaration": 769,
                        "src": "1962:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SFrame_$769",
                          "typeString": "enum Market.SFrame"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 789,
                      "mutability": "mutable",
                      "name": "lotKeys",
                      "nameLocation": "1992:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "1985:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 787,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1985:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 788,
                        "nodeType": "ArrayTypeName",
                        "src": "1985:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "lots",
                      "nameLocation": "2031:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "2010:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Lot)"
                      },
                      "typeName": {
                        "id": 793,
                        "keyType": {
                          "id": 790,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2018:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2010:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Lot)"
                        },
                        "valueType": {
                          "id": 792,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 791,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 838,
                            "src": "2026:3:6"
                          },
                          "referencedDeclaration": 838,
                          "src": "2026:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$838_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Frame",
                  "nameLocation": "1714:5:6",
                  "nodeType": "StructDefinition",
                  "scope": 2705,
                  "src": "1707:336:6",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 809,
                  "name": "FrameUpdate",
                  "nameLocation": "2110:11:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 797,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "2127:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 809,
                        "src": "2122:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 796,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2122:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 799,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracleTimestampStart",
                        "nameLocation": "2142:20:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 809,
                        "src": "2137:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2137:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 801,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracleTimestampEnd",
                        "nameLocation": "2169:18:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 809,
                        "src": "2164:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2164:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 803,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oraclePrice0CumulativeStart",
                        "nameLocation": "2194:27:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 809,
                        "src": "2189:32:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 802,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2189:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oraclePrice0CumulativeEnd",
                        "nameLocation": "2228:25:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 809,
                        "src": "2223:30:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2223:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardFund",
                        "nameLocation": "2260:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 809,
                        "src": "2255:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2255:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2121:150:6"
                  },
                  "src": "2104:168:6"
                },
                {
                  "constant": false,
                  "functionSelector": "a10340bc",
                  "id": 814,
                  "mutability": "mutable",
                  "name": "frames",
                  "nameLocation": "2310:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "2280:36:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                    "typeString": "mapping(uint256 => struct Market.Frame)"
                  },
                  "typeName": {
                    "id": 813,
                    "keyType": {
                      "id": 810,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2288:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2280:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                      "typeString": "mapping(uint256 => struct Market.Frame)"
                    },
                    "valueType": {
                      "id": 812,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 811,
                        "name": "Frame",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 795,
                        "src": "2296:5:6"
                      },
                      "referencedDeclaration": 795,
                      "src": "2296:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Frame_$795_storage_ptr",
                        "typeString": "struct Market.Frame"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "60f65c60",
                  "id": 819,
                  "mutability": "mutable",
                  "name": "userFrames",
                  "nameLocation": "2357:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "2323:44:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 818,
                    "keyType": {
                      "id": 815,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2331:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2323:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 816,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2342:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 817,
                      "nodeType": "ArrayTypeName",
                      "src": "2342:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "050e8840",
                  "id": 822,
                  "mutability": "mutable",
                  "name": "framesKeys",
                  "nameLocation": "2388:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2705,
                  "src": "2374:24:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 820,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2374:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 821,
                    "nodeType": "ArrayTypeName",
                    "src": "2374:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "Market.SLot",
                  "id": 826,
                  "members": [
                    {
                      "id": 823,
                      "name": "NULL",
                      "nameLocation": "2418:4:6",
                      "nodeType": "EnumValue",
                      "src": "2418:4:6"
                    },
                    {
                      "id": 824,
                      "name": "BOUGHT",
                      "nameLocation": "2424:6:6",
                      "nodeType": "EnumValue",
                      "src": "2424:6:6"
                    },
                    {
                      "id": 825,
                      "name": "SETTLED",
                      "nameLocation": "2432:7:6",
                      "nodeType": "EnumValue",
                      "src": "2432:7:6"
                    }
                  ],
                  "name": "SLot",
                  "nameLocation": "2412:4:6",
                  "nodeType": "EnumDefinition",
                  "src": "2407:33:6"
                },
                {
                  "canonicalName": "Market.Lot",
                  "id": 838,
                  "members": [
                    {
                      "constant": false,
                      "id": 828,
                      "mutability": "mutable",
                      "name": "frameKey",
                      "nameLocation": "2473:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "2468:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 827,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2468:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 830,
                      "mutability": "mutable",
                      "name": "lotKey",
                      "nameLocation": "2497:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "2492:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 829,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2492:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 832,
                      "mutability": "mutable",
                      "name": "lotOwner",
                      "nameLocation": "2522:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "2514:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 831,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2514:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 834,
                      "mutability": "mutable",
                      "name": "acquisitionPrice",
                      "nameLocation": "2546:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "2541:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 833,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2541:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "2578:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "2573:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SLot_$826",
                        "typeString": "enum Market.SLot"
                      },
                      "typeName": {
                        "id": 836,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 835,
                          "name": "SLot",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 826,
                          "src": "2573:4:6"
                        },
                        "referencedDeclaration": 826,
                        "src": "2573:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SLot_$826",
                          "typeString": "enum Market.SLot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Lot",
                  "nameLocation": "2453:3:6",
                  "nodeType": "StructDefinition",
                  "scope": 2705,
                  "src": "2446:145:6",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 845,
                  "name": "LotUpdate",
                  "nameLocation": "2605:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "2620:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "2615:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2615:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 843,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "lotStruct",
                        "nameLocation": "2634:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "2630:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                          "typeString": "struct Market.Lot"
                        },
                        "typeName": {
                          "id": 842,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 841,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 838,
                            "src": "2630:3:6"
                          },
                          "referencedDeclaration": 838,
                          "src": "2630:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$838_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2614:30:6"
                  },
                  "src": "2599:46:6"
                },
                {
                  "body": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "2868:420:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 873,
                            "name": "accountingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "2879:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 874,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "2897:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2879:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 876,
                        "nodeType": "ExpressionStatement",
                        "src": "2879:24:6"
                      },
                      {
                        "expression": {
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 877,
                            "name": "ownerMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "2914:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 880,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2936:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2936:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2928:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 878,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2928:8:6",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2928:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2914:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "2914:33:6"
                      },
                      {
                        "expression": {
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 885,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "2958:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 886,
                            "name": "_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "2967:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2958:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "2958:16:6"
                      },
                      {
                        "expression": {
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 889,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "2985:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 890,
                            "name": "_initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "3001:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2985:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "2985:30:6"
                      },
                      {
                        "expression": {
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 893,
                            "name": "taxMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "3027:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 894,
                            "name": "_taxMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "3039:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3027:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "3027:22:6"
                      },
                      {
                        "expression": {
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 897,
                            "name": "feeMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "3060:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 898,
                            "name": "_feeMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 862,
                            "src": "3072:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3060:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "3060:22:6"
                      },
                      {
                        "expression": {
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 901,
                            "name": "uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "3093:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 902,
                            "name": "_uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "3107:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "src": "3093:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 904,
                        "nodeType": "ExpressionStatement",
                        "src": "3093:26:6"
                      },
                      {
                        "expression": {
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 905,
                            "name": "dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "3130:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 906,
                            "name": "_dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 864,
                            "src": "3139:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3130:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 908,
                        "nodeType": "ExpressionStatement",
                        "src": "3130:16:6"
                      },
                      {
                        "expression": {
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 909,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "3157:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketFactory_$2816",
                              "typeString": "contract MarketFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 910,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 848,
                            "src": "3167:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketFactory_$2816",
                              "typeString": "contract MarketFactory"
                            }
                          },
                          "src": "3157:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketFactory_$2816",
                            "typeString": "contract MarketFactory"
                          }
                        },
                        "id": 912,
                        "nodeType": "ExpressionStatement",
                        "src": "3157:18:6"
                      },
                      {
                        "expression": {
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 913,
                            "name": "tReporting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "3186:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 914,
                            "name": "_tReporting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "3199:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3186:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 916,
                        "nodeType": "ExpressionStatement",
                        "src": "3186:24:6"
                      },
                      {
                        "expression": {
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 917,
                            "name": "minTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "3221:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 918,
                            "name": "_minTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "3230:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3221:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 920,
                        "nodeType": "ExpressionStatement",
                        "src": "3221:16:6"
                      },
                      {
                        "expression": {
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 921,
                            "name": "avgPriceSwitch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "3248:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 922,
                            "name": "_avgPriceSwitch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "3265:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3248:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 924,
                        "nodeType": "ExpressionStatement",
                        "src": "3248:32:6"
                      }
                    ]
                  },
                  "id": 926,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 848,
                        "mutability": "mutable",
                        "name": "_factory",
                        "nameLocation": "2677:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2663:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketFactory_$2816",
                          "typeString": "contract MarketFactory"
                        },
                        "typeName": {
                          "id": 847,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 846,
                            "name": "MarketFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2816,
                            "src": "2663:13:6"
                          },
                          "referencedDeclaration": 2816,
                          "src": "2663:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketFactory_$2816",
                            "typeString": "contract MarketFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2694:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2687:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 850,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 849,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 77,
                            "src": "2687:6:6"
                          },
                          "referencedDeclaration": 77,
                          "src": "2687:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "_uniswapPair",
                        "nameLocation": "2717:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2702:27:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                          "typeString": "contract IUniswapV2Pair"
                        },
                        "typeName": {
                          "id": 853,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 852,
                            "name": "IUniswapV2Pair",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 568,
                            "src": "2702:14:6"
                          },
                          "referencedDeclaration": 568,
                          "src": "2702:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "_period",
                        "nameLocation": "2736:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2731:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2731:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 858,
                        "mutability": "mutable",
                        "name": "_initTimestamp",
                        "nameLocation": "2750:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2745:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 857,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2745:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "_taxMarket",
                        "nameLocation": "2771:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2766:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2766:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "_feeMarket",
                        "nameLocation": "2788:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2783:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "_dPrice",
                        "nameLocation": "2805:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2800:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "_tReporting",
                        "nameLocation": "2819:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2814:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2814:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "_minTax",
                        "nameLocation": "2837:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2832:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2832:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "_avgPriceSwitch",
                        "nameLocation": "2851:15:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2846:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2846:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2662:205:6"
                  },
                  "returnParameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2868:0:6"
                  },
                  "scope": 2705,
                  "src": "2651:637:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 948,
                    "nodeType": "Block",
                    "src": "3332:128:6",
                    "statements": [
                      {
                        "assignments": [
                          931
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 931,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "3348:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 948,
                            "src": "3343:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 930,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3343:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 939,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 932,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "3354:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 933,
                                  "name": "taxMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "3366:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 934,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3365:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3354:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "hexValue": "313030303030",
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3380:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100000"
                              }
                            ],
                            "id": 937,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3379:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            }
                          },
                          "src": "3354:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3343:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 941,
                                "name": "tax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "3406:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 942,
                                "name": "minTax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 759,
                                "src": "3413:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3406:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "505249434520495320544f4f204c4f57",
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3421:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                "typeString": "literal_string \"PRICE IS TOO LOW\""
                              },
                              "value": "PRICE IS TOO LOW"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                "typeString": "literal_string \"PRICE IS TOO LOW\""
                              }
                            ],
                            "id": 940,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3398:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3398:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 946,
                        "nodeType": "ExpressionStatement",
                        "src": "3398:42:6"
                      },
                      {
                        "id": 947,
                        "nodeType": "PlaceholderStatement",
                        "src": "3451:1:6"
                      }
                    ]
                  },
                  "id": 949,
                  "name": "minTaxCheck",
                  "nameLocation": "3305:11:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "3322:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 949,
                        "src": "3317:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3317:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3316:15:6"
                  },
                  "src": "3296:164:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 962,
                    "nodeType": "Block",
                    "src": "3494:94:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 952,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3513:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3513:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 954,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 752,
                                    "src": "3527:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MarketFactory_$2816",
                                      "typeString": "contract MarketFactory"
                                    }
                                  },
                                  "id": 955,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2724,
                                  "src": "3527:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3527:15:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3513:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f542054484520464143544f5259204f574e4552",
                              "id": 958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3544:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4",
                                "typeString": "literal_string \"NOT THE FACTORY OWNER\""
                              },
                              "value": "NOT THE FACTORY OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30ec104cab15331c9462daea45d2d7abc2b2141ad6e8325d2df8f951a2e49fa4",
                                "typeString": "literal_string \"NOT THE FACTORY OWNER\""
                              }
                            ],
                            "id": 951,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3505:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3505:63:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 960,
                        "nodeType": "ExpressionStatement",
                        "src": "3505:63:6"
                      },
                      {
                        "id": 961,
                        "nodeType": "PlaceholderStatement",
                        "src": "3579:1:6"
                      }
                    ]
                  },
                  "id": 963,
                  "name": "isFactoryOwner",
                  "nameLocation": "3477:14:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 950,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3491:2:6"
                  },
                  "src": "3468:120:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "3635:543:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 967,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "3731:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 969,
                                "indexExpression": {
                                  "id": 968,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 965,
                                  "src": "3738:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3731:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 970,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "3731:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3778:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3731:48:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 973,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "3783:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 975,
                                "indexExpression": {
                                  "id": 974,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 965,
                                  "src": "3790:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3783:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "3783:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3828:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3783:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3731:98:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 985,
                        "nodeType": "IfStatement",
                        "src": "3727:216:6",
                        "trueBody": {
                          "id": 984,
                          "nodeType": "Block",
                          "src": "3831:112:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "494e56414c4944204652414d45205052494345",
                                    "id": 981,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3909:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    },
                                    "value": "INVALID FRAME PRICE"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    }
                                  ],
                                  "id": 980,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "3902:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3902:29:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 983,
                              "nodeType": "ExpressionStatement",
                              "src": "3902:29:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 986,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "3957:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 988,
                              "indexExpression": {
                                "id": 987,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "3964:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3957:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePriceCumulativeStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 781,
                            "src": "3957:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 990,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "4004:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 992,
                              "indexExpression": {
                                "id": 991,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "4011:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4004:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 993,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePriceCumulativeEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 783,
                            "src": "4004:41:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3957:88:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1000,
                        "nodeType": "IfStatement",
                        "src": "3953:206:6",
                        "trueBody": {
                          "id": 999,
                          "nodeType": "Block",
                          "src": "4047:112:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "494e56414c4944204652414d45205052494345",
                                    "id": 996,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4125:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    },
                                    "value": "INVALID FRAME PRICE"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_5ff53dc658327d10a26b3d05757c09991cb24ff7e0cf4599334cd4bddb290526",
                                      "typeString": "literal_string \"INVALID FRAME PRICE\""
                                    }
                                  ],
                                  "id": 995,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "4118:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4118:29:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 998,
                              "nodeType": "ExpressionStatement",
                              "src": "4118:29:6"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1001,
                        "nodeType": "PlaceholderStatement",
                        "src": "4169:1:6"
                      }
                    ]
                  },
                  "id": 1003,
                  "name": "hasValidPrices",
                  "nameLocation": "3605:14:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 965,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "3625:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "3620:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 964,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3620:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3619:15:6"
                  },
                  "src": "3596:582:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1029,
                    "nodeType": "Block",
                    "src": "4398:143:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1011,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "4413:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1012,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "4426:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4413:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1016,
                        "nodeType": "IfStatement",
                        "src": "4409:52:6",
                        "trueBody": {
                          "expression": {
                            "id": 1014,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "4448:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1010,
                          "id": 1015,
                          "nodeType": "Return",
                          "src": "4441:20:6"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1017,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "4479:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1021,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1018,
                                        "name": "timestamp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1006,
                                        "src": "4493:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "id": 1019,
                                            "name": "initTimestamp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 735,
                                            "src": "4506:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1020,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4505:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4493:27:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1022,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4492:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "id": 1023,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "4525:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1024,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4524:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4492:40:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1026,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4491:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4479:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1010,
                        "id": 1028,
                        "nodeType": "Return",
                        "src": "4472:61:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1004,
                    "nodeType": "StructuredDocumentation",
                    "src": "4186:137:6",
                    "text": "@notice Calculate frames timestamp (beggining of frame)\n @param timestamp In seconds\n @return frame's timestamp (key)"
                  },
                  "functionSelector": "5b3ad63e",
                  "id": 1030,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcFrameTimestamp",
                  "nameLocation": "4338:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1007,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1006,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "4361:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "4356:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1005,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4356:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4355:16:6"
                  },
                  "returnParameters": {
                    "id": 1010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1009,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "4393:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1008,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4393:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4392:6:6"
                  },
                  "scope": 2705,
                  "src": "4329:212:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1052,
                    "nodeType": "Block",
                    "src": "4761:93:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1038,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "4776:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4785:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4776:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1043,
                        "nodeType": "IfStatement",
                        "src": "4772:29:6",
                        "trueBody": {
                          "expression": {
                            "id": 1041,
                            "name": "dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "4795:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1037,
                          "id": 1042,
                          "nodeType": "Return",
                          "src": "4788:13:6"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1044,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1033,
                              "src": "4819:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 1045,
                                  "name": "dPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "4828:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1046,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4827:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4819:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 1048,
                                "name": "dPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 745,
                                "src": "4839:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1049,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4838:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4819:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1037,
                        "id": 1051,
                        "nodeType": "Return",
                        "src": "4812:34:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1031,
                    "nodeType": "StructuredDocumentation",
                    "src": "4553:145:6",
                    "text": "@notice Calculate top boundary of a lot\n @param value Arbitary price of market's Uniswap pair\n @return lot key (top boundary)"
                  },
                  "functionSelector": "9592de18",
                  "id": 1053,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcLotKey",
                  "nameLocation": "4713:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4728:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "4723:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4723:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4722:12:6"
                  },
                  "returnParameters": {
                    "id": 1037,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "4756:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4756:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4755:6:6"
                  },
                  "scope": 2705,
                  "src": "4704:150:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1081,
                    "nodeType": "Block",
                    "src": "5146:162:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1061,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1056,
                            "src": "5166:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1063,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5196:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5196:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1062,
                              "name": "clcFrameTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1030,
                              "src": "5178:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 1065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5178:34:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5166:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1069,
                        "nodeType": "IfStatement",
                        "src": "5162:60:6",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5221:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 1060,
                          "id": 1068,
                          "nodeType": "Return",
                          "src": "5214:8:6"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1074,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1070,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1056,
                                          "src": "5260:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "expression": {
                                                "id": 1071,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "5272:5:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1072,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "5272:15:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1073,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "5271:17:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5260:28:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1075,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5259:30:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1076,
                                    "name": "period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 733,
                                    "src": "5292:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5259:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1078,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5258:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1079,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5257:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1060,
                        "id": 1080,
                        "nodeType": "Return",
                        "src": "5250:50:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1054,
                    "nodeType": "StructuredDocumentation",
                    "src": "4862:212:6",
                    "text": "@notice Calculate how many frames there are left untill given frame in input\n @param frameKey Timestamp of an arbitary frame in the future\n @return number of frames (whole numbers: n=0,1,2...)"
                  },
                  "id": 1082,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcFramesLeft",
                  "nameLocation": "5089:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1057,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "5108:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1082,
                        "src": "5103:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5103:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5102:15:6"
                  },
                  "returnParameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1082,
                        "src": "5141:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5141:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5140:6:6"
                  },
                  "scope": 2705,
                  "src": "5080:228:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "5571:352:6",
                    "statements": [
                      {
                        "assignments": [
                          1094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1094,
                            "mutability": "mutable",
                            "name": "timeDiff",
                            "nameLocation": "5664:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1131,
                            "src": "5659:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1093,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5659:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1104,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1095,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "5675:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1097,
                              "indexExpression": {
                                "id": 1096,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1085,
                                "src": "5682:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5675:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1098,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 775,
                            "src": "5675:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1099,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "5713:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1101,
                              "indexExpression": {
                                "id": 1100,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1085,
                                "src": "5720:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5713:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 773,
                            "src": "5713:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5675:75:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5659:91:6"
                      },
                      {
                        "expression": {
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1105,
                            "name": "avgPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "5762:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1124,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 1120,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 1112,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 814,
                                                      "src": "5808:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 1114,
                                                    "indexExpression": {
                                                      "id": 1113,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1085,
                                                      "src": "5815:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5808:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 1115,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "oraclePriceCumulativeEnd",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 783,
                                                  "src": "5808:41:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 1116,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 814,
                                                      "src": "5852:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 1118,
                                                    "indexExpression": {
                                                      "id": 1117,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1085,
                                                      "src": "5859:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5852:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 1119,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "oraclePriceCumulativeStart",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 781,
                                                  "src": "5852:43:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "5808:87:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 1121,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "5807:89:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "id": 1122,
                                                "name": "timeDiff",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1094,
                                                "src": "5900:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 1123,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "5899:10:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "5807:102:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5799:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint224_$",
                                          "typeString": "type(uint224)"
                                        },
                                        "typeName": {
                                          "id": 1110,
                                          "name": "uint224",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5799:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1125,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5799:111:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1108,
                                      "name": "FixedPoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "5778:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                        "typeString": "type(library FixedPoint)"
                                      }
                                    },
                                    "id": 1109,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "uq112x112",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 82,
                                    "src": "5778:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                                      "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                    }
                                  },
                                  "id": 1126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5778:133:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 81,
                                "src": "5778:136:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              ],
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5773:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1106,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "5773:4:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5773:142:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5762:153:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "5762:153:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1083,
                    "nodeType": "StructuredDocumentation",
                    "src": "5316:156:6",
                    "text": "@notice Calculate average price of a frame\n @param frameKey Timestamp of an arbitary frame \n @return avgPrice Time weighted aveage price"
                  },
                  "functionSelector": "41a8b6f8",
                  "id": 1132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1088,
                          "name": "frameKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "5533:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1089,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1087,
                        "name": "hasValidPrices",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1003,
                        "src": "5518:14:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5518:24:6"
                    }
                  ],
                  "name": "clcPrice",
                  "nameLocation": "5487:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "5501:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "5496:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5496:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5495:15:6"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "avgPrice",
                        "nameLocation": "5561:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "5556:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5556:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5555:15:6"
                  },
                  "scope": 2705,
                  "src": "5478:445:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1187,
                    "nodeType": "Block",
                    "src": "6381:489:6",
                    "statements": [
                      {
                        "assignments": [
                          1145
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1145,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "6401:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1187,
                            "src": "6396:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1144,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6396:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1149,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1147,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "6430:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1146,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "6412:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6412:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6396:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1151,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1145,
                                "src": "6581:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1153,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "6611:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "6611:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1152,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1030,
                                  "src": "6593:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6593:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6581:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54484953204c4f5420495320494e20412050415354204652414d45",
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6629:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                                "typeString": "literal_string \"THIS LOT IS IN A PAST FRAME\""
                              },
                              "value": "THIS LOT IS IN A PAST FRAME"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_824790d78d6527b6f4a06b9a8a42d8cc8ebe8a7565373089559c919b2d62adcc",
                                "typeString": "literal_string \"THIS LOT IS IN A PAST FRAME\""
                              }
                            ],
                            "id": 1150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6573:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6573:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1159,
                        "nodeType": "ExpressionStatement",
                        "src": "6573:86:6"
                      },
                      {
                        "assignments": [
                          1161
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1161,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "6683:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1187,
                            "src": "6678:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1160,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6678:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1165,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1163,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "6702:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1162,
                            "name": "clcLotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "6692:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6692:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6678:34:6"
                      },
                      {
                        "assignments": [
                          1167
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1167,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "6728:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1187,
                            "src": "6723:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1166,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6723:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1172,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1169,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "6741:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1170,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1139,
                              "src": "6751:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1168,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1809,
                            "src": "6734:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6734:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6723:37:6"
                      },
                      {
                        "expression": {
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1173,
                            "name": "cmpltAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1142,
                            "src": "6771:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1174,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "6783:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1176,
                                    "indexExpression": {
                                      "id": 1175,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "6790:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6783:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1177,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 794,
                                  "src": "6783:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 1179,
                                "indexExpression": {
                                  "id": 1178,
                                  "name": "lotKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1161,
                                  "src": "6805:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6783:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$838_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 834,
                              "src": "6783:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1181,
                              "name": "tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1167,
                              "src": "6832:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6783:52:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6771:64:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1184,
                        "nodeType": "ExpressionStatement",
                        "src": "6771:64:6"
                      },
                      {
                        "expression": {
                          "id": 1185,
                          "name": "cmpltAmnt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "6853:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1143,
                        "id": 1186,
                        "nodeType": "Return",
                        "src": "6846:16:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "5931:332:6",
                    "text": "@notice Calculate amount required to approve to buy a lot\n @param timestamp Timestamp that determins which frame it is\n @param pairPrice Value is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax\n @return cmpltAmnt complete price of a lot"
                  },
                  "functionSelector": "a4d246ff",
                  "id": 1188,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcAmountToApprove",
                  "nameLocation": "6278:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "6302:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "6297:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6297:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "6318:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "6313:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6313:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "6334:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "6329:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6329:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6296:47:6"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "cmpltAmnt",
                        "nameLocation": "6370:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "6365:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6365:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6364:16:6"
                  },
                  "scope": 2705,
                  "src": "6269:601:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "7410:439:6",
                    "statements": [
                      {
                        "assignments": [
                          1201
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1201,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "7429:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "7424:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1200,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7424:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1205,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1203,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "7458:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1202,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "7440:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7440:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7424:44:6"
                      },
                      {
                        "assignments": [
                          1207
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1207,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "7586:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "7581:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1206,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7581:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1211,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1209,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "7605:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1208,
                            "name": "clcLotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "7595:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7595:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7581:34:6"
                      },
                      {
                        "assignments": [
                          1213
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1213,
                            "mutability": "mutable",
                            "name": "tax1",
                            "nameLocation": "7631:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "7626:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1212,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7626:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1224,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1215,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "7645:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1216,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "7655:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1218,
                                    "indexExpression": {
                                      "id": 1217,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1201,
                                      "src": "7662:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7655:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1219,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 794,
                                  "src": "7655:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 1221,
                                "indexExpression": {
                                  "id": 1220,
                                  "name": "lotKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "7677:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7655:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$838_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 834,
                              "src": "7655:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1214,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1809,
                            "src": "7638:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7638:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7626:76:6"
                      },
                      {
                        "assignments": [
                          1226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1226,
                            "mutability": "mutable",
                            "name": "tax2",
                            "nameLocation": "7718:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "7713:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1225,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7713:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1231,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1228,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "7732:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1229,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1195,
                              "src": "7742:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1227,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1809,
                            "src": "7725:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7725:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7713:38:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1232,
                            "name": "tax1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "7765:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1233,
                            "name": "tax2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "7773:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7765:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1239,
                              "name": "amnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1198,
                              "src": "7803:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1240,
                                "name": "tax2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1226,
                                "src": "7810:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1241,
                                "name": "tax1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1213,
                                "src": "7815:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7810:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7803:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1244,
                          "nodeType": "ExpressionStatement",
                          "src": "7803:16:6"
                        },
                        "id": 1245,
                        "nodeType": "IfStatement",
                        "src": "7762:57:6",
                        "trueBody": {
                          "expression": {
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1235,
                              "name": "amnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1198,
                              "src": "7779:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7786:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7779:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1238,
                          "nodeType": "ExpressionStatement",
                          "src": "7779:8:6"
                        }
                      },
                      {
                        "expression": {
                          "id": 1246,
                          "name": "amnt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "7837:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1199,
                        "id": 1247,
                        "nodeType": "Return",
                        "src": "7830:11:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1189,
                    "nodeType": "StructuredDocumentation",
                    "src": "6878:410:6",
                    "text": "@notice Calculate amount required to change lot's price.\n @dev Calculate difference in tax values with old and new acquisition price\n @param timestamp Timestamp that determins which frame it is\n @param pairPrice Value is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax\n @return amnt complete price of a lot"
                  },
                  "functionSelector": "3656d5ee",
                  "id": 1249,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcAmountToApproveForUpdate",
                  "nameLocation": "7303:27:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "7336:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "7331:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7331:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "7352:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "7347:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7347:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "7368:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "7363:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7363:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7330:47:6"
                  },
                  "returnParameters": {
                    "id": 1199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "amnt",
                        "nameLocation": "7404:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "7399:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7399:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7398:11:6"
                  },
                  "scope": 2705,
                  "src": "7294:555:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1309,
                    "nodeType": "Block",
                    "src": "8330:325:6",
                    "statements": [
                      {
                        "assignments": [
                          1264
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1264,
                            "mutability": "mutable",
                            "name": "openFrames",
                            "nameLocation": "8355:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1309,
                            "src": "8341:24:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1262,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8341:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1263,
                              "nodeType": "ArrayTypeName",
                              "src": "8341:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1270,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1268,
                              "name": "numOfFrames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "8379:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8368:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1265,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8372:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1266,
                              "nodeType": "ArrayTypeName",
                              "src": "8372:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8368:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8341:50:6"
                      },
                      {
                        "body": {
                          "id": 1305,
                          "nodeType": "Block",
                          "src": "8441:179:6",
                          "statements": [
                            {
                              "assignments": [
                                1282
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1282,
                                  "mutability": "mutable",
                                  "name": "frameKey",
                                  "nameLocation": "8461:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1305,
                                  "src": "8456:13:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1281,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8456:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1289,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1283,
                                  "name": "startFrame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1252,
                                  "src": "8472:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1286,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1284,
                                        "name": "period",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 733,
                                        "src": "8484:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1285,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1272,
                                        "src": "8491:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8484:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1287,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8483:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8472:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8456:37:6"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                },
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1290,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "8511:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1292,
                                    "indexExpression": {
                                      "id": 1291,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1282,
                                      "src": "8518:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8511:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1293,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 786,
                                  "src": "8511:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1294,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "8537:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "NULL",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 766,
                                  "src": "8537:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "8511:37:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1304,
                              "nodeType": "IfStatement",
                              "src": "8508:101:6",
                              "trueBody": {
                                "id": 1303,
                                "nodeType": "Block",
                                "src": "8550:59:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1301,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1297,
                                          "name": "openFrames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1264,
                                          "src": "8569:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1299,
                                        "indexExpression": {
                                          "id": 1298,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1272,
                                          "src": "8580:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8569:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1300,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1282,
                                        "src": "8585:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8569:24:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1302,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8569:24:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1275,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "8418:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1276,
                            "name": "numOfFrames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "8423:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8418:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1306,
                        "initializationExpression": {
                          "assignments": [
                            1272
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1272,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8411:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1306,
                              "src": "8406:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1271,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8406:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1274,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8415:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8406:10:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8436:3:6",
                            "subExpression": {
                              "id": 1278,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1272,
                              "src": "8436:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1280,
                          "nodeType": "ExpressionStatement",
                          "src": "8436:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "8402:218:6"
                      },
                      {
                        "expression": {
                          "id": 1307,
                          "name": "openFrames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "8637:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 1259,
                        "id": 1308,
                        "nodeType": "Return",
                        "src": "8630:17:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1250,
                    "nodeType": "StructuredDocumentation",
                    "src": "7857:371:6",
                    "text": "@notice Get created and still open frames\n @dev You can't get (current) frame's index in the framesKeys array,\n @dev so for-loop through the whole array is needed\n @dev other option would be with additional parameter: startIndex\n @param numOfFrames Timestamp that determins which frame it is\n @return uint[] array of frame keys"
                  },
                  "functionSelector": "14aa5a99",
                  "id": 1310,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOpenFrameKeys",
                  "nameLocation": "8243:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1252,
                        "mutability": "mutable",
                        "name": "startFrame",
                        "nameLocation": "8265:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "8260:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8260:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1254,
                        "mutability": "mutable",
                        "name": "numOfFrames",
                        "nameLocation": "8282:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "8277:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1253,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8277:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8259:35:6"
                  },
                  "returnParameters": {
                    "id": 1259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1258,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "8316:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1256,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8316:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1257,
                          "nodeType": "ArrayTypeName",
                          "src": "8316:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8315:15:6"
                  },
                  "scope": 2705,
                  "src": "8234:421:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1527,
                    "nodeType": "Block",
                    "src": "9144:1435:6",
                    "statements": [
                      {
                        "assignments": [
                          1321
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1321,
                            "mutability": "mutable",
                            "name": "currentFrame",
                            "nameLocation": "9160:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1527,
                            "src": "9155:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1320,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9155:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1326,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1323,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9193:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9193:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1322,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "9175:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9175:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9155:54:6"
                      },
                      {
                        "expression": {
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1327,
                            "name": "userLots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "9220:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Market.Lot memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "32303030",
                                "id": 1332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9241:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000_by_1",
                                  "typeString": "int_const 2000"
                                },
                                "value": "2000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2000_by_1",
                                  "typeString": "int_const 2000"
                                }
                              ],
                              "id": 1331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "9231:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct Market.Lot memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 1329,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1328,
                                    "name": "Lot",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 838,
                                    "src": "9235:3:6"
                                  },
                                  "referencedDeclaration": 838,
                                  "src": "9235:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$838_storage_ptr",
                                    "typeString": "struct Market.Lot"
                                  }
                                },
                                "id": 1330,
                                "nodeType": "ArrayTypeName",
                                "src": "9235:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Lot_$838_storage_$dyn_storage_ptr",
                                  "typeString": "struct Market.Lot[]"
                                }
                              }
                            },
                            "id": 1333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9231:15:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Market.Lot memory[] memory"
                            }
                          },
                          "src": "9220:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Market.Lot memory[] memory"
                          }
                        },
                        "id": 1335,
                        "nodeType": "ExpressionStatement",
                        "src": "9220:26:6"
                      },
                      {
                        "assignments": [
                          1338
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1338,
                            "mutability": "mutable",
                            "name": "lot",
                            "nameLocation": "9268:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1527,
                            "src": "9257:14:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                              "typeString": "struct Market.Lot"
                            },
                            "typeName": {
                              "id": 1337,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1336,
                                "name": "Lot",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 838,
                                "src": "9257:3:6"
                              },
                              "referencedDeclaration": 838,
                              "src": "9257:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage_ptr",
                                "typeString": "struct Market.Lot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1339,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9257:14:6"
                      },
                      {
                        "assignments": [
                          1341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1341,
                            "mutability": "mutable",
                            "name": "counter",
                            "nameLocation": "9287:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1527,
                            "src": "9282:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1340,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9282:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1343,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9297:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9282:16:6"
                      },
                      {
                        "assignments": [
                          1345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1345,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "9314:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1527,
                            "src": "9309:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1344,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9309:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1346,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9309:13:6"
                      },
                      {
                        "body": {
                          "id": 1442,
                          "nodeType": "Block",
                          "src": "9366:608:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1357,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1348,
                                  "src": "9387:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "3530",
                                  "id": 1358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9392:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_50_by_1",
                                    "typeString": "int_const 50"
                                  },
                                  "value": "50"
                                },
                                "src": "9387:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "expression": {
                                  "id": 1379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1372,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1345,
                                    "src": "9457:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1377,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1373,
                                          "name": "currentFrame",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1321,
                                          "src": "9469:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1376,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1374,
                                            "name": "period",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 733,
                                            "src": "9484:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 1375,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1348,
                                            "src": "9491:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9484:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9469:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1378,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9468:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9457:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1380,
                                "nodeType": "ExpressionStatement",
                                "src": "9457:36:6"
                              },
                              "id": 1381,
                              "nodeType": "IfStatement",
                              "src": "9383:110:6",
                              "trueBody": {
                                "expression": {
                                  "id": 1370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1360,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1345,
                                    "src": "9396:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1361,
                                          "name": "currentFrame",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1321,
                                          "src": "9408:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1367,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1362,
                                            "name": "period",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 733,
                                            "src": "9423:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 1365,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 1363,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1348,
                                                  "src": "9431:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "hexValue": "3530",
                                                  "id": 1364,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "9433:2:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_50_by_1",
                                                    "typeString": "int_const 50"
                                                  },
                                                  "value": "50"
                                                },
                                                "src": "9431:4:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 1366,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "9430:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9423:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9408:28:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1369,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9407:30:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9396:41:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1371,
                                "nodeType": "ExpressionStatement",
                                "src": "9396:41:6"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                },
                                "id": 1388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1382,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "9514:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1384,
                                    "indexExpression": {
                                      "id": 1383,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1345,
                                      "src": "9521:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9514:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1385,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 786,
                                  "src": "9514:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1386,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "9540:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "OPENED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 767,
                                  "src": "9540:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "9514:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1441,
                              "nodeType": "IfStatement",
                              "src": "9510:453:6",
                              "trueBody": {
                                "id": 1440,
                                "nodeType": "Block",
                                "src": "9555:408:6",
                                "statements": [
                                  {
                                    "body": {
                                      "id": 1438,
                                      "nodeType": "Block",
                                      "src": "9629:319:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1415,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1403,
                                              "name": "lot",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1338,
                                              "src": "9652:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                "typeString": "struct Market.Lot memory"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 1404,
                                                    "name": "frames",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 814,
                                                    "src": "9658:6:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                    }
                                                  },
                                                  "id": 1406,
                                                  "indexExpression": {
                                                    "id": 1405,
                                                    "name": "frameKey",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1345,
                                                    "src": "9665:8:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "9658:16:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                    "typeString": "struct Market.Frame storage ref"
                                                  }
                                                },
                                                "id": 1407,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "lots",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 794,
                                                "src": "9658:21:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                                }
                                              },
                                              "id": 1414,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 1408,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 814,
                                                      "src": "9680:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 1410,
                                                    "indexExpression": {
                                                      "id": 1409,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1345,
                                                      "src": "9687:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "9680:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 1411,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "lotKeys",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 789,
                                                  "src": "9680:24:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                  }
                                                },
                                                "id": 1413,
                                                "indexExpression": {
                                                  "id": 1412,
                                                  "name": "j",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1390,
                                                  "src": "9705:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "9680:27:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "9658:50:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                                "typeString": "struct Market.Lot storage ref"
                                              }
                                            },
                                            "src": "9652:56:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                              "typeString": "struct Market.Lot memory"
                                            }
                                          },
                                          "id": 1416,
                                          "nodeType": "ExpressionStatement",
                                          "src": "9652:56:6"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 1420,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 1417,
                                                "name": "lot",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1338,
                                                "src": "9734:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                  "typeString": "struct Market.Lot memory"
                                                }
                                              },
                                              "id": 1418,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lotOwner",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 832,
                                              "src": "9734:12:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "id": 1419,
                                              "name": "user",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1313,
                                              "src": "9750:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "9734:20:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1437,
                                          "nodeType": "IfStatement",
                                          "src": "9731:197:6",
                                          "trueBody": {
                                            "id": 1436,
                                            "nodeType": "Block",
                                            "src": "9756:172:6",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 1425,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "baseExpression": {
                                                      "id": 1421,
                                                      "name": "userLots",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1318,
                                                      "src": "9783:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct Market.Lot memory[] memory"
                                                      }
                                                    },
                                                    "id": 1423,
                                                    "indexExpression": {
                                                      "id": 1422,
                                                      "name": "counter",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1341,
                                                      "src": "9792:7:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "9783:17:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "id": 1424,
                                                    "name": "lot",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1338,
                                                    "src": "9802:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "src": "9783:22:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                    "typeString": "struct Market.Lot memory"
                                                  }
                                                },
                                                "id": 1426,
                                                "nodeType": "ExpressionStatement",
                                                "src": "9783:22:6"
                                              },
                                              {
                                                "expression": {
                                                  "id": 1428,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "UnaryOperation",
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "src": "9832:10:6",
                                                  "subExpression": {
                                                    "id": 1427,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1341,
                                                    "src": "9832:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1429,
                                                "nodeType": "ExpressionStatement",
                                                "src": "9832:10:6"
                                              },
                                              {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1432,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1430,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1341,
                                                    "src": "9872:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "hexValue": "32303030",
                                                    "id": 1431,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "9883:4:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2000_by_1",
                                                      "typeString": "int_const 2000"
                                                    },
                                                    "value": "2000"
                                                  },
                                                  "src": "9872:15:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 1435,
                                                "nodeType": "IfStatement",
                                                "src": "9869:35:6",
                                                "trueBody": {
                                                  "expression": {
                                                    "id": 1433,
                                                    "name": "userLots",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1318,
                                                    "src": "9896:8:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "struct Market.Lot memory[] memory"
                                                    }
                                                  },
                                                  "functionReturnParameters": 1319,
                                                  "id": 1434,
                                                  "nodeType": "Return",
                                                  "src": "9889:15:6"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1393,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1390,
                                        "src": "9589:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1394,
                                              "name": "frames",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 814,
                                              "src": "9591:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                              }
                                            },
                                            "id": 1396,
                                            "indexExpression": {
                                              "id": 1395,
                                              "name": "frameKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1345,
                                              "src": "9598:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9591:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Frame_$795_storage",
                                              "typeString": "struct Market.Frame storage ref"
                                            }
                                          },
                                          "id": 1397,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lotKeys",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 789,
                                          "src": "9591:24:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 1398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "9591:31:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9589:33:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1439,
                                    "initializationExpression": {
                                      "assignments": [
                                        1390
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 1390,
                                          "mutability": "mutable",
                                          "name": "j",
                                          "nameLocation": "9584:1:6",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 1439,
                                          "src": "9579:6:6",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 1389,
                                            "name": "uint",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "9579:4:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 1392,
                                      "initialValue": {
                                        "hexValue": "30",
                                        "id": 1391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9586:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "9579:8:6"
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "id": 1401,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "9624:3:6",
                                        "subExpression": {
                                          "id": 1400,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1390,
                                          "src": "9624:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1402,
                                      "nodeType": "ExpressionStatement",
                                      "src": "9624:3:6"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "9574:374:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1351,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1348,
                            "src": "9351:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9356:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "9351:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1443,
                        "initializationExpression": {
                          "assignments": [
                            1348
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1348,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9344:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1443,
                              "src": "9339:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1347,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9339:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1350,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9348:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9339:10:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9361:3:6",
                            "subExpression": {
                              "id": 1354,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1348,
                              "src": "9361:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1356,
                          "nodeType": "ExpressionStatement",
                          "src": "9361:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "9335:639:6"
                      },
                      {
                        "body": {
                          "id": 1523,
                          "nodeType": "Block",
                          "src": "10016:530:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1454,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1345,
                                  "src": "10031:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1455,
                                        "name": "currentFrame",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1321,
                                        "src": "10043:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1458,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1456,
                                          "name": "period",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 733,
                                          "src": "10058:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 1457,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1445,
                                          "src": "10065:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10058:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10043:23:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1460,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10042:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10031:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1462,
                              "nodeType": "ExpressionStatement",
                              "src": "10031:36:6"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                },
                                "id": 1469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1463,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "10086:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1465,
                                    "indexExpression": {
                                      "id": 1464,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1345,
                                      "src": "10093:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10086:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1466,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 786,
                                  "src": "10086:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1467,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "10112:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "CLOSED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "10112:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$769",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "10086:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1522,
                              "nodeType": "IfStatement",
                              "src": "10082:453:6",
                              "trueBody": {
                                "id": 1521,
                                "nodeType": "Block",
                                "src": "10127:408:6",
                                "statements": [
                                  {
                                    "body": {
                                      "id": 1519,
                                      "nodeType": "Block",
                                      "src": "10201:319:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1496,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1484,
                                              "name": "lot",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1338,
                                              "src": "10224:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                "typeString": "struct Market.Lot memory"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 1485,
                                                    "name": "frames",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 814,
                                                    "src": "10230:6:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                    }
                                                  },
                                                  "id": 1487,
                                                  "indexExpression": {
                                                    "id": 1486,
                                                    "name": "frameKey",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1345,
                                                    "src": "10237:8:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "10230:16:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                    "typeString": "struct Market.Frame storage ref"
                                                  }
                                                },
                                                "id": 1488,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "lots",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 794,
                                                "src": "10230:21:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                                }
                                              },
                                              "id": 1495,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 1489,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 814,
                                                      "src": "10252:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 1491,
                                                    "indexExpression": {
                                                      "id": 1490,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1345,
                                                      "src": "10259:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "10252:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 1492,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "lotKeys",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 789,
                                                  "src": "10252:24:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                  }
                                                },
                                                "id": 1494,
                                                "indexExpression": {
                                                  "id": 1493,
                                                  "name": "j",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1471,
                                                  "src": "10277:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10252:27:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10230:50:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                                "typeString": "struct Market.Lot storage ref"
                                              }
                                            },
                                            "src": "10224:56:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                              "typeString": "struct Market.Lot memory"
                                            }
                                          },
                                          "id": 1497,
                                          "nodeType": "ExpressionStatement",
                                          "src": "10224:56:6"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 1501,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 1498,
                                                "name": "lot",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1338,
                                                "src": "10306:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                  "typeString": "struct Market.Lot memory"
                                                }
                                              },
                                              "id": 1499,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lotOwner",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 832,
                                              "src": "10306:12:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "id": 1500,
                                              "name": "user",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1313,
                                              "src": "10322:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "10306:20:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1518,
                                          "nodeType": "IfStatement",
                                          "src": "10303:197:6",
                                          "trueBody": {
                                            "id": 1517,
                                            "nodeType": "Block",
                                            "src": "10328:172:6",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 1506,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "baseExpression": {
                                                      "id": 1502,
                                                      "name": "userLots",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1318,
                                                      "src": "10355:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct Market.Lot memory[] memory"
                                                      }
                                                    },
                                                    "id": 1504,
                                                    "indexExpression": {
                                                      "id": 1503,
                                                      "name": "counter",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1341,
                                                      "src": "10364:7:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "10355:17:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "id": 1505,
                                                    "name": "lot",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1338,
                                                    "src": "10374:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                      "typeString": "struct Market.Lot memory"
                                                    }
                                                  },
                                                  "src": "10355:22:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                                                    "typeString": "struct Market.Lot memory"
                                                  }
                                                },
                                                "id": 1507,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10355:22:6"
                                              },
                                              {
                                                "expression": {
                                                  "id": 1509,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "UnaryOperation",
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "src": "10404:10:6",
                                                  "subExpression": {
                                                    "id": 1508,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1341,
                                                    "src": "10404:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1510,
                                                "nodeType": "ExpressionStatement",
                                                "src": "10404:10:6"
                                              },
                                              {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1513,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1511,
                                                    "name": "counter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1341,
                                                    "src": "10444:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": ">=",
                                                  "rightExpression": {
                                                    "hexValue": "32303030",
                                                    "id": 1512,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10455:4:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2000_by_1",
                                                      "typeString": "int_const 2000"
                                                    },
                                                    "value": "2000"
                                                  },
                                                  "src": "10444:15:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 1516,
                                                "nodeType": "IfStatement",
                                                "src": "10441:35:6",
                                                "trueBody": {
                                                  "expression": {
                                                    "id": 1514,
                                                    "name": "userLots",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1318,
                                                    "src": "10468:8:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "struct Market.Lot memory[] memory"
                                                    }
                                                  },
                                                  "functionReturnParameters": 1319,
                                                  "id": 1515,
                                                  "nodeType": "Return",
                                                  "src": "10461:15:6"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1480,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1474,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1471,
                                        "src": "10161:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1475,
                                              "name": "frames",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 814,
                                              "src": "10163:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                              }
                                            },
                                            "id": 1477,
                                            "indexExpression": {
                                              "id": 1476,
                                              "name": "frameKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1345,
                                              "src": "10170:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10163:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Frame_$795_storage",
                                              "typeString": "struct Market.Frame storage ref"
                                            }
                                          },
                                          "id": 1478,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lotKeys",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 789,
                                          "src": "10163:24:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 1479,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "10163:31:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10161:33:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1520,
                                    "initializationExpression": {
                                      "assignments": [
                                        1471
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 1471,
                                          "mutability": "mutable",
                                          "name": "j",
                                          "nameLocation": "10156:1:6",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 1520,
                                          "src": "10151:6:6",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 1470,
                                            "name": "uint",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10151:4:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 1473,
                                      "initialValue": {
                                        "hexValue": "30",
                                        "id": 1472,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10158:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "10151:8:6"
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "id": 1482,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "10196:3:6",
                                        "subExpression": {
                                          "id": 1481,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1471,
                                          "src": "10196:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1483,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10196:3:6"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "10146:374:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1448,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1445,
                            "src": "10002:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3439",
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10007:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_49_by_1",
                              "typeString": "int_const 49"
                            },
                            "value": "49"
                          },
                          "src": "10002:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1524,
                        "initializationExpression": {
                          "assignments": [
                            1445
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1445,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9995:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1524,
                              "src": "9990:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1444,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9990:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1447,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 1446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9999:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9990:10:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10011:3:6",
                            "subExpression": {
                              "id": 1451,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1445,
                              "src": "10011:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1453,
                          "nodeType": "ExpressionStatement",
                          "src": "10011:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "9986:560:6"
                      },
                      {
                        "expression": {
                          "id": 1525,
                          "name": "userLots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1318,
                          "src": "10563:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Market.Lot memory[] memory"
                          }
                        },
                        "functionReturnParameters": 1319,
                        "id": 1526,
                        "nodeType": "Return",
                        "src": "10556:15:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1311,
                    "nodeType": "StructuredDocumentation",
                    "src": "8663:397:6",
                    "text": "@notice Get users lots in the nex 50 frames and previous 50 frames\n @dev First version, it works, but need code optimisation probably :P\n @param user User's address\n @return userLots Returns array of users lots (whole structs)\n @dev Array's size is 100 no mather how many lots this user actually has. \n @dev So the results have to be filtered before use"
                  },
                  "functionSelector": "659d0ca0",
                  "id": 1528,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserLots",
                  "nameLocation": "9075:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1313,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "9095:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1528,
                        "src": "9087:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1312,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9087:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9086:14:6"
                  },
                  "returnParameters": {
                    "id": 1319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1318,
                        "mutability": "mutable",
                        "name": "userLots",
                        "nameLocation": "9135:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1528,
                        "src": "9122:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Lot_$838_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Market.Lot[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1316,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1315,
                              "name": "Lot",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 838,
                              "src": "9122:3:6"
                            },
                            "referencedDeclaration": 838,
                            "src": "9122:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lot_$838_storage_ptr",
                              "typeString": "struct Market.Lot"
                            }
                          },
                          "id": 1317,
                          "nodeType": "ArrayTypeName",
                          "src": "9122:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Lot_$838_storage_$dyn_storage_ptr",
                            "typeString": "struct Market.Lot[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9121:23:6"
                  },
                  "scope": 2705,
                  "src": "9066:1513:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1541,
                    "nodeType": "Block",
                    "src": "10800:49:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1536,
                              "name": "userFrames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 819,
                              "src": "10818:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                "typeString": "mapping(address => uint256[] storage ref)"
                              }
                            },
                            "id": 1538,
                            "indexExpression": {
                              "id": 1537,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1531,
                              "src": "10829:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10818:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10818:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1535,
                        "id": 1540,
                        "nodeType": "Return",
                        "src": "10811:30:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1529,
                    "nodeType": "StructuredDocumentation",
                    "src": "10587:139:6",
                    "text": "@notice Get number of frame's that the address has bought lots in\n @param user User's address\n @return number of frames"
                  },
                  "functionSelector": "0ef19273",
                  "id": 1542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumOfUserFrames",
                  "nameLocation": "10741:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1531,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "10768:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1542,
                        "src": "10760:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10760:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10759:14:6"
                  },
                  "returnParameters": {
                    "id": 1535,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1534,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1542,
                        "src": "10795:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1533,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10795:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10794:6:6"
                  },
                  "scope": 2705,
                  "src": "10732:117:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1555,
                    "nodeType": "Block",
                    "src": "11059:42:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1551,
                            "name": "userFrames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 819,
                            "src": "11077:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 1553,
                          "indexExpression": {
                            "id": 1552,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1545,
                            "src": "11088:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11077:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1550,
                        "id": 1554,
                        "nodeType": "Return",
                        "src": "11070:23:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1543,
                    "nodeType": "StructuredDocumentation",
                    "src": "10857:123:6",
                    "text": "@notice Get frame's that the address has bought lots in\n @param user User's address\n @return frame keys"
                  },
                  "functionSelector": "9495833c",
                  "id": 1556,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserFrames",
                  "nameLocation": "10995:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1545,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "11017:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1556,
                        "src": "11009:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11009:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11008:14:6"
                  },
                  "returnParameters": {
                    "id": 1550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1549,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1556,
                        "src": "11043:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1547,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11043:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1548,
                          "nodeType": "ArrayTypeName",
                          "src": "11043:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11042:15:6"
                  },
                  "scope": 2705,
                  "src": "10986:115:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1574,
                    "nodeType": "Block",
                    "src": "11322:72:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1567,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "11357:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1569,
                              "indexExpression": {
                                "id": 1568,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1559,
                                "src": "11364:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11357:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lots",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 794,
                            "src": "11357:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                              "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                            }
                          },
                          "id": 1572,
                          "indexExpression": {
                            "id": 1571,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1561,
                            "src": "11379:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11357:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$838_storage",
                            "typeString": "struct Market.Lot storage ref"
                          }
                        },
                        "functionReturnParameters": 1566,
                        "id": 1573,
                        "nodeType": "Return",
                        "src": "11350:36:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1557,
                    "nodeType": "StructuredDocumentation",
                    "src": "11109:131:6",
                    "text": "@notice Get lot struct\n @param frameKey Frame's timestamp\n @param lotKey lot's key \n @return lot struct"
                  },
                  "functionSelector": "6f1aefc3",
                  "id": 1575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLot",
                  "nameLocation": "11255:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1562,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1559,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "11267:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "11262:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1558,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11262:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1561,
                        "mutability": "mutable",
                        "name": "lotKey",
                        "nameLocation": "11282:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "11277:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1560,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11277:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11261:28:6"
                  },
                  "returnParameters": {
                    "id": 1566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1565,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "11311:10:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lot_$838_memory_ptr",
                          "typeString": "struct Market.Lot"
                        },
                        "typeName": {
                          "id": 1564,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1563,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 838,
                            "src": "11311:3:6"
                          },
                          "referencedDeclaration": 838,
                          "src": "11311:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$838_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11310:12:6"
                  },
                  "scope": 2705,
                  "src": "11246:148:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1592,
                    "nodeType": "Block",
                    "src": "11928:74:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1585,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "11963:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1587,
                              "indexExpression": {
                                "id": 1586,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1578,
                                "src": "11970:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11963:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1588,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lotKeys",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 789,
                            "src": "11963:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1590,
                          "indexExpression": {
                            "id": 1589,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1580,
                            "src": "11988:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11963:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1584,
                        "id": 1591,
                        "nodeType": "Return",
                        "src": "11956:38:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1576,
                    "nodeType": "StructuredDocumentation",
                    "src": "11688:162:6",
                    "text": "@notice Get lotKey from index in lotKeys array\n @param frameKey Frame's timestamp\n @param index frameKeys array index \n @return lotKey"
                  },
                  "functionSelector": "3e16bc20",
                  "id": 1593,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLotKey",
                  "nameLocation": "11865:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1578,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "11880:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1593,
                        "src": "11875:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1577,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11875:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1580,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "11895:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1593,
                        "src": "11890:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1579,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11890:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11874:27:6"
                  },
                  "returnParameters": {
                    "id": 1584,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1583,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1593,
                        "src": "11923:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1582,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11923:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11922:6:6"
                  },
                  "scope": 2705,
                  "src": "11856:146:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1606,
                    "nodeType": "Block",
                    "src": "12393:79:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1601,
                              "name": "frames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "12436:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                              }
                            },
                            "id": 1603,
                            "indexExpression": {
                              "id": 1602,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1596,
                              "src": "12443:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12436:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Frame_$795_storage",
                              "typeString": "struct Market.Frame storage ref"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardFund",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 777,
                          "src": "12436:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1600,
                        "id": 1605,
                        "nodeType": "Return",
                        "src": "12429:34:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1594,
                    "nodeType": "StructuredDocumentation",
                    "src": "12010:310:6",
                    "text": "@notice Get frame's award amount (accumulation of different lot taxes)\n @notice Remaining tax of a lot owner get's returned after a sale (change of ownership). So the award amount isn't for sure untill the frame get's closed.\n @param frameKey Frame's timestamp\n @return award amount"
                  },
                  "functionSelector": "c84993af",
                  "id": 1607,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRewardAmount",
                  "nameLocation": "12335:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1596,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "12356:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "12351:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1595,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12351:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12350:15:6"
                  },
                  "returnParameters": {
                    "id": 1600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1599,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "12387:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1598,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12387:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12386:6:6"
                  },
                  "scope": 2705,
                  "src": "12326:146:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1616,
                    "nodeType": "Block",
                    "src": "12607:43:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1613,
                            "name": "framesKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "12625:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12625:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1612,
                        "id": 1615,
                        "nodeType": "Return",
                        "src": "12618:24:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1608,
                    "nodeType": "StructuredDocumentation",
                    "src": "12480:63:6",
                    "text": "@notice Get number of frames\n @return number frames"
                  },
                  "functionSelector": "89da88a3",
                  "id": 1617,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumberOfFrameKeys",
                  "nameLocation": "12558:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1609,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12578:2:6"
                  },
                  "returnParameters": {
                    "id": 1612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1611,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1617,
                        "src": "12602:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1610,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12602:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12601:6:6"
                  },
                  "scope": 2705,
                  "src": "12549:101:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1674,
                    "nodeType": "Block",
                    "src": "12889:472:6",
                    "statements": [
                      {
                        "assignments": [
                          1626
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1626,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "12950:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1674,
                            "src": "12945:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1625,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12945:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1630,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1628,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1620,
                              "src": "12979:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1627,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "12961:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12961:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12945:44:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SFrame_$769",
                            "typeString": "enum Market.SFrame"
                          },
                          "id": 1637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1631,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "13037:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1633,
                              "indexExpression": {
                                "id": 1632,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1626,
                                "src": "13044:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13037:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "13037:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1635,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "13063:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 1636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NULL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 766,
                            "src": "13063:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "13037:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1640,
                        "nodeType": "IfStatement",
                        "src": "13033:58:6",
                        "trueBody": {
                          "expression": {
                            "id": 1638,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "13083:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1624,
                          "id": 1639,
                          "nodeType": "Return",
                          "src": "13076:15:6"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1642,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1626,
                                "src": "13110:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1644,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "13140:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "13140:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1643,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1030,
                                  "src": "13122:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13122:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13110:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d4520494e2050415354",
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13158:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                                "typeString": "literal_string \"FRAME IN PAST\""
                              },
                              "value": "FRAME IN PAST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b7884264017e3814bc8e859776e27d61e47b52c4b426a3f3267e6d12cf364dc1",
                                "typeString": "literal_string \"FRAME IN PAST\""
                              }
                            ],
                            "id": 1641,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13102:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13102:72:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1650,
                        "nodeType": "ExpressionStatement",
                        "src": "13102:72:6"
                      },
                      {
                        "expression": {
                          "id": 1656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1651,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "13206:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1653,
                              "indexExpression": {
                                "id": 1652,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1626,
                                "src": "13213:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13206:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "frameKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 771,
                            "src": "13206:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1655,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "13234:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13206:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1657,
                        "nodeType": "ExpressionStatement",
                        "src": "13206:36:6"
                      },
                      {
                        "expression": {
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1658,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "13253:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1660,
                              "indexExpression": {
                                "id": 1659,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1626,
                                "src": "13260:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13253:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "13253:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1662,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "13278:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "OPENED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 767,
                            "src": "13278:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "13253:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SFrame_$769",
                            "typeString": "enum Market.SFrame"
                          }
                        },
                        "id": 1665,
                        "nodeType": "ExpressionStatement",
                        "src": "13253:38:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1669,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1626,
                              "src": "13318:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1666,
                              "name": "framesKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "13302:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "13302:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13302:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1671,
                        "nodeType": "ExpressionStatement",
                        "src": "13302:25:6"
                      },
                      {
                        "expression": {
                          "id": 1672,
                          "name": "frameKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1626,
                          "src": "13345:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1624,
                        "id": 1673,
                        "nodeType": "Return",
                        "src": "13338:15:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1618,
                    "nodeType": "StructuredDocumentation",
                    "src": "12658:160:6",
                    "text": "@notice Create a frame\n @param timestamp In second.\n @return frameTimestamp Frame's key (timestamp that indicated the beggining of a frame)."
                  },
                  "id": 1675,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrCreateFrame",
                  "nameLocation": "12833:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1620,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "12855:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1675,
                        "src": "12850:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1619,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12850:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12849:16:6"
                  },
                  "returnParameters": {
                    "id": 1624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1623,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1675,
                        "src": "12884:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1622,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12884:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12883:6:6"
                  },
                  "scope": 2705,
                  "src": "12824:537:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1734,
                    "nodeType": "Block",
                    "src": "13603:319:6",
                    "statements": [
                      {
                        "assignments": [
                          1686
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1686,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "13619:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1734,
                            "src": "13614:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1685,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13614:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1690,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1688,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1680,
                              "src": "13638:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1687,
                            "name": "clcLotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "13628:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13628:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13614:34:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SLot_$826",
                            "typeString": "enum Market.SLot"
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1691,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "13663:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1693,
                                  "indexExpression": {
                                    "id": 1692,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1678,
                                    "src": "13670:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13663:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1694,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "13663:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1696,
                              "indexExpression": {
                                "id": 1695,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1686,
                                "src": "13685:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13663:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1697,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "13663:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$826",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1698,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 826,
                              "src": "13702:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$826_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 1699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NULL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 823,
                            "src": "13702:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$826",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "13663:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1703,
                        "nodeType": "IfStatement",
                        "src": "13659:67:6",
                        "trueBody": {
                          "expression": {
                            "id": 1701,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1686,
                            "src": "13720:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1684,
                          "id": 1702,
                          "nodeType": "Return",
                          "src": "13713:13:6"
                        }
                      },
                      {
                        "expression": {
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1704,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "13737:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1706,
                                  "indexExpression": {
                                    "id": 1705,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1678,
                                    "src": "13744:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13737:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1707,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "13737:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1709,
                              "indexExpression": {
                                "id": 1708,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1686,
                                "src": "13759:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13737:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1710,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "frameKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 828,
                            "src": "13737:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1711,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1678,
                            "src": "13778:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13737:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1713,
                        "nodeType": "ExpressionStatement",
                        "src": "13737:49:6"
                      },
                      {
                        "expression": {
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1714,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "13797:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1716,
                                  "indexExpression": {
                                    "id": 1715,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1678,
                                    "src": "13804:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13797:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1717,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "13797:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1719,
                              "indexExpression": {
                                "id": 1718,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1686,
                                "src": "13819:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13797:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1720,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lotKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 830,
                            "src": "13797:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1721,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1686,
                            "src": "13836:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13797:45:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1723,
                        "nodeType": "ExpressionStatement",
                        "src": "13797:45:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1729,
                              "name": "lotKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1686,
                              "src": "13883:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1724,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "13853:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 1726,
                                "indexExpression": {
                                  "id": 1725,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1678,
                                  "src": "13860:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13853:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lotKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 789,
                              "src": "13853:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "13853:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13853:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1731,
                        "nodeType": "ExpressionStatement",
                        "src": "13853:37:6"
                      },
                      {
                        "expression": {
                          "id": 1732,
                          "name": "lotKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1686,
                          "src": "13908:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1684,
                        "id": 1733,
                        "nodeType": "Return",
                        "src": "13901:13:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1676,
                    "nodeType": "StructuredDocumentation",
                    "src": "13369:151:6",
                    "text": "@notice Create a lot\n @param frameKey Frame's timestamp\n @param pairPrice Price is the trading pair's price\n @return lotKey"
                  },
                  "id": 1735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrCreateLot",
                  "nameLocation": "13535:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1678,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "13555:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "13550:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13550:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1680,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "13570:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "13565:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1679,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13565:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13549:31:6"
                  },
                  "returnParameters": {
                    "id": 1684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1683,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "13598:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1682,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13598:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13597:6:6"
                  },
                  "scope": 2705,
                  "src": "13526:396:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1808,
                    "nodeType": "Block",
                    "src": "14017:506:6",
                    "statements": [
                      {
                        "assignments": [
                          1745
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1745,
                            "mutability": "mutable",
                            "name": "dFrame",
                            "nameLocation": "14046:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1808,
                            "src": "14041:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1744,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14041:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1758,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1747,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "14074:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "14074:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1746,
                                    "name": "clcFrameTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1030,
                                    "src": "14056:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14056:34:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "id": 1750,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "14094:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1751,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14093:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14056:45:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1753,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14055:47:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "expression": {
                                  "id": 1754,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14106:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14106:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1756,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14105:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14055:67:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14041:81:6"
                      },
                      {
                        "assignments": [
                          1760
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1760,
                            "mutability": "mutable",
                            "name": "dFrameP",
                            "nameLocation": "14139:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1808,
                            "src": "14134:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1759,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14134:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1767,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1761,
                              "name": "scalar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 762,
                              "src": "14149:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1762,
                              "name": "dFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1745,
                              "src": "14158:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14149:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 1764,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "14168:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1765,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14167:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14149:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14134:41:6"
                      },
                      {
                        "assignments": [
                          1769
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1769,
                            "mutability": "mutable",
                            "name": "numOfFramesLeft",
                            "nameLocation": "14253:15:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1808,
                            "src": "14248:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1768,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14248:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1773,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1771,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1737,
                              "src": "14285:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1770,
                            "name": "clcFramesLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "14271:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14271:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14248:46:6"
                      },
                      {
                        "expression": {
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1774,
                            "name": "tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "14305:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1775,
                                  "name": "acquisitionPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1739,
                                  "src": "14311:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1776,
                                  "name": "taxMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "14330:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14311:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030303030",
                                "id": 1778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14342:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100000"
                              },
                              "src": "14311:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1780,
                              "name": "numOfFramesLeft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1769,
                              "src": "14351:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14311:55:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14305:61:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1783,
                        "nodeType": "ExpressionStatement",
                        "src": "14305:61:6"
                      },
                      {
                        "assignments": [
                          1785
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1785,
                            "mutability": "mutable",
                            "name": "dtax",
                            "nameLocation": "14382:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1808,
                            "src": "14377:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1784,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14377:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1791,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1786,
                              "name": "acquisitionPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "14389:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1787,
                              "name": "taxMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "14408:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14389:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14420:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "14389:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14377:49:6"
                      },
                      {
                        "expression": {
                          "id": 1798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1792,
                            "name": "dtax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "14437:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1793,
                                "name": "dtax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1785,
                                "src": "14444:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1794,
                                "name": "dFrameP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "14451:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14444:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1796,
                              "name": "scalar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 762,
                              "src": "14461:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14444:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14437:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1799,
                        "nodeType": "ExpressionStatement",
                        "src": "14437:30:6"
                      },
                      {
                        "expression": {
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1800,
                            "name": "tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "14478:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1801,
                              "name": "tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "14484:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1802,
                              "name": "dtax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1785,
                              "src": "14490:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14484:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14478:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1805,
                        "nodeType": "ExpressionStatement",
                        "src": "14478:16:6"
                      },
                      {
                        "expression": {
                          "id": 1806,
                          "name": "tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1742,
                          "src": "14512:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1743,
                        "id": 1807,
                        "nodeType": "Return",
                        "src": "14505:10:6"
                      }
                    ]
                  },
                  "id": 1809,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcTax",
                  "nameLocation": "13939:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1740,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1737,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "13951:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1809,
                        "src": "13946:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1736,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13946:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1739,
                        "mutability": "mutable",
                        "name": "acquisitionPrice",
                        "nameLocation": "13966:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1809,
                        "src": "13961:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1738,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13961:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13945:38:6"
                  },
                  "returnParameters": {
                    "id": 1743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1742,
                        "mutability": "mutable",
                        "name": "tax",
                        "nameLocation": "14012:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1809,
                        "src": "14007:8:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1741,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14007:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14006:10:6"
                  },
                  "scope": 2705,
                  "src": "13930:593:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2061,
                    "nodeType": "Block",
                    "src": "14911:2183:6",
                    "statements": [
                      {
                        "assignments": [
                          1823
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1823,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "14969:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2061,
                            "src": "14964:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1822,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14964:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1827,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1825,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1812,
                              "src": "14998:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1824,
                            "name": "getOrCreateFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1675,
                            "src": "14981:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14981:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14964:44:6"
                      },
                      {
                        "assignments": [
                          1829
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1829,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "15050:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2061,
                            "src": "15045:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1828,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15045:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1834,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1831,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1823,
                              "src": "15074:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1832,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1814,
                              "src": "15084:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1830,
                            "name": "getOrCreateLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1735,
                            "src": "15059:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15059:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15045:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1836,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1823,
                                "src": "15113:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1838,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "15143:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "15143:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1837,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1030,
                                  "src": "15125:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15125:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15113:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c4f5420494e2050415354",
                              "id": 1842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15161:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                                "typeString": "literal_string \"LOT IN PAST\""
                              },
                              "value": "LOT IN PAST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32c8555dcd98759a518a3fc12539a8f941507fba2c82254d24ed6964b67f959a",
                                "typeString": "literal_string \"LOT IN PAST\""
                              }
                            ],
                            "id": 1835,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15105:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15105:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1844,
                        "nodeType": "ExpressionStatement",
                        "src": "15105:70:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1846,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15194:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15194:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1848,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 814,
                                        "src": "15208:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1850,
                                      "indexExpression": {
                                        "id": 1849,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1823,
                                        "src": "15215:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15208:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$795_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1851,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 794,
                                    "src": "15208:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 1853,
                                  "indexExpression": {
                                    "id": 1852,
                                    "name": "lotKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1829,
                                    "src": "15230:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15208:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$838_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 1854,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 832,
                                "src": "15208:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15194:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "414c5245414459204f574e4552",
                              "id": 1856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15248:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                                "typeString": "literal_string \"ALREADY OWNER\""
                              },
                              "value": "ALREADY OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_82aa3a152db42d1ff1a7479ffda74e7e6cc7bda51b64aa6778c511b967fe8e45",
                                "typeString": "literal_string \"ALREADY OWNER\""
                              }
                            ],
                            "id": 1845,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15186:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15186:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1858,
                        "nodeType": "ExpressionStatement",
                        "src": "15186:78:6"
                      },
                      {
                        "assignments": [
                          1860
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1860,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "15282:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2061,
                            "src": "15277:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1859,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15277:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1865,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1862,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1823,
                              "src": "15295:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1863,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "15305:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1861,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1809,
                            "src": "15288:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15288:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15277:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1869,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "15442:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1870,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "15442:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1873,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "15462:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Market_$2705",
                                          "typeString": "contract Market"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Market_$2705",
                                          "typeString": "contract Market"
                                        }
                                      ],
                                      "id": 1872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15454:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1871,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15454:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15454:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1867,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "15416:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1868,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "15416:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15416:52:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1884,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1876,
                                              "name": "frames",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 814,
                                              "src": "15473:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                              }
                                            },
                                            "id": 1878,
                                            "indexExpression": {
                                              "id": 1877,
                                              "name": "frameKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1823,
                                              "src": "15480:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15473:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Frame_$795_storage",
                                              "typeString": "struct Market.Frame storage ref"
                                            }
                                          },
                                          "id": 1879,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lots",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 794,
                                          "src": "15473:21:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                          }
                                        },
                                        "id": 1881,
                                        "indexExpression": {
                                          "id": 1880,
                                          "name": "lotKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1829,
                                          "src": "15495:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15473:29:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Lot_$838_storage",
                                          "typeString": "struct Market.Lot storage ref"
                                        }
                                      },
                                      "id": 1882,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "acquisitionPrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 834,
                                      "src": "15473:46:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 1883,
                                      "name": "tax",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1860,
                                      "src": "15522:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15473:52:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1885,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15472:54:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15416:110:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "415050524f56454420414d4f554e5420544f4f20534d414c4c",
                              "id": 1887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15528:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                              },
                              "value": "APPROVED AMOUNT TOO SMALL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                              }
                            ],
                            "id": 1866,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15408:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15408:148:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1889,
                        "nodeType": "ExpressionStatement",
                        "src": "15408:148:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1893,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15650:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15650:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1897,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15670:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2705",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2705",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 1896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15662:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15662:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15662:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1899,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 814,
                                            "src": "15678:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1901,
                                          "indexExpression": {
                                            "id": 1900,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1823,
                                            "src": "15685:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15678:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$795_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1902,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 794,
                                        "src": "15678:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1904,
                                      "indexExpression": {
                                        "id": 1903,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1829,
                                        "src": "15700:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15678:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$838_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1905,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "acquisitionPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 834,
                                    "src": "15678:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1906,
                                    "name": "tax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1860,
                                    "src": "15727:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15678:52:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1908,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15677:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1890,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "15621:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "15621:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15621:111:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1910,
                        "nodeType": "ExpressionStatement",
                        "src": "15621:111:6"
                      },
                      {
                        "expression": {
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1911,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "15743:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1913,
                              "indexExpression": {
                                "id": 1912,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1823,
                                "src": "15750:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15743:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1914,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardFund",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 777,
                            "src": "15743:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1915,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "15774:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1917,
                                    "indexExpression": {
                                      "id": 1916,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1823,
                                      "src": "15781:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15774:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1918,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "15774:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1919,
                                  "name": "tax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1860,
                                  "src": "15804:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15774:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1921,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15773:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15743:65:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1923,
                        "nodeType": "ExpressionStatement",
                        "src": "15743:65:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SLot_$826",
                            "typeString": "enum Market.SLot"
                          },
                          "id": 1933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1924,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "15880:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1926,
                                  "indexExpression": {
                                    "id": 1925,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1823,
                                    "src": "15887:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15880:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1927,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "15880:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1929,
                              "indexExpression": {
                                "id": 1928,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1829,
                                "src": "15902:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15880:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1930,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "15880:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$826",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1931,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 826,
                              "src": "15919:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$826_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 1932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BOUGHT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 824,
                            "src": "15919:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$826",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "15880:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1993,
                          "nodeType": "Block",
                          "src": "16341:76:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1982,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 814,
                                          "src": "16356:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 1984,
                                        "indexExpression": {
                                          "id": 1983,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1823,
                                          "src": "16363:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16356:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$795_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 1985,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lots",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 794,
                                      "src": "16356:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                      }
                                    },
                                    "id": 1987,
                                    "indexExpression": {
                                      "id": 1986,
                                      "name": "lotKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1829,
                                      "src": "16378:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16356:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Lot_$838_storage",
                                      "typeString": "struct Market.Lot storage ref"
                                    }
                                  },
                                  "id": 1988,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 837,
                                  "src": "16356:35:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SLot_$826",
                                    "typeString": "enum Market.SLot"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1989,
                                    "name": "SLot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 826,
                                    "src": "16394:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SLot_$826_$",
                                      "typeString": "type(enum Market.SLot)"
                                    }
                                  },
                                  "id": 1990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "BOUGHT",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 824,
                                  "src": "16394:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SLot_$826",
                                    "typeString": "enum Market.SLot"
                                  }
                                },
                                "src": "16356:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$826",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "id": 1992,
                              "nodeType": "ExpressionStatement",
                              "src": "16356:49:6"
                            }
                          ]
                        },
                        "id": 1994,
                        "nodeType": "IfStatement",
                        "src": "15876:541:6",
                        "trueBody": {
                          "id": 1981,
                          "nodeType": "Block",
                          "src": "15932:394:6",
                          "statements": [
                            {
                              "assignments": [
                                1935
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1935,
                                  "mutability": "mutable",
                                  "name": "taxRetrn",
                                  "nameLocation": "15952:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1981,
                                  "src": "15947:13:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1934,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15947:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1946,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1937,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1823,
                                    "src": "15970:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1938,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 814,
                                            "src": "15980:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1940,
                                          "indexExpression": {
                                            "id": 1939,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1823,
                                            "src": "15987:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15980:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$795_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1941,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 794,
                                        "src": "15980:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1943,
                                      "indexExpression": {
                                        "id": 1942,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1829,
                                        "src": "16002:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15980:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$838_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1944,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "acquisitionPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 834,
                                    "src": "15980:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1936,
                                  "name": "clcTax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1809,
                                  "src": "15963:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15963:64:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15947:80:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1950,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 814,
                                            "src": "16097:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1952,
                                          "indexExpression": {
                                            "id": 1951,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1823,
                                            "src": "16104:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16097:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$795_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1953,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 794,
                                        "src": "16097:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1955,
                                      "indexExpression": {
                                        "id": 1954,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1829,
                                        "src": "16119:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16097:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$838_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1956,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lotOwner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 832,
                                    "src": "16097:38:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1965,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1957,
                                          "name": "taxRetrn",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1935,
                                          "src": "16138:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1958,
                                                  "name": "frames",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 814,
                                                  "src": "16149:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                  }
                                                },
                                                "id": 1960,
                                                "indexExpression": {
                                                  "id": 1959,
                                                  "name": "frameKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1823,
                                                  "src": "16156:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "16149:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                  "typeString": "struct Market.Frame storage ref"
                                                }
                                              },
                                              "id": 1961,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lots",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 794,
                                              "src": "16149:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                              }
                                            },
                                            "id": 1963,
                                            "indexExpression": {
                                              "id": 1962,
                                              "name": "lotKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1829,
                                              "src": "16171:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "16149:29:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Lot_$838_storage",
                                              "typeString": "struct Market.Lot storage ref"
                                            }
                                          },
                                          "id": 1964,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "acquisitionPrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 834,
                                          "src": "16149:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "16138:57:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1966,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "16137:59:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1947,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "16072:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1949,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26,
                                  "src": "16072:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16072:125:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1968,
                              "nodeType": "ExpressionStatement",
                              "src": "16072:125:6"
                            },
                            {
                              "expression": {
                                "id": 1979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1969,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "16246:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1971,
                                    "indexExpression": {
                                      "id": 1970,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1823,
                                      "src": "16253:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16246:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1972,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "16246:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1973,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 814,
                                        "src": "16276:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1975,
                                      "indexExpression": {
                                        "id": 1974,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1823,
                                        "src": "16283:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16276:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$795_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1976,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 777,
                                    "src": "16276:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1977,
                                    "name": "taxRetrn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1935,
                                    "src": "16306:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16276:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16246:68:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1980,
                              "nodeType": "ExpressionStatement",
                              "src": "16246:68:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1995,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "16458:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1997,
                                  "indexExpression": {
                                    "id": 1996,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1823,
                                    "src": "16465:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16458:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1998,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "16458:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2000,
                              "indexExpression": {
                                "id": 1999,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1829,
                                "src": "16480:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16458:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2001,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lotOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 832,
                            "src": "16458:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2002,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16499:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16499:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16458:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2005,
                        "nodeType": "ExpressionStatement",
                        "src": "16458:51:6"
                      },
                      {
                        "expression": {
                          "id": 2014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2006,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "16520:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2008,
                                  "indexExpression": {
                                    "id": 2007,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1823,
                                    "src": "16527:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16520:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2009,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "16520:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2011,
                              "indexExpression": {
                                "id": 2010,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1829,
                                "src": "16542:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16520:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2012,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "acquisitionPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 834,
                            "src": "16520:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2013,
                            "name": "acqPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "16569:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16520:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2015,
                        "nodeType": "ExpressionStatement",
                        "src": "16520:57:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2021,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1823,
                              "src": "16616:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2016,
                                "name": "userFrames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "16588:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 2019,
                              "indexExpression": {
                                "expression": {
                                  "id": 2017,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "16599:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "16599:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16588:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "16588:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 2022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16588:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2023,
                        "nodeType": "ExpressionStatement",
                        "src": "16588:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2024,
                            "name": "updateFramePrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "16638:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16638:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2026,
                        "nodeType": "ExpressionStatement",
                        "src": "16638:19:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2028,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1823,
                              "src": "16687:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2029,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "16724:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2031,
                                "indexExpression": {
                                  "id": 2030,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "16731:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16724:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2032,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 773,
                              "src": "16724:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2033,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "16789:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2035,
                                "indexExpression": {
                                  "id": 2034,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "16796:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16789:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2036,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 775,
                              "src": "16789:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2037,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "16852:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2039,
                                "indexExpression": {
                                  "id": 2038,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "16859:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16852:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2040,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "16852:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2041,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "16923:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2043,
                                "indexExpression": {
                                  "id": 2042,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "16930:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16923:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2044,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "16923:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2045,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "16992:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2047,
                                "indexExpression": {
                                  "id": 2046,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "16999:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16992:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2048,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "16992:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2027,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "16675:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16675:345:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2050,
                        "nodeType": "EmitStatement",
                        "src": "16670:350:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2052,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1823,
                              "src": "17046:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2053,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "17056:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2055,
                                  "indexExpression": {
                                    "id": 2054,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1823,
                                    "src": "17063:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17056:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2056,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "17056:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2058,
                              "indexExpression": {
                                "id": 2057,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1829,
                                "src": "17078:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17056:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            ],
                            "id": 2051,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "17036:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Lot_$838_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct Market.Lot memory)"
                            }
                          },
                          "id": 2059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17036:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2060,
                        "nodeType": "EmitStatement",
                        "src": "17031:55:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1810,
                    "nodeType": "StructuredDocumentation",
                    "src": "14531:282:6",
                    "text": "@notice Calculate amout required to approve to buy a lot\n @param timestamp Frame's timestamp get's calculated from this value\n @param pairPrice Is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax"
                  },
                  "functionSelector": "3c80d8ea",
                  "id": 2062,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1819,
                          "name": "acqPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1816,
                          "src": "14901:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1820,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1818,
                        "name": "minTaxCheck",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 949,
                        "src": "14889:11:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14889:21:6"
                    }
                  ],
                  "name": "buyLot",
                  "nameLocation": "14828:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1812,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "14840:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "14835:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1811,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14835:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1814,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "14856:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "14851:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1813,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14851:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1816,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "14872:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "14867:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1815,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14867:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14834:47:6"
                  },
                  "returnParameters": {
                    "id": 1821,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14911:0:6"
                  },
                  "scope": 2705,
                  "src": "14819:2275:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2238,
                    "nodeType": "Block",
                    "src": "17540:1235:6",
                    "statements": [
                      {
                        "assignments": [
                          2076
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2076,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "17556:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2238,
                            "src": "17551:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2075,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17551:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2080,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2078,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2065,
                              "src": "17584:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2077,
                            "name": "getOrCreateFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1675,
                            "src": "17567:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17567:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17551:43:6"
                      },
                      {
                        "assignments": [
                          2082
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2082,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "17611:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2238,
                            "src": "17606:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2081,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17606:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2087,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2084,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2076,
                              "src": "17635:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2085,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2067,
                              "src": "17645:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2083,
                            "name": "getOrCreateLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1735,
                            "src": "17620:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 2086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17620:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17606:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2089,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 814,
                                        "src": "17675:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2091,
                                      "indexExpression": {
                                        "id": 2090,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2076,
                                        "src": "17682:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17675:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$795_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2092,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 794,
                                    "src": "17675:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 2094,
                                  "indexExpression": {
                                    "id": 2093,
                                    "name": "lotKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2082,
                                    "src": "17697:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17675:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$838_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 2095,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 832,
                                "src": "17675:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2096,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17717:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "17717:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17675:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f54204c4f54204f574e4552",
                              "id": 2099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17729:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                                "typeString": "literal_string \"NOT LOT OWNER\""
                              },
                              "value": "NOT LOT OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3def8416934190cba410ca4859c3b0b9ff56786ead62094280954f0a5dd3bb14",
                                "typeString": "literal_string \"NOT LOT OWNER\""
                              }
                            ],
                            "id": 2088,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17667:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17667:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2101,
                        "nodeType": "ExpressionStatement",
                        "src": "17667:78:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2103,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2076,
                                "src": "17764:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2105,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17794:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17794:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2104,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1030,
                                  "src": "17776:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 2107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17776:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17764:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c4f5420494e2050415354204652414d45",
                              "id": 2109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17812:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                                "typeString": "literal_string \"LOT IN PAST FRAME\""
                              },
                              "value": "LOT IN PAST FRAME"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_da49e7fab6bfe89d70c3638019215fb65093e67fbb84e77029516d1b3cf2de01",
                                "typeString": "literal_string \"LOT IN PAST FRAME\""
                              }
                            ],
                            "id": 2102,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17756:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17756:76:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2111,
                        "nodeType": "ExpressionStatement",
                        "src": "17756:76:6"
                      },
                      {
                        "assignments": [
                          2113
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2113,
                            "mutability": "mutable",
                            "name": "taxNew",
                            "nameLocation": "17850:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2238,
                            "src": "17845:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2112,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17845:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2118,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2115,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2076,
                              "src": "17866:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2116,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2069,
                              "src": "17876:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2114,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1809,
                            "src": "17859:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17859:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17845:40:6"
                      },
                      {
                        "assignments": [
                          2120
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2120,
                            "mutability": "mutable",
                            "name": "taxOld",
                            "nameLocation": "17901:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2238,
                            "src": "17896:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2119,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17896:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2131,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2122,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2076,
                              "src": "17917:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2123,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "17927:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2125,
                                    "indexExpression": {
                                      "id": 2124,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2076,
                                      "src": "17934:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17927:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2126,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 794,
                                  "src": "17927:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 2128,
                                "indexExpression": {
                                  "id": 2127,
                                  "name": "lotKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2082,
                                  "src": "17949:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17927:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$838_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 2129,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 834,
                              "src": "17927:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2121,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1809,
                            "src": "17910:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17910:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17896:78:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2132,
                            "name": "taxNew",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2113,
                            "src": "17991:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2133,
                            "name": "taxOld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2120,
                            "src": "18000:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17991:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2184,
                              "name": "taxNew",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2113,
                              "src": "18413:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 2185,
                              "name": "taxOld",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "18422:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18413:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2213,
                          "nodeType": "IfStatement",
                          "src": "18409:193:6",
                          "trueBody": {
                            "id": 2212,
                            "nodeType": "Block",
                            "src": "18430:172:6",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2190,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "18470:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2191,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "18470:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2194,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2192,
                                        "name": "taxOld",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2120,
                                        "src": "18482:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 2193,
                                        "name": "taxNew",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2113,
                                        "src": "18491:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18482:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2187,
                                      "name": "accountingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 755,
                                      "src": "18445:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$77",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "18445:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 2195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18445:53:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2196,
                                "nodeType": "ExpressionStatement",
                                "src": "18445:53:6"
                              },
                              {
                                "expression": {
                                  "id": 2210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2197,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 814,
                                        "src": "18513:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2199,
                                      "indexExpression": {
                                        "id": 2198,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2076,
                                        "src": "18520:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18513:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$795_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2200,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 777,
                                    "src": "18513:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2201,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 814,
                                          "src": "18543:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2203,
                                        "indexExpression": {
                                          "id": 2202,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2076,
                                          "src": "18550:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18543:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$795_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2204,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rewardFund",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 777,
                                      "src": "18543:27:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2207,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2205,
                                            "name": "taxOld",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2120,
                                            "src": "18574:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2206,
                                            "name": "taxNew",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2113,
                                            "src": "18583:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "18574:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2208,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "18573:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "18543:47:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18513:77:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2211,
                                "nodeType": "ExpressionStatement",
                                "src": "18513:77:6"
                              }
                            ]
                          }
                        },
                        "id": 2214,
                        "nodeType": "IfStatement",
                        "src": "17987:615:6",
                        "trueBody": {
                          "id": 2183,
                          "nodeType": "Block",
                          "src": "18008:386:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2149,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2138,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "18057:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 2139,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "18057:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 2142,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "18077:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Market_$2705",
                                                "typeString": "contract Market"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Market_$2705",
                                                "typeString": "contract Market"
                                              }
                                            ],
                                            "id": 2141,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "18069:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2140,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "18069:7:6",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2143,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18069:13:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2136,
                                          "name": "accountingToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "18031:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$77",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2137,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 36,
                                        "src": "18031:25:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 2144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18031:52:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2147,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2145,
                                            "name": "taxNew",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2113,
                                            "src": "18088:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2146,
                                            "name": "taxOld",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2120,
                                            "src": "18097:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "18088:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2148,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "18087:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "18031:73:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "415050524f56454420414d4f554e5420544f4f20534d414c4c",
                                    "id": 2150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18106:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                      "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                                    },
                                    "value": "APPROVED AMOUNT TOO SMALL"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_89343585818f8cdbad2b0a88b3879928a091349d3e0db08ea52a89aa96632d13",
                                      "typeString": "literal_string \"APPROVED AMOUNT TOO SMALL\""
                                    }
                                  ],
                                  "id": 2135,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18023:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18023:111:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2152,
                              "nodeType": "ExpressionStatement",
                              "src": "18023:111:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2156,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "18246:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "18246:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2160,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "18266:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Market_$2705",
                                          "typeString": "contract Market"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Market_$2705",
                                          "typeString": "contract Market"
                                        }
                                      ],
                                      "id": 2159,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "18258:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2158,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "18258:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18258:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2164,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2162,
                                          "name": "taxNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2113,
                                          "src": "18274:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 2163,
                                          "name": "taxOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2120,
                                          "src": "18283:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18274:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2165,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18273:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2153,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "18217:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "18217:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18217:74:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2167,
                              "nodeType": "ExpressionStatement",
                              "src": "18217:74:6"
                            },
                            {
                              "expression": {
                                "id": 2181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2168,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "18306:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2170,
                                    "indexExpression": {
                                      "id": 2169,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2076,
                                      "src": "18313:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18306:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2171,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "18306:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2172,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 814,
                                        "src": "18336:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2174,
                                      "indexExpression": {
                                        "id": 2173,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2076,
                                        "src": "18343:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18336:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$795_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2175,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 777,
                                    "src": "18336:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2178,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2176,
                                          "name": "taxNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2113,
                                          "src": "18367:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 2177,
                                          "name": "taxOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2120,
                                          "src": "18375:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18367:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2179,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18366:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18336:46:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18306:76:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2182,
                              "nodeType": "ExpressionStatement",
                              "src": "18306:76:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2215,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "18612:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2217,
                                  "indexExpression": {
                                    "id": 2216,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2076,
                                    "src": "18619:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18612:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "18612:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2220,
                              "indexExpression": {
                                "id": 2219,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2082,
                                "src": "18634:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18612:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2221,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "acquisitionPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 834,
                            "src": "18612:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2222,
                            "name": "acqPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2069,
                            "src": "18661:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18612:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2224,
                        "nodeType": "ExpressionStatement",
                        "src": "18612:57:6"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2225,
                            "name": "updateFramePrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "18682:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18682:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2227,
                        "nodeType": "ExpressionStatement",
                        "src": "18682:19:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2229,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2076,
                              "src": "18727:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2230,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "18737:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2232,
                                  "indexExpression": {
                                    "id": 2231,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2076,
                                    "src": "18744:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18737:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2233,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "18737:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2235,
                              "indexExpression": {
                                "id": 2234,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2082,
                                "src": "18759:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18737:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            ],
                            "id": 2228,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "18717:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Lot_$838_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct Market.Lot memory)"
                            }
                          },
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18717:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2237,
                        "nodeType": "EmitStatement",
                        "src": "18712:55:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2063,
                    "nodeType": "StructuredDocumentation",
                    "src": "17102:332:6",
                    "text": "@notice Owner can update lot's price. Has to pay additional tax, or leftover tax gets' returned to him if the new price is lower\n @param timestamp Frame's timestamp get's calculated from this value\n @param pairPrice Is trading pair's price (to get correct lot key) \n @param acqPrice New acquisition price"
                  },
                  "functionSelector": "bb15d2dd",
                  "id": 2239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2072,
                          "name": "acqPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2069,
                          "src": "17530:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2073,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2071,
                        "name": "minTaxCheck",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 949,
                        "src": "17518:11:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17518:21:6"
                    }
                  ],
                  "name": "updateLotPrice",
                  "nameLocation": "17449:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2065,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "17469:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2239,
                        "src": "17464:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2064,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17464:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2067,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "17485:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2239,
                        "src": "17480:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2066,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17480:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2069,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "17501:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2239,
                        "src": "17496:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2068,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17496:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17463:47:6"
                  },
                  "returnParameters": {
                    "id": 2074,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17540:0:6"
                  },
                  "scope": 2705,
                  "src": "17440:1335:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2427,
                    "nodeType": "Block",
                    "src": "18878:1919:6",
                    "statements": [
                      {
                        "assignments": [
                          2244
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2244,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "18894:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2427,
                            "src": "18889:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2243,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18889:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2249,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2246,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "18923:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "18923:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2245,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "18905:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18905:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18889:50:6"
                      },
                      {
                        "assignments": [
                          2251
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2251,
                            "mutability": "mutable",
                            "name": "tmp",
                            "nameLocation": "18955:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2427,
                            "src": "18950:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2250,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18950:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2252,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18950:8:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2253,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "19025:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19025:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2258,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2255,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2244,
                                        "src": "19045:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "id": 2256,
                                            "name": "period",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 733,
                                            "src": "19057:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2257,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "19056:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19045:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2259,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "19044:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "id": 2260,
                                      "name": "tReporting",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 740,
                                      "src": "19069:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2261,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "19068:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19044:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2263,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19043:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19025:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2346,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "19918:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "19918:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2351,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2348,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2244,
                                          "src": "19939:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "id": 2349,
                                              "name": "period",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 733,
                                              "src": "19951:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2350,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "19950:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "19939:19:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2352,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "19938:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "id": 2353,
                                        "name": "tReporting",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 740,
                                        "src": "19963:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2354,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "19962:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "19938:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2356,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "19937:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19918:57:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2401,
                          "nodeType": "IfStatement",
                          "src": "19914:513:6",
                          "trueBody": {
                            "id": 2400,
                            "nodeType": "Block",
                            "src": "19977:450:6",
                            "statements": [
                              {
                                "condition": {
                                  "id": 2358,
                                  "name": "avgPriceSwitch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 765,
                                  "src": "19995:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 2398,
                                  "nodeType": "Block",
                                  "src": "20221:191:6",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 2396,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "components": [
                                            {
                                              "id": 2379,
                                              "name": "tmp",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2251,
                                              "src": "20241:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 2380,
                                                  "name": "frames",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 814,
                                                  "src": "20246:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                  }
                                                },
                                                "id": 2382,
                                                "indexExpression": {
                                                  "id": 2381,
                                                  "name": "frameKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2244,
                                                  "src": "20253:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "20246:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                  "typeString": "struct Market.Frame storage ref"
                                                }
                                              },
                                              "id": 2383,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberName": "oraclePriceCumulativeEnd",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 783,
                                              "src": "20246:41:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 2384,
                                                  "name": "frames",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 814,
                                                  "src": "20289:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                  }
                                                },
                                                "id": 2386,
                                                "indexExpression": {
                                                  "id": 2385,
                                                  "name": "frameKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2244,
                                                  "src": "20296:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "20289:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                  "typeString": "struct Market.Frame storage ref"
                                                }
                                              },
                                              "id": 2387,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberName": "oracleTimestampEnd",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 775,
                                              "src": "20289:35:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2388,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "TupleExpression",
                                          "src": "20240:85:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                            "typeString": "tuple(uint256,uint256,uint256)"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 2393,
                                                  "name": "uniswapPair",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 743,
                                                  "src": "20383:11:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                    "typeString": "contract IUniswapV2Pair"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                    "typeString": "contract IUniswapV2Pair"
                                                  }
                                                ],
                                                "id": 2392,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "20375:7:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 2391,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "20375:7:6",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2394,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "20375:20:6",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "id": 2389,
                                              "name": "UniswapV2OracleLibrary",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 719,
                                              "src": "20328:22:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                                "typeString": "type(library UniswapV2OracleLibrary)"
                                              }
                                            },
                                            "id": 2390,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "currentCumulativePrices",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 718,
                                            "src": "20328:46:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                              "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                            }
                                          },
                                          "id": 2395,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "20328:68:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                            "typeString": "tuple(uint256,uint256,uint32)"
                                          }
                                        },
                                        "src": "20240:156:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2397,
                                      "nodeType": "ExpressionStatement",
                                      "src": "20240:156:6"
                                    }
                                  ]
                                },
                                "id": 2399,
                                "nodeType": "IfStatement",
                                "src": "19992:420:6",
                                "trueBody": {
                                  "id": 2378,
                                  "nodeType": "Block",
                                  "src": "20011:191:6",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 2376,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "components": [
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 2359,
                                                  "name": "frames",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 814,
                                                  "src": "20031:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                  }
                                                },
                                                "id": 2361,
                                                "indexExpression": {
                                                  "id": 2360,
                                                  "name": "frameKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2244,
                                                  "src": "20038:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "20031:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                  "typeString": "struct Market.Frame storage ref"
                                                }
                                              },
                                              "id": 2362,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberName": "oraclePriceCumulativeEnd",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 783,
                                              "src": "20031:41:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "id": 2363,
                                              "name": "tmp",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2251,
                                              "src": "20074:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 2364,
                                                  "name": "frames",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 814,
                                                  "src": "20079:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                  }
                                                },
                                                "id": 2366,
                                                "indexExpression": {
                                                  "id": 2365,
                                                  "name": "frameKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2244,
                                                  "src": "20086:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "20079:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                  "typeString": "struct Market.Frame storage ref"
                                                }
                                              },
                                              "id": 2367,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberName": "oracleTimestampEnd",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 775,
                                              "src": "20079:35:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2368,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "TupleExpression",
                                          "src": "20030:85:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                            "typeString": "tuple(uint256,uint256,uint256)"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 2373,
                                                  "name": "uniswapPair",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 743,
                                                  "src": "20173:11:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                    "typeString": "contract IUniswapV2Pair"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                    "typeString": "contract IUniswapV2Pair"
                                                  }
                                                ],
                                                "id": 2372,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "20165:7:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 2371,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "20165:7:6",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2374,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "20165:20:6",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "id": 2369,
                                              "name": "UniswapV2OracleLibrary",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 719,
                                              "src": "20118:22:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                                "typeString": "type(library UniswapV2OracleLibrary)"
                                              }
                                            },
                                            "id": 2370,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "currentCumulativePrices",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 718,
                                            "src": "20118:46:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                              "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                            }
                                          },
                                          "id": 2375,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "20118:68:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                            "typeString": "tuple(uint256,uint256,uint32)"
                                          }
                                        },
                                        "src": "20030:156:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 2377,
                                      "nodeType": "ExpressionStatement",
                                      "src": "20030:156:6"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "id": 2402,
                        "nodeType": "IfStatement",
                        "src": "19021:1406:6",
                        "trueBody": {
                          "id": 2345,
                          "nodeType": "Block",
                          "src": "19083:816:6",
                          "statements": [
                            {
                              "condition": {
                                "id": 2265,
                                "name": "avgPriceSwitch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "19101:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2343,
                                "nodeType": "Block",
                                "src": "19506:370:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2322,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "id": 2305,
                                            "name": "tmp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2251,
                                            "src": "19526:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2306,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19531:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2308,
                                              "indexExpression": {
                                                "id": 2307,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19538:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19531:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2309,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oraclePriceCumulativeStart",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 781,
                                            "src": "19531:43:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2310,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19576:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2312,
                                              "indexExpression": {
                                                "id": 2311,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19583:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19576:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2313,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oracleTimestampStart",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 773,
                                            "src": "19576:37:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2314,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "19525:89:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2319,
                                                "name": "uniswapPair",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 743,
                                                "src": "19672:11:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              ],
                                              "id": 2318,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "19664:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2317,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "19664:7:6",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2320,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19664:20:6",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2315,
                                            "name": "UniswapV2OracleLibrary",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 719,
                                            "src": "19617:22:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                              "typeString": "type(library UniswapV2OracleLibrary)"
                                            }
                                          },
                                          "id": 2316,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "currentCumulativePrices",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 718,
                                          "src": "19617:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                            "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                          }
                                        },
                                        "id": 2321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19617:68:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                          "typeString": "tuple(uint256,uint256,uint32)"
                                        }
                                      },
                                      "src": "19525:160:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2323,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19525:160:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 2341,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "id": 2324,
                                            "name": "tmp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2251,
                                            "src": "19705:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2325,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19710:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2327,
                                              "indexExpression": {
                                                "id": 2326,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19717:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19710:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2328,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oraclePriceCumulativeEnd",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 783,
                                            "src": "19710:41:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2329,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19753:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2331,
                                              "indexExpression": {
                                                "id": 2330,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19760:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19753:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2332,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oracleTimestampEnd",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 775,
                                            "src": "19753:35:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2333,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "19704:85:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2338,
                                                "name": "uniswapPair",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 743,
                                                "src": "19847:11:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              ],
                                              "id": 2337,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "19839:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2336,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "19839:7:6",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2339,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19839:20:6",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2334,
                                            "name": "UniswapV2OracleLibrary",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 719,
                                            "src": "19792:22:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                              "typeString": "type(library UniswapV2OracleLibrary)"
                                            }
                                          },
                                          "id": 2335,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "currentCumulativePrices",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 718,
                                          "src": "19792:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                            "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                          }
                                        },
                                        "id": 2340,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19792:68:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                          "typeString": "tuple(uint256,uint256,uint32)"
                                        }
                                      },
                                      "src": "19704:156:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2342,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19704:156:6"
                                  }
                                ]
                              },
                              "id": 2344,
                              "nodeType": "IfStatement",
                              "src": "19098:778:6",
                              "trueBody": {
                                "id": 2304,
                                "nodeType": "Block",
                                "src": "19117:370:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2283,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2266,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19137:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2268,
                                              "indexExpression": {
                                                "id": 2267,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19144:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19137:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2269,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oraclePriceCumulativeStart",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 781,
                                            "src": "19137:43:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 2270,
                                            "name": "tmp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2251,
                                            "src": "19182:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2271,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19187:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2273,
                                              "indexExpression": {
                                                "id": 2272,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19194:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19187:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2274,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oracleTimestampStart",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 773,
                                            "src": "19187:37:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2275,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "19136:89:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2280,
                                                "name": "uniswapPair",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 743,
                                                "src": "19283:11:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              ],
                                              "id": 2279,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "19275:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2278,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "19275:7:6",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2281,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19275:20:6",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2276,
                                            "name": "UniswapV2OracleLibrary",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 719,
                                            "src": "19228:22:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                              "typeString": "type(library UniswapV2OracleLibrary)"
                                            }
                                          },
                                          "id": 2277,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "currentCumulativePrices",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 718,
                                          "src": "19228:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                            "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                          }
                                        },
                                        "id": 2282,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19228:68:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                          "typeString": "tuple(uint256,uint256,uint32)"
                                        }
                                      },
                                      "src": "19136:160:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2284,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19136:160:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 2302,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2285,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19316:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2287,
                                              "indexExpression": {
                                                "id": 2286,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19323:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19316:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2288,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oraclePriceCumulativeEnd",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 783,
                                            "src": "19316:41:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 2289,
                                            "name": "tmp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2251,
                                            "src": "19359:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 2290,
                                                "name": "frames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "19364:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                }
                                              },
                                              "id": 2292,
                                              "indexExpression": {
                                                "id": 2291,
                                                "name": "frameKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2244,
                                                "src": "19371:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "19364:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                "typeString": "struct Market.Frame storage ref"
                                              }
                                            },
                                            "id": 2293,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "oracleTimestampEnd",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 775,
                                            "src": "19364:35:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2294,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "19315:85:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2299,
                                                "name": "uniswapPair",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 743,
                                                "src": "19458:11:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                                  "typeString": "contract IUniswapV2Pair"
                                                }
                                              ],
                                              "id": 2298,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "19450:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2297,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "19450:7:6",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2300,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19450:20:6",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2295,
                                            "name": "UniswapV2OracleLibrary",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 719,
                                            "src": "19403:22:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$719_$",
                                              "typeString": "type(library UniswapV2OracleLibrary)"
                                            }
                                          },
                                          "id": 2296,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "currentCumulativePrices",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 718,
                                          "src": "19403:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                            "typeString": "function (address) view returns (uint256,uint256,uint32)"
                                          }
                                        },
                                        "id": 2301,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19403:68:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                                          "typeString": "tuple(uint256,uint256,uint32)"
                                        }
                                      },
                                      "src": "19315:156:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2303,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19315:156:6"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2404,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2244,
                              "src": "20456:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2405,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "20493:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2407,
                                "indexExpression": {
                                  "id": 2406,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2244,
                                  "src": "20500:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20493:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2408,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 773,
                              "src": "20493:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2409,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "20558:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2411,
                                "indexExpression": {
                                  "id": 2410,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2244,
                                  "src": "20565:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20558:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2412,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 775,
                              "src": "20558:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2413,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "20621:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2415,
                                "indexExpression": {
                                  "id": 2414,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2244,
                                  "src": "20628:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20621:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2416,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "20621:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2417,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "20692:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2419,
                                "indexExpression": {
                                  "id": 2418,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2244,
                                  "src": "20699:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20692:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2420,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "20692:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2421,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "20761:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2423,
                                "indexExpression": {
                                  "id": 2422,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2244,
                                  "src": "20768:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20761:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2424,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "20761:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2403,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "20444:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20444:345:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2426,
                        "nodeType": "EmitStatement",
                        "src": "20439:350:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2240,
                    "nodeType": "StructuredDocumentation",
                    "src": "18783:53:6",
                    "text": "@notice Update trading pair's prices in the frame"
                  },
                  "functionSelector": "96b2c6f3",
                  "id": 2428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFramePrices",
                  "nameLocation": "18851:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18868:2:6"
                  },
                  "returnParameters": {
                    "id": 2242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18878:0:6"
                  },
                  "scope": 2705,
                  "src": "18842:1955:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2575,
                    "nodeType": "Block",
                    "src": "20946:1391:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2438,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2431,
                                      "src": "20967:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2439,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "20978:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "20967:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2441,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "20966:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2442,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "20989:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "20989:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20966:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d4520454e442054494d45204e4f542052454143484544",
                              "id": 2445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21006:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                "typeString": "literal_string \"FRAME END TIME NOT REACHED\""
                              },
                              "value": "FRAME END TIME NOT REACHED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                "typeString": "literal_string \"FRAME END TIME NOT REACHED\""
                              }
                            ],
                            "id": 2437,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20957:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20957:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2447,
                        "nodeType": "ExpressionStatement",
                        "src": "20957:78:6"
                      },
                      {
                        "expression": {
                          "id": 2454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2448,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "21046:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2450,
                              "indexExpression": {
                                "id": 2449,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2431,
                                "src": "21053:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21046:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "21046:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2452,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "21071:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 2453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CLOSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 768,
                            "src": "21071:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$769",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "21046:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SFrame_$769",
                            "typeString": "enum Market.SFrame"
                          }
                        },
                        "id": 2455,
                        "nodeType": "ExpressionStatement",
                        "src": "21046:38:6"
                      },
                      {
                        "assignments": [
                          2457
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2457,
                            "mutability": "mutable",
                            "name": "timeDiff",
                            "nameLocation": "21180:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2575,
                            "src": "21175:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2456,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21175:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2467,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2458,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "21191:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2460,
                              "indexExpression": {
                                "id": 2459,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2431,
                                "src": "21198:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21191:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2461,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 775,
                            "src": "21191:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2462,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "21229:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2464,
                              "indexExpression": {
                                "id": 2463,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2431,
                                "src": "21236:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21229:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2465,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 773,
                            "src": "21229:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21191:75:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21175:91:6"
                      },
                      {
                        "expression": {
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2468,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "21277:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2470,
                              "indexExpression": {
                                "id": 2469,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2431,
                                "src": "21284:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21277:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2471,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "priceAverage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 779,
                            "src": "21277:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2490,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2486,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 2478,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 814,
                                                      "src": "21344:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 2480,
                                                    "indexExpression": {
                                                      "id": 2479,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2431,
                                                      "src": "21351:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "21344:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 2481,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "oraclePriceCumulativeEnd",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 783,
                                                  "src": "21344:41:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 2482,
                                                      "name": "frames",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 814,
                                                      "src": "21388:6:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                      }
                                                    },
                                                    "id": 2484,
                                                    "indexExpression": {
                                                      "id": 2483,
                                                      "name": "frameKey",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2431,
                                                      "src": "21395:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "21388:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                                      "typeString": "struct Market.Frame storage ref"
                                                    }
                                                  },
                                                  "id": 2485,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "oraclePriceCumulativeStart",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 781,
                                                  "src": "21388:43:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "21344:87:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 2487,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "21343:89:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "id": 2488,
                                                "name": "timeDiff",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2457,
                                                "src": "21436:8:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 2489,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "21435:10:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "21343:102:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2477,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "21335:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint224_$",
                                          "typeString": "type(uint224)"
                                        },
                                        "typeName": {
                                          "id": 2476,
                                          "name": "uint224",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "21335:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2491,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21335:111:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2474,
                                      "name": "FixedPoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "21314:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FixedPoint_$263_$",
                                        "typeString": "type(library FixedPoint)"
                                      }
                                    },
                                    "id": 2475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "uq112x112",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 82,
                                    "src": "21314:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_uq112x112_$82_storage_ptr_$",
                                      "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                    }
                                  },
                                  "id": 2492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21314:133:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$82_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 2493,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 81,
                                "src": "21314:136:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              ],
                              "id": 2473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21309:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2472,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "21309:4:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21309:142:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21277:174:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2496,
                        "nodeType": "ExpressionStatement",
                        "src": "21277:174:6"
                      },
                      {
                        "assignments": [
                          2498
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2498,
                            "mutability": "mutable",
                            "name": "marketOwnerFees",
                            "nameLocation": "21535:15:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2575,
                            "src": "21530:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2497,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21530:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2508,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2499,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "21553:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2501,
                                "indexExpression": {
                                  "id": 2500,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2431,
                                  "src": "21560:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21553:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2502,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "21553:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 2503,
                                  "name": "feeMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 747,
                                  "src": "21584:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2504,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "21583:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21553:41:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 2506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21597:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "21553:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21530:73:6"
                      },
                      {
                        "assignments": [
                          2510
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2510,
                            "mutability": "mutable",
                            "name": "protocolOwnerFees",
                            "nameLocation": "21619:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2575,
                            "src": "21614:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2509,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21614:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2520,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2511,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "21639:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2513,
                                "indexExpression": {
                                  "id": 2512,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2431,
                                  "src": "21646:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21639:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2514,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "21639:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 2515,
                                  "name": "feeProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 738,
                                  "src": "21670:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2516,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "21669:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21639:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 2518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21685:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "21639:52:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21614:77:6"
                      },
                      {
                        "expression": {
                          "id": 2533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2521,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "21702:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2523,
                              "indexExpression": {
                                "id": 2522,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2431,
                                "src": "21709:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21702:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$795_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2524,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardFund",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 777,
                            "src": "21702:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2525,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "21732:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2527,
                                  "indexExpression": {
                                    "id": 2526,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2431,
                                    "src": "21739:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21732:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2528,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewardFund",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 777,
                                "src": "21732:27:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2529,
                                "name": "marketOwnerFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2498,
                                "src": "21762:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21732:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2531,
                              "name": "protocolOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "21780:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21732:65:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21702:95:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2534,
                        "nodeType": "ExpressionStatement",
                        "src": "21702:95:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2538,
                              "name": "ownerMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "21868:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2539,
                              "name": "marketOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2498,
                              "src": "21881:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2535,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "21843:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "21843:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21843:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2541,
                        "nodeType": "ExpressionStatement",
                        "src": "21843:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2545,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 752,
                                  "src": "21933:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketFactory_$2816",
                                    "typeString": "contract MarketFactory"
                                  }
                                },
                                "id": 2546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2724,
                                "src": "21933:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21933:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2548,
                              "name": "protocolOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "21950:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2542,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "21908:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "21908:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21908:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2550,
                        "nodeType": "ExpressionStatement",
                        "src": "21908:60:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2552,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2431,
                              "src": "21996:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2553,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "22033:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2555,
                                "indexExpression": {
                                  "id": 2554,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2431,
                                  "src": "22040:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22033:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2556,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 773,
                              "src": "22033:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2557,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "22098:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2559,
                                "indexExpression": {
                                  "id": 2558,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2431,
                                  "src": "22105:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22098:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2560,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracleTimestampEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 775,
                              "src": "22098:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2561,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "22161:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2563,
                                "indexExpression": {
                                  "id": 2562,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2431,
                                  "src": "22168:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22161:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2564,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 781,
                              "src": "22161:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2565,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "22232:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2567,
                                "indexExpression": {
                                  "id": 2566,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2431,
                                  "src": "22239:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22232:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2568,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePriceCumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 783,
                              "src": "22232:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2569,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "22301:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2571,
                                "indexExpression": {
                                  "id": 2570,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2431,
                                  "src": "22308:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22301:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2572,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "22301:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2551,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "21984:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21984:345:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2574,
                        "nodeType": "EmitStatement",
                        "src": "21979:350:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2429,
                    "nodeType": "StructuredDocumentation",
                    "src": "20805:66:6",
                    "text": "@notice Close frame\n @param frameKey Frame's timestamp"
                  },
                  "id": 2576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2434,
                          "name": "frameKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2431,
                          "src": "20936:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2435,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2433,
                        "name": "hasValidPrices",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1003,
                        "src": "20921:14:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20921:24:6"
                    }
                  ],
                  "name": "closeFrame",
                  "nameLocation": "20886:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2431,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "20902:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2576,
                        "src": "20897:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2430,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "20897:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20896:15:6"
                  },
                  "returnParameters": {
                    "id": 2436,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20946:0:6"
                  },
                  "scope": 2705,
                  "src": "20877:1460:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2670,
                    "nodeType": "Block",
                    "src": "22543:837:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SFrame_$769",
                                "typeString": "enum Market.SFrame"
                              },
                              "id": 2589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2583,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "22600:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2585,
                                  "indexExpression": {
                                    "id": 2584,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2579,
                                    "src": "22607:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22600:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2586,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "state",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 786,
                                "src": "22600:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2587,
                                  "name": "SFrame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 769,
                                  "src": "22626:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SFrame_$769_$",
                                    "typeString": "type(enum Market.SFrame)"
                                  }
                                },
                                "id": 2588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "CLOSED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 768,
                                "src": "22626:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$769",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "src": "22600:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d45204e4f5420434c4f534544",
                              "id": 2590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22641:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                "typeString": "literal_string \"FRAME NOT CLOSED\""
                              },
                              "value": "FRAME NOT CLOSED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                "typeString": "literal_string \"FRAME NOT CLOSED\""
                              }
                            ],
                            "id": 2582,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22592:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22592:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2592,
                        "nodeType": "ExpressionStatement",
                        "src": "22592:68:6"
                      },
                      {
                        "assignments": [
                          2594
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2594,
                            "mutability": "mutable",
                            "name": "lotKeyWin",
                            "nameLocation": "22721:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2670,
                            "src": "22716:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2593,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22716:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2605,
                        "initialValue": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2598,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 814,
                                          "src": "22752:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2600,
                                        "indexExpression": {
                                          "id": 2599,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2579,
                                          "src": "22759:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "22752:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$795_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2601,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "priceAverage",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 779,
                                      "src": "22752:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22744:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2596,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22744:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22744:38:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2595,
                                "name": "clcLotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1053,
                                "src": "22734:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 2603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22734:49:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2604,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "22733:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22716:68:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SLot_$826",
                                "typeString": "enum Market.SLot"
                              },
                              "id": 2616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2607,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 814,
                                        "src": "22850:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2609,
                                      "indexExpression": {
                                        "id": 2608,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2579,
                                        "src": "22857:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "22850:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$795_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2610,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 794,
                                    "src": "22850:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 2612,
                                  "indexExpression": {
                                    "id": 2611,
                                    "name": "lotKeyWin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2594,
                                    "src": "22872:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22850:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$838_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 2613,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "state",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 837,
                                "src": "22850:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$826",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2614,
                                  "name": "SLot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 826,
                                  "src": "22892:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SLot_$826_$",
                                    "typeString": "type(enum Market.SLot)"
                                  }
                                },
                                "id": 2615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "SETTLED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 825,
                                "src": "22892:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$826",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "src": "22850:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c4f5420414c524541445920534554544c4544",
                              "id": 2617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22906:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                "typeString": "literal_string \"LOT ALREADY SETTLED\""
                              },
                              "value": "LOT ALREADY SETTLED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                "typeString": "literal_string \"LOT ALREADY SETTLED\""
                              }
                            ],
                            "id": 2606,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22842:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22842:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2619,
                        "nodeType": "ExpressionStatement",
                        "src": "22842:86:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2621,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 814,
                                        "src": "22990:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2623,
                                      "indexExpression": {
                                        "id": 2622,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2579,
                                        "src": "22997:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "22990:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$795_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2624,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 794,
                                    "src": "22990:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 2626,
                                  "indexExpression": {
                                    "id": 2625,
                                    "name": "lotKeyWin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2594,
                                    "src": "23012:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22990:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$838_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 2627,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 832,
                                "src": "22990:41:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 2628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23035:42:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x0000000000000000000000000000000000000000"
                              },
                              "src": "22990:87:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f204f574e455253",
                              "id": 2630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23079:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d",
                                "typeString": "literal_string \"NO OWNERS\""
                              },
                              "value": "NO OWNERS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bad0b9c08d1b9625918952757b514427529066902497cd8a761c9ac7c1c9cc9d",
                                "typeString": "literal_string \"NO OWNERS\""
                              }
                            ],
                            "id": 2620,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22982:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22982:109:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2632,
                        "nodeType": "ExpressionStatement",
                        "src": "22982:109:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2636,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "23127:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2638,
                                    "indexExpression": {
                                      "id": 2637,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2579,
                                      "src": "23134:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23127:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$795_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2639,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 794,
                                  "src": "23127:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 2641,
                                "indexExpression": {
                                  "id": 2640,
                                  "name": "lotKeyWin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2594,
                                  "src": "23149:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23127:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$838_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 2642,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lotOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 832,
                              "src": "23127:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2643,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "23170:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2645,
                                "indexExpression": {
                                  "id": 2644,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2579,
                                  "src": "23177:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23170:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$795_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2646,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 777,
                              "src": "23170:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2633,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "23102:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "23102:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23102:96:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2648,
                        "nodeType": "ExpressionStatement",
                        "src": "23102:96:6"
                      },
                      {
                        "expression": {
                          "id": 2658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2649,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "23248:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2651,
                                  "indexExpression": {
                                    "id": 2650,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2579,
                                    "src": "23255:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23248:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2652,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "23248:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2654,
                              "indexExpression": {
                                "id": 2653,
                                "name": "lotKeyWin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2594,
                                "src": "23270:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23248:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2655,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "23248:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$826",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2656,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 826,
                              "src": "23289:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$826_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 2657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SETTLED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 825,
                            "src": "23289:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$826",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "23248:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SLot_$826",
                            "typeString": "enum Market.SLot"
                          }
                        },
                        "id": 2659,
                        "nodeType": "ExpressionStatement",
                        "src": "23248:53:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2661,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "23329:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2662,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "23339:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$795_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2664,
                                  "indexExpression": {
                                    "id": 2663,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2579,
                                    "src": "23346:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23339:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$795_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2665,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 794,
                                "src": "23339:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$838_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2667,
                              "indexExpression": {
                                "id": 2666,
                                "name": "lotKeyWin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2594,
                                "src": "23361:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23339:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Lot_$838_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            ],
                            "id": 2660,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "23319:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Lot_$838_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct Market.Lot memory)"
                            }
                          },
                          "id": 2668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23319:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2669,
                        "nodeType": "EmitStatement",
                        "src": "23314:58:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2577,
                    "nodeType": "StructuredDocumentation",
                    "src": "22345:149:6",
                    "text": "@notice Settle lot for a owner. Owner's share of the reward amount get's transfered to owner's account\n @param frameKey Frame's timestamp"
                  },
                  "id": 2671,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleLot",
                  "nameLocation": "22509:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2579,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "22524:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2671,
                        "src": "22519:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2578,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "22519:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22518:15:6"
                  },
                  "returnParameters": {
                    "id": 2581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22543:0:6"
                  },
                  "scope": 2705,
                  "src": "22500:880:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2685,
                    "nodeType": "Block",
                    "src": "23544:69:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2678,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2674,
                              "src": "23566:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2677,
                            "name": "closeFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2576,
                            "src": "23555:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23555:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2680,
                        "nodeType": "ExpressionStatement",
                        "src": "23555:20:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2682,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2674,
                              "src": "23596:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2681,
                            "name": "settleLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2671,
                            "src": "23586:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23586:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2684,
                        "nodeType": "ExpressionStatement",
                        "src": "23586:19:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2672,
                    "nodeType": "StructuredDocumentation",
                    "src": "23388:107:6",
                    "text": "@notice User can claim the reward if he owns the winning lot\n @param frameKey Frame's timestamp"
                  },
                  "functionSelector": "ae169a50",
                  "id": 2686,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReward",
                  "nameLocation": "23510:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2674,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "23527:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2686,
                        "src": "23522:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2673,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "23522:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23521:15:6"
                  },
                  "returnParameters": {
                    "id": 2676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23544:0:6"
                  },
                  "scope": 2705,
                  "src": "23501:112:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2703,
                    "nodeType": "Block",
                    "src": "23819:70:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2697,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 752,
                                  "src": "23857:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketFactory_$2816",
                                    "typeString": "contract MarketFactory"
                                  }
                                },
                                "id": 2698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2724,
                                "src": "23857:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23857:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2700,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2689,
                              "src": "23874:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2694,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "23832:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "23832:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23832:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2702,
                        "nodeType": "ExpressionStatement",
                        "src": "23832:49:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2687,
                    "nodeType": "StructuredDocumentation",
                    "src": "23621:137:6",
                    "text": "@notice Withdraw any amount out of the contract. Only to be used in extreme cases!\n @param amount Amount you want to withdraw"
                  },
                  "functionSelector": "6f7cb60b",
                  "id": 2704,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2692,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2691,
                        "name": "isFactoryOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 963,
                        "src": "23804:14:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "23804:14:6"
                    }
                  ],
                  "name": "emptyFunds",
                  "nameLocation": "23773:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2690,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2689,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "23789:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2704,
                        "src": "23784:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2688,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "23784:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23783:13:6"
                  },
                  "returnParameters": {
                    "id": 2693,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23819:0:6"
                  },
                  "scope": 2705,
                  "src": "23764:125:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2706,
              "src": "586:23310:6",
              "usedErrors": []
            }
          ],
          "src": "33:23863:6"
        },
        "id": 6
      },
      "contracts/MarketFactory.sol": {
        "ast": {
          "absolutePath": "contracts/MarketFactory.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ],
            "IUniswapV2Factory": [
              326
            ],
            "IUniswapV2Pair": [
              568
            ],
            "Market": [
              2705
            ],
            "MarketFactory": [
              2816
            ]
          },
          "id": 2817,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2707,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:7"
            },
            {
              "absolutePath": "contracts/Market.sol",
              "file": "./Market.sol",
              "id": 2708,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2817,
              "sourceUnit": 2706,
              "src": "60:22:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
              "id": 2709,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2817,
              "sourceUnit": 327,
              "src": "84:69:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 2710,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2817,
              "sourceUnit": 569,
              "src": "155:66:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2711,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2817,
              "sourceUnit": 78,
              "src": "223:56:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                2705
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2816,
              "linearizedBaseContracts": [
                2816
              ],
              "name": "MarketFactory",
              "nameLocation": "292:13:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "8bdb2afa",
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "uniswapFactory",
                  "nameLocation": "340:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2816,
                  "src": "315:39:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                    "typeString": "contract IUniswapV2Factory"
                  },
                  "typeName": {
                    "id": 2713,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2712,
                      "name": "IUniswapV2Factory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 326,
                      "src": "315:17:7"
                    },
                    "referencedDeclaration": 326,
                    "src": "315:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                      "typeString": "contract IUniswapV2Factory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8e8f294b",
                  "id": 2719,
                  "mutability": "mutable",
                  "name": "markets",
                  "nameLocation": "395:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2816,
                  "src": "361:41:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2705_$",
                    "typeString": "mapping(address => contract Market)"
                  },
                  "typeName": {
                    "id": 2718,
                    "keyType": {
                      "id": 2715,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "369:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "361:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2705_$",
                      "typeString": "mapping(address => contract Market)"
                    },
                    "valueType": {
                      "id": 2717,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2716,
                        "name": "Market",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2705,
                        "src": "380:6:7"
                      },
                      "referencedDeclaration": 2705,
                      "src": "380:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Market_$2705",
                        "typeString": "contract Market"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "46a81c00",
                  "id": 2722,
                  "mutability": "mutable",
                  "name": "marketsKeys",
                  "nameLocation": "426:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2816,
                  "src": "409:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2720,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "409:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2721,
                    "nodeType": "ArrayTypeName",
                    "src": "409:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 2724,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "459:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2816,
                  "src": "444:20:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2740,
                    "nodeType": "Block",
                    "src": "510:99:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2729,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2724,
                            "src": "521:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2730,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "529:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "529:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "521:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2733,
                        "nodeType": "ExpressionStatement",
                        "src": "521:18:7"
                      },
                      {
                        "expression": {
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2734,
                            "name": "uniswapFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2714,
                            "src": "550:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                              "typeString": "contract IUniswapV2Factory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2736,
                                "name": "_uniswapFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2726,
                                "src": "585:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2735,
                              "name": "IUniswapV2Factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 326,
                              "src": "567:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$326_$",
                                "typeString": "type(contract IUniswapV2Factory)"
                              }
                            },
                            "id": 2737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "567:34:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                              "typeString": "contract IUniswapV2Factory"
                            }
                          },
                          "src": "550:51:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$326",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "550:51:7"
                      }
                    ]
                  },
                  "id": 2741,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2726,
                        "mutability": "mutable",
                        "name": "_uniswapFactory",
                        "nameLocation": "493:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2741,
                        "src": "485:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "485:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "484:25:7"
                  },
                  "returnParameters": {
                    "id": 2728,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "510:0:7"
                  },
                  "scope": 2816,
                  "src": "473:136:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2805,
                    "nodeType": "Block",
                    "src": "814:270:7",
                    "statements": [
                      {
                        "assignments": [
                          2766
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2766,
                            "mutability": "mutable",
                            "name": "market",
                            "nameLocation": "832:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2805,
                            "src": "825:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2705",
                              "typeString": "contract Market"
                            },
                            "typeName": {
                              "id": 2765,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2764,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2705,
                                "src": "825:6:7"
                              },
                              "referencedDeclaration": 2705,
                              "src": "825:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$2705",
                                "typeString": "contract Market"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2786,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2770,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "852:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MarketFactory_$2816",
                                "typeString": "contract MarketFactory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2772,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2743,
                                  "src": "865:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2771,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "858:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "858:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2775,
                                  "name": "_uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2745,
                                  "src": "889:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2774,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 568,
                                "src": "874:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$568_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 2776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "874:28:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            {
                              "id": 2777,
                              "name": "_period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2747,
                              "src": "904:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 2778,
                              "name": "_initTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2749,
                              "src": "913:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 2779,
                              "name": "_tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2751,
                              "src": "929:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2780,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2753,
                              "src": "935:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2781,
                              "name": "_dPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2755,
                              "src": "941:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2782,
                              "name": "_tReporting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2757,
                              "src": "950:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 2783,
                              "name": "_minTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2759,
                              "src": "963:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2784,
                              "name": "_avgPriceSwitch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2761,
                              "src": "972:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MarketFactory_$2816",
                                "typeString": "contract MarketFactory"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$568",
                                "typeString": "contract IUniswapV2Pair"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "841:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_MarketFactory_$2816_$_t_contract$_IERC20_$77_$_t_contract$_IUniswapV2Pair_$568_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_contract$_Market_$2705_$",
                              "typeString": "function (contract MarketFactory,contract IERC20,contract IUniswapV2Pair,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) returns (contract Market)"
                            },
                            "typeName": {
                              "id": 2768,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2767,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2705,
                                "src": "845:6:7"
                              },
                              "referencedDeclaration": 2705,
                              "src": "845:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$2705",
                                "typeString": "contract Market"
                              }
                            }
                          },
                          "id": 2785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "841:147:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$2705",
                            "typeString": "contract Market"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "825:163:7"
                      },
                      {
                        "expression": {
                          "id": 2794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2787,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2719,
                              "src": "999:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2705_$",
                                "typeString": "mapping(address => contract Market)"
                              }
                            },
                            "id": 2792,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 2790,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2766,
                                  "src": "1015:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2705",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2705",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 2789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1007:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2788,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1007:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1007:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "999:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2705",
                              "typeString": "contract Market"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2793,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2766,
                            "src": "1026:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2705",
                              "typeString": "contract Market"
                            }
                          },
                          "src": "999:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$2705",
                            "typeString": "contract Market"
                          }
                        },
                        "id": 2795,
                        "nodeType": "ExpressionStatement",
                        "src": "999:33:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2801,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2766,
                                  "src": "1068:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2705",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2705",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 2800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1060:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2799,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1060:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1060:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2796,
                              "name": "marketsKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2722,
                              "src": "1043:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1043:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1043:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2804,
                        "nodeType": "ExpressionStatement",
                        "src": "1043:33:7"
                      }
                    ]
                  },
                  "functionSelector": "13afc618",
                  "id": 2806,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addMarket",
                  "nameLocation": "626:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2743,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "644:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "636:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2745,
                        "mutability": "mutable",
                        "name": "_uniswapPair",
                        "nameLocation": "660:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "652:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2744,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2747,
                        "mutability": "mutable",
                        "name": "_period",
                        "nameLocation": "681:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "674:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 2746,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2749,
                        "mutability": "mutable",
                        "name": "_initTimestamp",
                        "nameLocation": "697:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "690:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 2748,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "690:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2751,
                        "mutability": "mutable",
                        "name": "_tax",
                        "nameLocation": "718:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "713:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2750,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "713:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2753,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "729:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "724:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2752,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "724:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2755,
                        "mutability": "mutable",
                        "name": "_dPrice",
                        "nameLocation": "740:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "735:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2754,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "735:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2757,
                        "mutability": "mutable",
                        "name": "_tReporting",
                        "nameLocation": "756:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "749:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 2756,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "749:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2759,
                        "mutability": "mutable",
                        "name": "_minTax",
                        "nameLocation": "774:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "769:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2758,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2761,
                        "mutability": "mutable",
                        "name": "_avgPriceSwitch",
                        "nameLocation": "788:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "783:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2760,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "783:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:169:7"
                  },
                  "returnParameters": {
                    "id": 2763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "814:0:7"
                  },
                  "scope": 2816,
                  "src": "617:467:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2814,
                    "nodeType": "Block",
                    "src": "1145:44:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2811,
                            "name": "marketsKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2722,
                            "src": "1163:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1163:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2810,
                        "id": 2813,
                        "nodeType": "Return",
                        "src": "1156:25:7"
                      }
                    ]
                  },
                  "functionSelector": "27fa35c3",
                  "id": 2815,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMarketsCount",
                  "nameLocation": "1101:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2807,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1116:2:7"
                  },
                  "returnParameters": {
                    "id": 2810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2809,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2815,
                        "src": "1140:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2808,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1139:6:7"
                  },
                  "scope": 2816,
                  "src": "1092:97:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2817,
              "src": "283:909:7",
              "usedErrors": []
            }
          ],
          "src": "33:1161:7"
        },
        "id": 7
      }
    }
  }
}
